#!/bin/bash
# List tables or table schemas

usage()
{
	echo >&2 "usage: comdb2dumpcsc [-f filename] [-s] <dbname> [table]"
	echo >&2 "    if no table specified, dumps name of all tables"
	echo >&2 "    -s list system tables, if no table specified"
	echo >&2 "    -a list table aliases, if no table specified"
	echo >&2 "    -f specify an output filename, for op1 users out there"
	echo >&2 "    -h this help"
	exit 1
}

show_sys_tables=0
show_alias=0
filename=

while [[ $1 = -* ]];do
	opt="$1"
	shift
	case "$opt" in
	-s) 
      show_sys_tables=1 
      ;;
	-a) 
      show_alias=1 
      ;;
   -f) 
      filename=$1
      shift 1
      ;;
	-h) 
      usage
      ;;
	esac
done

dbname="$1"
if [[ -z $dbname ]]; then
	echo >&2 "specify dbname, or -h for help"
	exit 1
fi

table="$2"

if [[ -z $table ]]; then
	if [[ $show_sys_tables -eq 1 ]]; then
      if [[ -z ${filename} ]]; then
         cdb2sql -tabs "$dbname" local "select name from sqlite_master where type='table'" 
      else
         cdb2sql -tabs "$dbname" local "select name from sqlite_master where type='table'" > ${filename} 2>&1
      fi
	else
      if [[ -z ${filename} ]]; then
         cdb2sql -tabs "$dbname" local "select name from sqlite_master where type='table' and name not like 'sqlite\_%' ESCAPE '\' and name not like 'comdb2\_%' ESCAPE '\'"
      else
         cdb2sql -tabs "$dbname" local "select name from sqlite_master where type='table' and name not like 'sqlite\_%' ESCAPE '\' and name not like 'comdb2\_%' ESCAPE '\'" > ${filename} 2>&1
      fi
   fi

   if [[ $show_alias -eq 1 ]]; then
      comdb2sc $dbname send stat alias  | grep -v cmd
   fi
else
   chk=$(echo $table | sed "s/[^a-zA-Z_0-9]//")
   [[ "$table" != "$chk" ]] && exit 1
   if [[ -z ${filename} ]]; then
      # only allow valid table names
      cdb2sql -tabs "$dbname" local "select csc2 from sqlite_master where type='table' and name='$table'"
   else
      cdb2sql -tabs "$dbname" local "select csc2 from sqlite_master where type='table' and name='$table'" > ${filename} 2>&1
   fi
fi
