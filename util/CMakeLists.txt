set(module util)
set(MODULE UTIL)
configure_file(${PROJECT_SOURCE_DIR}/mem/mem.h.in mem_util.h @ONLY)
set(src
  averager.c
  bb_asprintf.c
  bb_daemon.c
  bb_getopt_long.c
  bb_oscompat.c
  bbhrtime.c
  cheapstub.c
  comdb2_pthread_create.c
  comdb2file.c
  compat.c
  ctrace.c
  debug_switches.c
  dyn_array.c
  flibc.c
  fsnapf.c
  hashfuncs.c
  hostname_support.c
  int_overflow.c
  intern_strings.c
  list.c
  logmsg.c
  memdup.c
  misc.c
  nodemap.c
  object_pool.c
  parse_lsn.c
  pb_alloc.c
  perf.c
  plhash.c
  pool.c
  pooltest.c
  portmuxusr.c
  priority_queue.c
  quantize.c
  queue.c
  queuetest.c
  roll_file.c
  rtcpu.c
  sbuf2.c
  schema_lk.c
  segstring.c
  sltpck.c
  str0.c
  strbuf.c
  string_ref.c
  switches.c
  tcputil.c
  thdpool.c
  thread_malloc.c
  thread_util.c
  time_accounting.c
  timers.c
  tohex.c
  utilmisc.c
  walkback.c
  xstring.c
)
if(WITH_SSL)
  list(APPEND src ssl_support.c)
endif()
if(COMDB2_LEGACY_DEFAULTS)
  add_definitions(-DLEGACY_DEFAULTS)
endif()
add_library(util ${src})
include_directories(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${PROJECT_BINARY_DIR}/mem
  ${PROJECT_BINARY_DIR}/protobuf
  ${PROJECT_SOURCE_DIR}/bbinc
  ${PROJECT_SOURCE_DIR}/berkdb
  ${PROJECT_SOURCE_DIR}/cdb2api
  ${PROJECT_SOURCE_DIR}/db
  ${PROJECT_SOURCE_DIR}/dlmalloc
  ${PROJECT_SOURCE_DIR}/mem
  ${PROJECT_SOURCE_DIR}/protobuf
  ${PROJECT_SOURCE_DIR}/sockpool
  ${PROTOBUF-C_INCLUDE_DIR}
  ${OPENSSL_INCLUDE_DIR}
  ${UNWIND_INCLUDE_DIR}
)
add_dependencies(util mem)
set_source_files_properties(walkback.c PROPERTIES COMPILE_FLAGS -DUSE_UNWIND)
set_source_files_properties(dyn_array.c PROPERTIES COMPILE_FLAGS -I${PROJECT_SOURCE_DIR}/bdb)
