#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

echo "Running t1.req"
cdb2sql ${CDB2_OPTIONS} -s -f t1.req $dbnm default > t1.actual
diff t1.expected t1.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t1.expected,t1.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running t2.req"
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "drop table dtus" &> /dev/null
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table dtus { `cat t_dtus.csc2 ` }"
cdb2sql ${CDB2_OPTIONS} -s -f t2.req $dbnm default >t2.actual 2> t2.err
diff t2.expected t2.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t2.expected,t2.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running schemachange"
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table dtus { `cat t_dtms.csc2 ` }"

echo "Running t3.req"
cdb2sql ${CDB2_OPTIONS} -s -f t3.req $dbnm default >t3.actual
diff t3.expected t3.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t3.expected,t3.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running t4.req"
cdb2sql ${CDB2_OPTIONS} -s -f t4.req $dbnm default >t4.actual
diff t4.expected t4.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t4.expected,t4.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running schemachange"
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table dtus { `cat t_dtus.csc2 ` }"

echo "Running t5.req"
cdb2sql ${CDB2_OPTIONS} -s -f t5.req $dbnm default>t5.actual
diff t5.expected t5.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t5.expected,t5.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Testing lua types"
cdb2sql ${CDB2_OPTIONS} $dbnm default "create procedure usec { $(cat microseconds.lua) }"
cdb2sql ${CDB2_OPTIONS} -s -f t6.req $dbnm default > t6.actual
diff t6.expected t6.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{t6.expected,t6.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running vesselalerts.req"
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "drop table vesselalerts" &> /dev/null
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table vesselalerts { `cat vesselalerts.csc2 ` }"
cdb2sql ${CDB2_OPTIONS} -s -f vesselalerts.req $dbnm default &> vesselalerts.actual
diff vesselalerts.expected vesselalerts.actual
if [[ $? -ne 0 ]]
then
echo "diff ${PWD}/{vesselalerts.expected,vesselalerts.actual}"
echo "^^^^^^ failed."
exit 1
fi

echo "Running client typed datetime queries"
cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select now(3)' 9 | cut -d' ' -f1 | cut -d'.' -f2 | wc -c`
if [[ $cnt -ne 7 ]]
then
echo "client typed (server milli -> client micro) query failed."
exit 1
fi

# looking for trailing 000 as it is a promotion
cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select now(3)' 9 | cut -d' ' -f1 | cut -d'.' -f2 | grep -c '000$'`
if [[ $cnt -ne 1 ]]
then
echo "client typed (server milli -> client micro) query failed."
exit 1
fi

cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select cast("2017-07-14T183510.006" as datetime)' 9 | grep -c '2017-07-14T183510.006000'`
if [[ $cnt -ne 1 ]]
then
echo "client typed (server milli -> client micro) query failed."
exit 1
fi

cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select now(6)' 6 | cut -d' ' -f1 | cut -d'.' -f2 | wc -c`
if [[ $cnt -ne 4 ]]
then
echo "client typed (server micro -> client milli) query failed."
exit 1
fi

cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select cast("2017-07-14T183510.000003" as datetime)' 6 | grep -c '2017-07-14T183510.000'`
if [[ $cnt -ne 1 ]]
then
echo "client typed (server milli -> client micro) query failed."
exit 1
fi

echo "Running client typed interval queries"
cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select now(3) - now(3)' 10 | grep -c '0.000000'`
if [[ $cnt -ne 1 ]]; then
  echo "client typed (server milli -> client micro) query failed."
  exit 1
fi

cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'select now(6) - now(6)' 8 | grep -c '0.000"'`
if [[ $cnt -ne 1 ]]; then
  echo "client typed (server micro -> client milli) query failed."
  exit 1
fi

echo "Running SP typed datetime store proc"
cdb2sql ${CDB2_OPTIONS} $dbnm default "create procedure us2ms { $(cat sp_us_to_ms.lua) }"
cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'exec procedure us2ms()' | cut -d' ' -f1 | cut -d'.' -f2 | wc -c`
if [[ $cnt -ne 4 ]]; then
  echo "SP typed (server micro -> client milli) query failed."
  exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbnm default "create procedure ms2us { $(cat sp_ms_to_us.lua) }"
cnt=`cdb2sql ${CDB2_OPTIONS} $dbnm default 'exec procedure ms2us()' | cut -d' ' -f1 | cut -d'.' -f2 | wc -c`
if [[ $cnt -ne 7 ]]; then
  echo "SP typed (server milli -> client micro) query failed."
  exit 1
fi

echo "Running SP db:now()"
cdb2sql ${CDB2_OPTIONS} $dbnm default "create procedure nowarg { $(cat sp_db_now_arg.lua) }"
cdb2sql ${CDB2_OPTIONS} $dbnm default 'exec procedure nowarg()'
if [[ $? -ne 0 ]]; then
  exit 1
fi

echo "Passed."
exit 0
