# 2018-01-08
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
#
# Tests for the sqlite3_normalize() extension function.
#

set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix normalize

if {![info exists DB]} {set DB ""}

do_test 200 {
  execsql {
    CREATE TABLE t1(a,b);
  }
} {}
do_test 201 {
  set STMT [sqlite3_prepare_v3 $DB \
      "SELECT a, b FROM t1 WHERE b = ? ORDER BY a;" -1 0 TAIL]

  sqlite3_bind_null $STMT 1
} {}
do_test 202 {
  sqlite3_normalized_sql $STMT
} {SELECT a,b FROM t1 WHERE b=?ORDER BY a;}
do_test 203 {
  sqlite3_finalize $STMT
} {SQLITE_OK}

do_test 210 {
  set STMT [sqlite3_prepare_v3 $DB \
      "SELECT a, b FROM t1 WHERE b = ? ORDER BY a;" -1 2 TAIL]

  sqlite3_bind_null $STMT 1
} {}
do_test 211 {
  sqlite3_normalized_sql $STMT
} {SELECT a,b FROM t1 WHERE b=?ORDER BY a;}
do_test 212 {
  sqlite3_finalize $STMT
} {SQLITE_OK}

do_test 220 {
  set STMT [sqlite3_prepare_v3 $DB \
      "SELECT a, b FROM t1 WHERE b = 'a' ORDER BY a;" -1 2 TAIL]
} {SELECT a, b FROM t1 WHERE b = 'a' ORDER BY a;}
do_test 221 {
  sqlite3_normalized_sql $STMT
} {SELECT a,b FROM t1 WHERE b=?ORDER BY a;}
do_test 222 {
  sqlite3_finalize $STMT
} {SQLITE_OK}

do_test 297 {
  execsql {
    DROP TABLE t1;
  }
} {}
do_test 298 {
  execsql {
    CREATE TABLE t1(a,b,c,d,e,col_f,w,x,y,z);
    CREATE TABLE t2(x,col_y);
  }
} {}
do_test 299 {
  sqlite3_create_function db
} {SQLITE_OK}

foreach {tnum sql flags norm} {
  300
  {SELECT * FROM t1 WHERE a IN (1) AND b=51.42}
  0x2
  {0 {SELECT*FROM t1 WHERE a IN(?,?,?)AND b=?;}}

  310
  {SELECT a, b+15, c FROM t1 WHERE d NOT IN (SELECT x FROM t2);}
  0x2
  {0 {SELECT a,b+?,c FROM t1 WHERE d NOT IN(SELECT x FROM t2);}}

  320
  { SELECT NULL, b FROM t1 -- comment text
     WHERE d IN (WITH t(a) AS (VALUES(5)) /* CTE */
                 SELECT a FROM t)
        OR e='hello';
  }
  0x2
  {0 {SELECT?,b FROM t1 WHERE d IN(WITH t(a)AS(VALUES(?))SELECT a FROM t)OR e=?;}}

  321
  {/*Initial comment*/
   -- another comment line
   SELECT NULL  /* comment */ , b FROM t1 -- comment text
     WHERE d IN (WITH t(a) AS (VALUES(5)) /* CTE */
                 SELECT a FROM t)
        OR e='hello';
  }
  0x2
  {0 {SELECT?,b FROM t1 WHERE d IN(WITH t(a)AS(VALUES(?))SELECT a FROM t)OR e=?;}}

  330
  {/* Query containing parameters */
   SELECT x,?1,y,@abc,z,?99,w FROM t1 /* Trailing comment */}
  0x2
  {0 {SELECT x,?,y,?,z,?,w FROM t1;}}

  340
  {/* Long list on the RHS of IN */
   SELECT 15 IN (1,2,3,(SELECT * FROM t1),'xyz',x'abcd',22*(x+5),null);}
  0x2
  {1 {no such column: x}}

  350
  {SELECT x'abc'; -- illegal token}
  0x2
  {1 {unrecognized token: "x'abc'"}}

  360
  {SELECT a,NULL,b FROM t1 WHERE c IS NOT NULL or D is null or e=5}
  0x2
  {0 {SELECT a,?,b FROM t1 WHERE c IS NOT NULL OR d IS NULL OR e=?;}}

  370
  {/* IN list exactly 5 bytes long */
   SELECT * FROM t1 WHERE x IN (1,2,3);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(?,?,?);}}

  400
  {SELECT a FROM t1 WHERE x IN (1,2,3) AND sqlite_version();}
  0x2
  {0 {SELECT a FROM t1 WHERE x IN(?,?,?)AND sqlite_version();}}

  410
  {SELECT a FROM t1 WHERE x IN (1,2,3) AND sleep();}
  0x2
  {1 {wrong number of arguments to function sleep()}}

  420
  {SELECT a FROM t1 WHERE x IN (1,2,3) AND sleep('abc');}
  0x2
  {0 {SELECT a FROM t1 WHERE x IN(?,?,?)AND sleep(?);}}

  430
  {SELECT "a" FROM t1 WHERE "x" IN ("1","2",'3');}
  0x2
  {0 {SELECT a FROM t1 WHERE x IN(?,?,?);}}

  440
  {SELECT 'a' FROM t1 WHERE 'x';}
  0x2
  {0 {SELECT?FROM t1 WHERE?;}}

  450
  {SELECT [a] FROM t1 WHERE [x];}
  0x2
  {0 {SELECT a FROM t1 WHERE x;}}

  460
  {SELECT * FROM t1 WHERE x IN (x);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(x);}}

  470
  {SELECT * FROM t1 WHERE x IN (x,a);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(x,a);}}

  480
  {SELECT * FROM t1 WHERE x IN ([x],"a");}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(x,a);}}

  500
  {SELECT * FROM t1 WHERE x IN ([x],"a",'b',sqlite_version());}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(x,a,?,sqlite_version());}}

  520
  {SELECT * FROM t1 WHERE x IN (SELECT x FROM t1);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(SELECT x FROM t1);}}

  540
  {SELECT * FROM t1 WHERE x IN ((SELECT x FROM t1));}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN((SELECT x FROM t1));}}

  550
  {SELECT a, a+1, a||'b', a+"b" FROM t1;}
  0x2
  {0 {SELECT a,a+?,a||?,a+b FROM t1;}}

  570
  {SELECT * FROM t1 WHERE x IN (1);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(?,?,?);}}

  580
  {SELECT * FROM t1 WHERE x IN (1,2);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(?,?,?);}}

  590
  {SELECT * FROM t1 WHERE x IN (1,2,3);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(?,?,?);}}

  600
  {SELECT * FROM t1 WHERE x IN (1,2,3,4);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(?,?,?);}}

  610
  {SELECT * FROM t1 WHERE x IN (SELECT x FROM t1);}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(SELECT x FROM t1);}}

  620
  {SELECT * FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (1,2,3));}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(?,?,?));}}

  630
  {SELECT * FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (x));}
  0x2
  {0 {SELECT*FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(x));}}

  640
  {SELECT x FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (
   SELECT x FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (
   SELECT x FROM t1 WHERE x IN (x)))));}
  0x2
  {0 {SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(x)))));}}

  650
  {SELECT x FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (
   SELECT x FROM t1 WHERE x IN (SELECT x FROM t1 WHERE x IN (
   SELECT x FROM t1 WHERE x IN (1)))));}
  0x2
  {0 {SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(SELECT x FROM t1 WHERE x IN(?,?,?)))));}}

  660
  {SELECT x FROM t1 WHERE x IN (1) UNION ALL SELECT x FROM t1 WHERE x IN (1);}
  0x2
  {0 {SELECT x FROM t1 WHERE x IN(?,?,?)UNION ALL SELECT x FROM t1 WHERE x IN(?,?,?);}}

  670
  {SELECT "col_f", [col_f] FROM t1;}
  0x2
  {0 {SELECT col_f,col_f FROM t1;}}

  680
  {SELECT a, "col_f" FROM t1 LEFT OUTER JOIN t2 ON [t1].[col_f] == [t2].[col_y];}
  0x2
  {0 {SELECT a,col_f FROM t1 LEFT OUTER JOIN t2 ON t1.col_f==t2.col_y;}}

  690
  {SELECT * FROM ( WITH x AS ( SELECT * FROM t1 WHERE x IN ( 1)) SELECT 10);}
  0x2
  {0 {SELECT*FROM(WITH x AS(SELECT*FROM t1 WHERE x IN(?,?,?))SELECT?);}}

  700
  {SELECT rowid, oid, _rowid_ FROM t1;}
  0x2
  {0 {SELECT rowid,oid,_rowid_ FROM t1;}}

  710
  {SELECT x FROM t1 WHERE x IS NULL;}
  0x2
  {0 {SELECT x FROM t1 WHERE x IS NULL;}}

  740
  {SELECT x FROM t1 WHERE x IS NOT NULL;}
  0x2
  {0 {SELECT x FROM t1 WHERE x IS NOT NULL;}}

  750
  {SELECT x FROM t1 WHERE x = NULL;}
  0x2
  {0 {SELECT x FROM t1 WHERE x=?;}}

  760
  {SELECT x FROM t1 WHERE x IN ([x] IS NOT NULL, NULL, 1, 'a', "b", x'00');}
  0x2
  {0 {SELECT x FROM t1 WHERE x IN(x IS NOT NULL,?,?,?,b,?);}}

  900
  {INSERT INTO t1 (x) VALUES("sl1"), (1), ("sl2"), ('i');}
  0x2
  {0 {INSERT INTO t1(x)VALUES(?),(?),(?),(?);}}

  910
  {UPDATE t1 SET x = "sl1" WHERE x IN (1, "sl2", 'i');}
  0x2
  {0 {UPDATE t1 SET x=?WHERE x IN(?,?,?);}}

  920
  {UPDATE t1 SET x = "y" WHERE x IN (1, "sl1", 'i');}
  0x2
  {0 {UPDATE t1 SET x=y WHERE x IN(?,?,?);}}

  930
  {DELETE FROM t1 WHERE x IN (1, "sl1", 'i');}
  0x2
  {0 {DELETE FROM t1 WHERE x IN(?,?,?);}}

  1000
  {SELECT +1;}
  0x2
  {0 {SELECT?;}}

  1010
  {SELECT -1;}
  0x2
  {0 {SELECT?;}}

  1020
  {SELECT ++1;}
  0x2
  {0 {SELECT?;}}

  1030
  {SELECT (+1);}
  0x2
  {0 {SELECT(?);}}

  1040
  {SELECT (-1);}
  0x2
  {0 {SELECT(?);}}

  1050
  {SELECT -(+1);}
  0x2
  {0 {SELECT(?);}}

  1060
  {SELECT -(-1);}
  0x2
  {0 {SELECT(?);}}

  1070
  {SELECT 1+1;}
  0x2
  {0 {SELECT?+?;}}

  1080
  {SELECT 1-1;}
  0x2
  {0 {SELECT?-?;}}

  1090
  {SELECT 1+1+abs(-1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1100
  {SELECT +1+1+abs(-1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1110
  {SELECT -1+1+abs(-1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1120
  {SELECT 1-1+abs(-1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1130
  {SELECT +1-1+abs(-1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1140
  {SELECT -1-1+abs(-1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1150
  {SELECT 1+1+abs(+1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1160
  {SELECT +1+1+abs(+1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1170
  {SELECT -1+1+abs(+1);}
  0x2
  {0 {SELECT?+?+abs(?);}}

  1180
  {SELECT 1-1+abs(+1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1190
  {SELECT +1-1+abs(+1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1200
  {SELECT -1-1+abs(+1);}
  0x2
  {0 {SELECT?-?+abs(?);}}

  1210
  {CREATE TABLE 't1' (a int UNIQUE);}
  0x2
  {0 {CREATE TABLE t1(a int UNIQUE);}}

  1220
  {INSERT INTO 't1' ('a') VALUES (1);}
  0x2
  {0 {INSERT INTO t1(a)VALUES(?);}}

  1230
  {UPDATE 't1' SET 'a'=2 WHERE 'a'=1;}
  0x2
  {0 {UPDATE t1 SET?=?WHERE?=?;}}

  1240
  {SELECT 'a' FROM 't1' JOIN 't2' ON 't1.a'='t2.b';}
  0x2
  {0 {SELECT?FROM t1 JOIN t2 ON?=?;}}

  1250
  {SELECT "t1" FROM "t1";}
  0x2
  {0 {SELECT?FROM t1;}}
} {
  do_test $tnum {
    set code [catch {
      set STMT [sqlite3_prepare_v3 $DB $sql -1 $flags TAIL]
      sqlite3_normalized_sql $STMT
    } res]
    if {[info exists STMT]} {
      sqlite3_finalize $STMT; unset STMT
    }
    list $code $res
  } $norm
}

finish_test
