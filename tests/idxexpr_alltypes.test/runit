#!/usr/bin/env bash

dbname=$1
NRUNS=100

cdb2sql ${CDB2_OPTIONS} $dbname default - <<"EOF"
drop table if exists alltypes
create table alltypes {
schema
{
    short           alltypes_short           null=yes
    u_short         alltypes_ushort          null=yes
    int             alltypes_int             null=yes
    u_int           alltypes_uint            null=yes
    longlong        alltypes_longlong        null=yes
    float           alltypes_float           null=yes
    double          alltypes_double          null=yes
    byte            alltypes_byte[16]        null=yes
    cstring         alltypes_cstring[16]     null=yes
    datetime        alltypes_datetime        null=yes
    datetimeus      alltypes_datetimeus      null=yes
    intervalym      alltypes_intervalym      null=yes
    intervalds      alltypes_intervalds      null=yes
    intervaldsus    alltypes_intervaldsus    null=yes
    decimal32       alltypes_decimal32       null=yes
    decimal64       alltypes_decimal64       null=yes
    decimal128      alltypes_decimal128      null=yes
}
}
EOF

# Create a random blob 
function randbl
{
    typeset sz=$1

    for i in $(seq 1 $sz); do

        echo -n $(echo "obase=16; $(($RANDOM % 16))" | bc);

    done;

    echo

    return 0
}

function failexit
{
    echo "Failed $1"
    exit -1
}

function assertcnt 
{
    tbl=$1
    target=$2
    cnt=$(cdb2sql --tabs ${CDB2_OPTIONS} $dbname default "select count(*) from $tbl")
    if [ $? -ne 0 ] ; then
        echo "assertcnt: select error"
    fi

    #echo "count is now $cnt"
    if [[ $cnt != $target ]] ; then
        failexit "count of $tbl is now $cnt but should be $target"
    fi
}

function do_verify
{
    tbl=$1
    typeset cnt=0

    cdb2sql ${CDB2_OPTIONS} $dbname default "exec procedure sys.cmd.verify('$tbl')" &> verify.out

    if ! grep succeeded verify.out > /dev/null ; then
        failexit "verify $tbl failed"
    fi
}

function insert
{
    s=$1
    e=$2
    typeset i
    for i in $(seq $s $e); do
        bl=$(randbl 32)
        echo "insert into alltypes values ($i, $i, $i, $i, $i, '$i.$i', cast(now(6) as real), x'$bl', 'abcdefghij$i', now(), now(6), cast($i as years), cast($i as days), cast($i as days), '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 92))', '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 381))', '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 6141))')"
    done | cdb2sql -s ${CDB2_OPTIONS} $dbname default - >/dev/null
}

insert 1 2000 &
insert 2001 4000 &
insert 4001 6000 &
insert 6001 8000 &
insert 8001 10000 &
wait

NRECS=10000
assertcnt alltypes $NRECS
do_verify alltypes

cdb2sql ${CDB2_OPTIONS} $dbname default - <<"EOF"
alter table alltypes {
schema
{
    short           alltypes_short           null=yes
    u_short         alltypes_ushort          null=yes
    int             alltypes_int             null=yes
    u_int           alltypes_uint            null=yes
    longlong        alltypes_longlong        null=yes
    float           alltypes_float           null=yes
    double          alltypes_double          null=yes
    byte            alltypes_byte[16]        null=yes
    cstring         alltypes_cstring[16]     null=yes
    datetime        alltypes_datetime        null=yes
    datetimeus      alltypes_datetimeus      null=yes
    intervalym      alltypes_intervalym      null=yes
    intervalds      alltypes_intervalds      null=yes
    intervaldsus    alltypes_intervaldsus    null=yes
    decimal32       alltypes_decimal32       null=yes
    decimal64       alltypes_decimal64       null=yes
    decimal128      alltypes_decimal128      null=yes
}
keys
{
    dup "SHORT" = (short)"alltypes_short * 1"
    dup "USHORT" = (u_short)"alltypes_ushort * 1"
    dup "INT" = (int)"alltypes_int * 1"
    dup "UINT" = (u_int)"alltypes_uint * 1"
    dup "LONGLONG" = (longlong)"alltypes_longlong * 1"
    dup "FLOAT" = (float)"alltypes_float * 1"
    dup "DOUBLE" = (double)"alltypes_double * 1"
    dup "BYTE[16]" = (byte[16])"alltypes_byte"
    dup "CSTRING[16]" = (cstring[16])"upper(alltypes_cstring)"
    dup "DATETIME" = (datetime)"alltypes_datetime * 1"
    dup "DATETIMEUS" = (datetimeus)"alltypes_datetimeus * 1"
    dup "INTERVALYM" = (intervalym)"alltypes_intervalym * 1"
    dup "INTERVALDS" = (intervalds)"alltypes_intervalds * 1"
    dup "INTERVALDSUS" = (intervalds)"alltypes_intervaldsus * 1"
    dup "DECIMAL32" = (decimal32)"alltypes_decimal32 * 1"
    dup "DECIMAL64" = (decimal64)"alltypes_decimal64 * 1"
    dup "DECIMAL128" = (decimal128)"alltypes_decimal128 * 1"
}
}
EOF
if [[ $? != 0 ]]; then
    failexit "alter table failed"
fi

assertcnt alltypes $NRECS
do_verify alltypes

for i in $(seq 1 $NRUNS); do
    what=$(($RANDOM % 3))
    id=$(($RANDOM % 100))
    rd=$(($RANDOM % 100))
    bl=$(randbl 32)
    case $what in
        0) echo "insert into alltypes values ($id, $id, $id, $id, $id, '$id.$id', cast(now(6) as real), x'$bl', 'abcdefghij$id', now(), now(6), cast($id as years), cast($id as days), cast($id as days), '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 92))', '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 381))', '$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 6141))')"
        ;;
        1)  echo "delete from alltypes where alltypes_int = $id limit 1"
        ;;
        2)  echo "update alltypes set alltypes_short=$rd, alltypes_ushort=$rd, alltypes_int=$rd, alltypes_uint=$rd, alltypes_longlong=$rd, alltypes_float='$rd.$rd', alltypes_double=cast(now(6) as real), alltypes_byte=x'$bl', alltypes_cstring='abcdefghij$rd', alltypes_datetime=now(), alltypes_datetimeus=now(6), alltypes_intervalym=cast($rd as years), alltypes_intervalds=cast($rd as days), alltypes_intervaldsus=cast($rd as days), alltypes_decimal32='$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 92))', alltypes_decimal64='$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 381))', alltypes_decimal128='$(($RANDOM % 1000)).$(($RANDOM % 1000))e$(($RANDOM % 6141))' where alltypes_int = $id"
        ;;
    esac
done | cdb2sql -s ${CDB2_OPTIONS} $dbname default - >/dev/null

do_verify alltypes

echo "Success"
exit 0
