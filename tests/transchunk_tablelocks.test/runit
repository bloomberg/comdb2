#!/usr/bin/env bash
bash -n "$0" | exit 1

TMPDIR=${TMPDIR:-/tmp}

#set -e 
set -x

# args
a_dbn=$1
master=`cdb2sql --tabs ${CDB2_OPTIONS} $a_dbn default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | awk '{print $1}' | cut -d':' -f1`
r="cdb2sql -s ${CDB2_OPTIONS} $a_dbn default -"
rt="cdb2sql -s ${CDB2_OPTIONS} $a_dbn default "
rtm="cdb2sql -s -n ${master} ${CDB2_OPTIONS} $a_dbn default "

outlog='log.run'

echo "Starting"
echo "Starting" > $outlog

echo "Inserting 20 rows in 2 chunks, will alter the table after first chunk"
echo "Inserting 20 rows in 2 chunks, will alter the table after first chunk" >> $outlog
$r >> $outlog 2>&1 << "EOF" &
set transaction chunk 10
begin
insert into t select value from generate_series(1, 20)
commit
EOF

sleep 1

$rt "alter table t add column b int" >> $outlog

wait

$rt "select count(*) from t" >> $outlog
$rt "select * from t order by a" >> $outlog

echo "Inserting 10 more rows in 1 chunks"
echo "Inserting 10 more rows in 1 chunks" >> $outlog
$rt "insert into t values (100, 0)" >> $outlog
$rt "insert into t values (101, 1)" >> $outlog
$rt "insert into t values (102, 2)" >> $outlog
$rt "insert into t values (103, 3)" >> $outlog
$rt "insert into t values (104, 4)" >> $outlog
$rt "insert into t values (105, 5)" >> $outlog
$rt "insert into t values (106, 6)" >> $outlog
$rt "insert into t values (107, 7)" >> $outlog
$rt "insert into t values (108, 8)" >> $outlog
$rt "insert into t values (109, 9)" >> $outlog

$rt "select count(*) from t" >> $outlog
$rt "select * from t order by a" >> $outlog

echo "Deleting the rows, will drop the table after first chunk"
echo "Deleting the rows, will drop the table after first chunk" >> $outlog
$r >> $outlog 2>&1 << "EOF" &
set transaction chunk 10
begin
delete from t where 1
commit
EOF

sleep 1

$rt "drop table t" >> $outlog

wait 

$rt "select count(*) from t" >> $outlog 2>&1
$rt "select * from t order by a" >> $outlog 2>&1

# get testcase output
testcase_output=$(cat $outlog)

# get expected output
expected_output=$(cat log.expected)

# verify 
if [[ "$testcase_output" != "$expected_output" ]]; then

    echo "  ^^^^^^^^^^^^"
    echo "The above testcase (${testcase}) has failed!!!"
    echo " "
    echo "Use 'diff <expected-output> <my-output>' to see why:"
    echo "> diff ${PWD}/{log.expected,$outlog}"
    echo " "
    diff log.expected $outlog
    echo " "
    exit 1

fi

echo "Testcase passed."

