#!/usr/bin/env bash

# Remote sql ssl test
################################################################################

setup_db ()
{
    DBNAME=$1
    DBDIR=${TESTDIR}/${DBNAME}
    CDB2_CONFIG=${DBDIR}/comdb2db.cfg
    CDB2_OPTIONS="--cdb2cfg $CDB2_CONFIG"

    $TESTSROOTDIR/setup

    cdb2sql ${CDB2_OPTIONS} $DBNAME default "select comdb2_dbname(), comdb2_host()"
}

unsetup_db ()
{
    DBNAME=$1
    DBDIR=${TESTDIR}/${DBNAME}
    CDB2_CONFIG=${DBDIR}/comdb2db.cfg
    CDB2_OPTIONS="--cdb2cfg $CDB2_CONFIG"

    $TESTSROOTDIR/unsetup
}


# args
# <dbname> <dbdir> <testdir> <autodbname> <autodbnum> <cluster> <task>
echo "main db vars"
vars="TESTCASE DBNAME DBDIR TESTSROOTDIR TESTDIR CDB2_OPTIONS CDB2_CONFIG"
for required in $vars; do
    q=${!required}
    echo "$required=$q" 
    if [[ -z "$q" ]]; then
        echo "$required not set" >&2
        exit 1
    fi
done

db1=${DBNAME}
db2=srcdb${db1}
cdb2cfg1=${TESTDIR}/${db1}/comdb2db.cfg
cdb2cfg2=${TESTDIR}/${db2}/comdb2db.cfg

setup_db $db2

echo ./test_ssl.sh $db1 $cdb2cfg1 $db2 $cdb2cfg2
./test_ssl.sh $db1 $cdb2cfg1 $db2 $cdb2cfg2
result=$?

unsetup_db $db2

if (( $result != 0 )) ; then
   echo "FAILURE"
   exit 1
fi


echo "SUCCESS"
