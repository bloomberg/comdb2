#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

# Make sure we talk to the same host
host=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT comdb2_host()'`


cdb2sql $dbnm --host $host 'CREATE TABLE p (i INTEGER PRIMARY KEY, j INTEGER)'
cdb2sql $dbnm --host $host 'CREATE TABLE q (i INTEGER, j INTEGER)'
cdb2sql $dbnm --host $host 'CREATE INDEX q_i_j ON q(i, j)'

sleep 1

for i in `seq 1 200`; do
cdb2sql $dbnm --host $host "INSERT INTO p VALUES ($i, $i)"
cdb2sql $dbnm --host $host "INSERT INTO q VALUES ($i, $i)"
done
cdb2sql $dbnm --host $host 'ANALYZE p'
cdb2sql $dbnm --host $host 'ANALYZE q'

cdb2sql $dbnm --host $host "EXPLAIN SELECT * FROM p, q WHERE p.i = q.i ORDER BY p.i, q.j LIMIT 150 OFFSET 50" | grep ResetSorter

sleep 5

yes "SELECT * FROM p, q WHERE p.i = q.i ORDER BY p.i, q.j LIMIT 100 OFFSET 50" | cdb2sql $dbnm --host $host - >/dev/null &
pid=$!
sleep 5
kill $pid

# Get a steady memory snapshot
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')"
before=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')" | grep total | tail -1 | awk '{print $6}'`

sleep 5

yes "SELECT * FROM p, q WHERE p.i = q.i ORDER BY p.i, q.j LIMIT 100 OFFSET 50" | cdb2sql $dbnm --host $host - >/dev/null &
pid=$!
sleep 180
kill $pid

# Get a memory snapshot again
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')"
after=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')" | grep total | tail -1 | awk '{print $6}'`

# Should almost be identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "ratio is too high: $ratio" >&2
  exit 1
fi
