#!/usr/bin/env bash
bash -n "$0" | exit 1

. ${TESTSROOTDIR}/tools/cluster_utils.sh
. ${TESTSROOTDIR}/tools/runit_common.sh

stopfile=./stopfile.txt

function background_writer
{
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "create table if not exists t1 (a int)"
    while [ ! -f $stopfile ]; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "insert into t1 select * from generate_series(1, 1000)" >/dev/null 2>&1
    done
}

function run_test
{
    typeset -l master=$(get_master)

    echo "Base-case, not snapshot, should return NULL"
    result=$($CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $master - <<EOF
select comdb2_snapshot_lsn()
EOF
)
    echo "$result"
    if [[ "$result" != *"comdb2_snapshot_lsn()=NULL"* ]]; then
        failexit "Expected comdb2_snapshot_lsn() to return NULL, got $result"
    fi

    echo "use_current_lsn_for_non_snapshot"
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $master "put tunable 'use_current_lsn_for_non_snapshot' 1"
    result=$($CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $master - <<EOF
select comdb2_snapshot_lsn()
EOF
)
    echo "$result"
    if [[ "$result" == *"comdb2_snapshot_lsn()=NULL"* ]]; then
        failexit "Expected comdb2_snapshot_lsn() to return non-NULL, got $result"
    fi

    rm -Rf $stopfile >/dev/null 2>&1

    echo "Start background writer"
    background_writer &
    
    echo "Standalone query should return single lsn"
    result=$($CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $master - <<EOF
set transaction snapshot
select comdb2_snapshot_lsn()
EOF
)
    echo "$result"
    if [[ "$result" == *"comdb2_snapshot_lsn()=NULL"* ]]; then
        touch $stopfile
        wait
        failexit "Expected comdb2_snapshot_lsn() to return non-NULL, got $result"
    fi

    echo "Multiple queries within a transaction should return the same lsn"
    result=$($CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $master - <<EOF
set transaction snapshot
begin
select comdb2_snapshot_lsn()
select sleep(1)
select comdb2_snapshot_lsn()
select sleep(1)
select comdb2_snapshot_lsn()
select sleep(1)
rollback
EOF
)
    echo "$result"
    if [[ "$result" == *"comdb2_snapshot_lsn()=NULL"* ]]; then
        touch $stopfile
        wait
        failexit "Expected comdb2_snapshot_lsn() to return non-NULL, got $result"
    fi

    first=$(echo "$result" | grep 'comdb2_snapshot_lsn' | head -1)

    cnt=$(echo "$result" | grep -c "$first")
    if [[ "$cnt" -ne 3 ]]; then
        touch $stopfile
        wait
        failexit "Expected 3 identical comdb2_snapshot_lsn() values, got $cnt"
    fi

    touch $stopfile
    wait
}

run_test
echo "success!"
