#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

cdb2sql ${CDB2_OPTIONS} $dbnm default 'DROP TABLE IF EXISTS t'
cdb2sql ${CDB2_OPTIONS} $dbnm default 'CREATE TABLE t (i INTEGER)'
cdb2sql ${CDB2_OPTIONS} $dbnm default 'CREATE DEFAULT LUA CONSUMER watcher ON (TABLE t FOR INSERT AND UPDATE AND DELETE)'

# Know where we'll be connecting to
leader=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT host FROM comdb2_cluster WHERE is_master="Y"'`
host=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT comdb2_host()'`
peer=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "SELECT host FROM comdb2_cluster WHERE host != \"$host\" AND is_master=\"N\" LIMIT 1"`

echo leader is $leader host is $host will upgrade leader to $peer
cdb2sql $dbnm --host $leader 'EXEC PROCEDURE sys.cmd.send("flush")'

# Turn on test switch
cdb2sql $dbnm --host $host 'EXEC PROCEDURE sys.cmd.send("test_trigger_deadlock 1")'
cdb2sql $dbnm --host $host 'EXEC PROCEDURE watcher()' &
wpid=$!

cdb2sql $dbnm --host $leader 'INSERT INTO t VALUES(1)'
cdb2sql $dbnm --host $leader 'UPDATE t set i = 0 WHERE 1'
cdb2sql $dbnm --host $leader default 'DELETE FROM t'
cdb2sql $dbnm --host $leader 'EXEC PROCEDURE sys.cmd.send("flush")'
cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send(\"upgrade $peer\")"

sleep 10 # allow leader-change to complete

leader=`cdb2sql --tabs $dbnm --host $leader 'SELECT host FROM comdb2_cluster WHERE is_master="Y"'`
echo new leader is $leader
# Push LSN a iittle so wait_for_seqnum will mark this node incoherent
cdb2sql $dbnm --host $leader 'INSERT INTO t VALUES(1)'

sleep 5 # sleep a bit over (REPTIMEOUT_MINMS + DOWNGRADE_PENALTY) so we can be marked back coherent

echo can I query this node?
cdb2sql $dbnm --host $host 'SELECT 1'
if [ $? != 0 ]; then
    echo No >&2
    kill $wpid
    exit 1
fi

kill $wpid
echo Yes
