#!/bin/bash
bash -n "$0" | exit 1

set -x

SQL="cdb2sql ${CDB2_OPTIONS} $DBNAME default"
SQLT="cdb2sql --tabs ${CDB2_OPTIONS} $DBNAME default"

function get_node
{
    $SQLT 'select comdb2_host()'
}

function kill_by_pidfile() {
    pidfile=$1
    if [[ -f $pidfile ]]; then
        local pid=$(cat $pidfile)
        ps -p $pid -o args | grep -q "comdb2 ${DBNAME}"
        if [[ $? -eq 0 ]]; then
            echo "kill -9 $pid"
            kill -9 $pid
        fi
        rm -f $pidfile
    else
        failexit "kill_by_pidfile: pidfile $pidfile does not exist"
    fi
}
function kill_restart_node 
{
    node=$1
    pushd $DBDIR
    cdb2sql ${CDB2_OPTIONS} --tabs --host $node $DBNAME  'exec procedure sys.cmd.send("flush")'

    if [ -n "$CLUSTER" ] ; then
        kill_by_pidfile ${TMPDIR}/${DBNAME}.${node}.pid
        mv --backup=numbered $TESTDIR/logs/${DBNAME}.${node}.db $TESTDIR/logs/${DBNAME}.${node}.db.1
        sleep 1
        if [ $node != `hostname` ] ; then
            ssh -o StrictHostKeyChecking=no -tt $node COMDB2_ROOT=$COMDB2_ROOT $COMDB2_EXE ${DBNAME} -lrl $DBDIR/${DBNAME}.lrl >$TESTDIR/logs/${DBNAME}.${node}.db 2>&1 </dev/null &
            echo $! > ${TMPDIR}/${DBNAME}.${node}.pid
        else
            $COMDB2_EXE ${DBNAME} -lrl $DBDIR/${DBNAME}.lrl &> $TESTDIR/logs/${DBNAME}.${node}.db -pidfile ${TMPDIR}/${DBNAME}.${node}.pid &
        fi
    else
        kill_by_pidfile ${TMPDIR}/${DBNAME}.pid
        mv --backup=numbered $TESTDIR/logs/${DBNAME}.db $TESTDIR/logs/${DBNAME}.db.1
        sleep 1
        echo "$DBNAME: starting single node"
        echo "$COMDB2_EXE $DBNAME $TESTDIR/logs/${DBNAME}.db -pidfile ${TMPDIR}/$DBNAME.pid"
        $COMDB2_EXE $DBNAME >$TESTDIR/logs/${DBNAME}.db -pidfile ${TMPDIR}/$DBNAME.pid 2>&1 &
    fi

    popd

    out=0
    # wait until we can query it
    echo "$DBNAME: waiting until ready"
    while [[ "$out" != "1" ]]; do
        sleep 2
        out=$(cdb2sql ${CDB2_OPTIONS} --tabs --host $node $DBNAME  'select 1' 2>/dev/null)
    done
    echo "$DBNAME: db is up out=$out"
}

dbnm=$1


if [ "$dbnm" == "" ] ; then
    echo "need a DB name"
    exit 1
fi


echo $SQL "create table t1 (a int) "
$SQL "create table t1 (a int) "

echo $SQLT "select value from comdb2_tunables where name='dir'"
dir=`$SQLT "select value from comdb2_tunables where name='dir'"`
echo "Foundb dbdir $dir"

if [ "$dir" == "" ] ; then
    echo "Failed to find dir for $dbnm"
    exit 1
fi

echo rm "${dir}/t1*datas0"
rm "${dir}/t1*datas0"


sleep 5

node=`get_node`


echo "Using node $node"

#ssh -o StrictHostKeyChecking=no -tt $node "echo 'setattr ignore_bad_table 1' >> $DBDIR/${DBNAME}.lrl"

echo "Restarting node $node"
kill_restart_node $node

cdb2sql --tabs --host ${node} ${CDB2_OPTIONS} $DBNAME 'select 1'
if [ "$?" != "0" ] ; then
    echo "Failed to come up"
    exit 1
fi

found=$SQLT "select name from sqlite_master where name='t1'"
if [ "$found" != "" ] ; then
    echo "Deleting file failed; test failed"
    exit 1
fi

echo "Success"
