#!/bin/bash
bash -n "$0" | exit 1

dbname=$1

cdb2sql ${CDB2_OPTIONS} $dbname default - <<"EOF"
drop table if exists t1
create table t1 {
    schema {
        int id
        int coverage
    }
}$$
EOF

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF
insert into t1(id, coverage) values(0, 0)
EOF

sleep 1
cdb2sql -s --tabs ${CDB2_OPTIONS} $dbname default - <<EOF > asof0
set timezone UTC
select now()
EOF
sed -i -e 's/"//g' asof0
echo "asof0 is:"
cat asof0
sleep 1

cdb2sql ${CDB2_OPTIONS} $dbname default - <<"EOF"
alter table t1 {
    schema {
        int id
        int coverage
        datetimeus bus_start null=yes
        datetimeus bus_end null=yes
        datetimeus sys_start null=yes
        datetimeus sys_end null=yes
    }
    keys {
        "PK" = id + bus_start + bus_end
    }
    periods {
        BUSINESS(bus_start, bus_end)
        SYSTEM(sys_start, sys_end)
    }
    constraints {
        no_overlap "PK" -> bus_start:bus_end
    }
}$$
EOF

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF
set timezone UTC
insert into t1(id, coverage, bus_start, bus_end) values(1, 1, '2008-01-01', '2009-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(1, 2, '2010-01-01', '2011-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(1, 3, '2012-01-01', '2013-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(1, 4, '2014-01-01', '2015-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(1, 5, '2015-01-01', '2016-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(2, 101, '2008-01-01', '2009-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(2, 102, '2010-01-01', '2011-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(2, 103, '2012-01-01', '2013-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(2, 104, '2014-01-01', '2015-01-01')
insert into t1(id, coverage, bus_start, bus_end) values(2, 105, '2015-01-01', '2016-01-01')
EOF

out=$(cdb2sql ${CDB2_OPTIONS} $dbname default "select * from t1 for system_time as of 0" 2>&1)
if [[ $? == 0 ]]; then
    echo "for system_time as of 0 should have failed. $out"
    exit 1
fi

out=$(cdb2sql ${CDB2_OPTIONS} $dbname default "select * from t1 for system_time as of '`cat asof0`'" 2>&1)
if [[ $? == 0 ]]; then
    echo "for system_time as of '`cat asof0`' should have failed. $out"
    exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > out1 2>&1
set timezone UTC
select id, coverage, bus_start, bus_end from t1 order by id, bus_start
EOF
difs=`diff out1 out1.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff out1 out1.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} -f select.sql $dbname default > bus1 2>&1
difs=`diff bus1 bus1.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff bus1 bus1.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

sleep 1
cdb2sql -s --tabs ${CDB2_OPTIONS} $dbname default - <<EOF > asof1
set timezone UTC
select now()
EOF
sed -i -e 's/"//g' asof1
echo "asof1 is:"
cat asof1
sleep 1

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF
set timezone UTC
update t1 for portion of business_time from '2007-06-01' to '2009-06-01' set coverage = coverage + 10
update t1 for portion of business_time from '2010-06-01' to '2010-08-01' set coverage = coverage + 10
update t1 for portion of business_time from '2011-11-01' to '2012-03-01' set coverage = coverage + 10
update t1 for portion of business_time from '2012-11-01' to '2014-03-01' set coverage = coverage + 10
update t1 for portion of business_time from '2014-11-01' to '2015-03-01' set coverage = coverage + 10
update t1 for portion of business_time from '2015-11-01' to '2016-03-01' set coverage = coverage + 10
EOF

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > out2 2>&1
set timezone UTC
select id, coverage, bus_start, bus_end from t1 order by id, bus_start
EOF
difs=`diff out2 out2.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff out2 out2.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} -f select.sql $dbname default > bus2 2>&1
difs=`diff bus2 bus2.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff bus2 bus2.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

sleep 1
cdb2sql -s --tabs ${CDB2_OPTIONS} $dbname default - <<EOF > asof2
set timezone UTC
select now()
EOF
sed -i -e 's/"//g' asof2
echo "asof2 is:"
cat asof2
sleep 1

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF
set timezone UTC
delete from t1 for portion of business_time from '2007-06-01' to '2009-06-01' where id = 1
delete from t1 for portion of business_time from '2010-06-01' to '2010-08-01' where id = 1
delete from t1 for portion of business_time from '2011-11-01' to '2012-03-01' where id = 1
delete from t1 for portion of business_time from '2012-11-01' to '2014-03-01' where id = 1
delete from t1 for portion of business_time from '2014-11-01' to '2015-03-01' where id = 1
delete from t1 for portion of business_time from '2015-11-01' to '2016-03-01' where id = 1
EOF

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > out3 2>&1
set timezone UTC
select id, coverage, bus_start, bus_end from t1 order by id, bus_start
EOF
difs=`diff out3 out3.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff out3 out3.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} -f select.sql $dbname default > bus3 2>&1
difs=`diff bus3 bus3.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff bus3 bus3.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > out_asof1 2>&1
set temporal system_time as of '`cat asof1`'
set timezone UTC
select id, coverage, bus_start, bus_end from t1 order by id, bus_start
EOF
sed -i '1d' out_asof1
difs=`diff out_asof1 out1.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff out_asof1 out1.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > bus_asof1 2>&1
set temporal system_time as of '`cat asof1`'
`cat select.sql`
EOF
sed -i '1d' bus_asof1
difs=`diff bus_asof1 bus1.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff bus_asof1 bus1.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > out_asof2 2>&1
set temporal system_time as of '`cat asof2`'
set timezone UTC
select id, coverage, bus_start, bus_end from t1 order by id, bus_start
EOF
sed -i '1d' out_asof2
difs=`diff out_asof2 out2.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff out_asof2 out2.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbname default - <<EOF > bus_asof2 2>&1
set temporal system_time as of '`cat asof2`'
`cat select.sql`
EOF
sed -i '1d' bus_asof2
difs=`diff bus_asof2 bus2.expected`
if [[ ! -z "${difs}" ]] ; then
   echo "diff bus_asof2 bus2.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

echo "SUCCESS"
