#!/usr/bin/env bash
source ${TESTSROOTDIR}/tools/runit_common.sh

dbnm=$1
OUT=output.txt

if [ "$TESTCASE" == "renametable_lightweight_generated" ]; then
    EXP=reqoutput_lightweight.txt
else
    EXP=reqoutput.txt
fi

cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - > $OUT 2>&1
insert into t values (40)
insert into t values (20)
insert into t values (30)
insert into t values (10)
insert into t values (50)
select * from t order by id
alter table t rename to t2
\$\$
select * from t2 order by id
select * from t order by id
insert into t2 values (80)
insert into t2 values (90)
select * from t2 order by id
select * from t order by id
alter table t2 rename to t
\$\$
select * from t2 order by id
select * from t order by id
insert into t values (100)
insert into t values (110)
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
select * from t2 order by id
select * from t order by id
insert into t values (100)
insert into t values (110)
update t set id=id+1
select * from t order by id
alter table t add column b int
\$\$
select * from t order by id
EOF

#make sure we do not allow rename for partitions
# create the partition
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table testtv (a int)"
if (( $? != 0 )) ; then
   echo "FAILURE creating a new table tvtest"
   exit 1
fi

starttime1=$(get_timestamp '-60*60*(24+1)')
echo cdb2sql ${CDB2_OPTIONS} $dbnm default "CREATE TIME PARTITION ON testtv as tv PERIOD 'daily' RETENTION 3 START '${starttime1}'"
cdb2sql ${CDB2_OPTIONS} $dbnm default "CREATE TIME PARTITION ON testtv as tv PERIOD 'daily' RETENTION 3 START '${starttime1}'" >> $OUT
if (( $? != 0 )) ; then
   echo "FAILURE creating a time partition tv"
   exit 1
fi
sleep 10

cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table tv rename to tv2"
if (( $? == 0 )) ; then
   echo "FAILURE blocking time partition rename"
   exit 1
fi

# test alias
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table talias (a int)"
if (( $? != 0 )) ; then
   echo "FAILURE to create table talias"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table talias rename to talias2"
if (( $? != 0 )) ; then
   echo "FAILURE to rename alias table"
   exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbnm default "select * from comdb2_tables" >> $OUT
if (( $? != 0 )) ; then
   echo "FAILURE to select from comdb2_tables"
   exit 1
fi
cdb2sql ${CDB2_OPTIONS} $dbnm default "select name from sqlite_master" >> $OUT
if (( $? != 0 )) ; then
   echo "FAILURE to select name from sqlite_master"
   exit 1
fi

# Rename after dropping table with target name in txn
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table t2(i int)"
cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - >> $OUT 2>&1
begin
drop table t
alter table t2 rename to t
\$\$
commit
EOF

# Rename before dropping table with target name in txn
cdb2sql ${CDB2_OPTIONS} $dbnm default "create table t2(i int)"
cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - >> $OUT 2>&1
begin
alter table t rename to t2
\$\$
drop table t2
commit
EOF

# Rename to an existing table
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t2 rename to t" &>> $OUT

# Rename to our own name
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t2 rename to t2" &>> $OUT

# Rename after renaming table with target name in txn
cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - >> $OUT 2>&1
begin
alter table t rename to dummy\$\$
alter table t2 rename to t\$\$
commit
EOF

df=$(diff $OUT $EXP)
if [ $? -ne 0 ] ; then
     echo "  ^^^^^^^^^^^^"
     echo "The above testcase (${testcase}) has failed!!!"
     echo " "
     echo "Use 'diff <expected-output> <my-output>' to see why:"
     echo "> diff ${PWD}/${OUT} ${PWD}/${EXP}"
     echo " "
     diff output.txt reqoutput.txt
     echo " "
     exit 1
fi 

echo "Success"
