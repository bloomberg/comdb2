#!/usr/bin/env bash

default_implementation="modsnap" # "original" or "modsnap"
modsnap_switches="gbl_use_modsnap_for_snapshot gbl_modsnap_asof"

verify_switch_values() {
	local rc=0 switches=$1 exp_on_off=$2
	local info=$(cdb2sql $CDB2_OPTIONS $DBNAME default "exec procedure sys.cmd.send('stat snapconfig')")

	for switch in $switches;
	do
		if ! (echo "$info" | grep --ignore-case "$switch=$exp_on_off" > /dev/null);
		then
			echo "$switch does not have expected value ($exp_on_off): $info"
			rc=1
			break
		fi
	done

	return $rc
}

verify_implementation() {
	local rc=0 impl=$1
	local info=$(cdb2sql $CDB2_OPTIONS $DBNAME default "exec procedure sys.cmd.send('stat snapconfig')")

	if ! (echo "$info" | grep --ignore-case "Implementation set to '$impl'" > /dev/null); then
		echo "Snapshot implementation is not expected ('$impl'): $info"
		rc=1
	fi

	return $rc
}

check_original_implementation_is_enabled() {
	verify_implementation 'original' && \
	verify_switch_values "$modsnap_switches" "off"

	return $?
}

check_modsnap_implementation_is_enabled() {
	verify_implementation 'modsnap' && \
	verify_switch_values "$modsnap_switches" "on"

	return $?
}

main() {
	if [ "$TESTCASE" == "siconfig" ];
	then
		check_${default_implementation}_implementation_is_enabled
	elif [ "$TESTCASE" == "siconfig_modsnap_generated" ];
	then
		check_modsnap_implementation_is_enabled
	elif [ "$TESTCASE" == "siconfig_orig_generated" ];
	then
		check_original_implementation_is_enabled
	else
		echo "No test for $TESTCASE"
		return 1
	fi

	return $?
}

main
exit $?
