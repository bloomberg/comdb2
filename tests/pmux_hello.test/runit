#!/bin/bash

debug=1
[[ "$debug" == 1 ]] && set -x

db=$1
export COMDB2_PMUX_PORT=19900
export pmux_pid=0
export start_iters=10
export start_sleep=5
export CDB2_CONFIG=./cdb2config.cfg
export dbpidfile=./database.pid

if [[ -z "$stage" ]]; then
    echo "Setting stage to 'default' (set 'stage' var to override)."
    stage="default"
fi


failexit()
{
    echo "$1"
    kill -9 $pmux_pid
    rm /tmp/pmux.${COMDB2_PMUX_PORT}
    exit 1
}

test_rte()
{
    echo -e "rte\ngarbage\n" | nc -w 1 localhost ${COMDB2_PMUX_PORT}
    echo -e "rte something\ngarbage\n" | nc -w 1 localhost ${COMDB2_PMUX_PORT}
    ${TESTSROOTDIR}/tools/send_msg_port.sh "rte" ${COMDB2_PMUX_PORT} &> rte.out
    ${TESTSROOTDIR}/tools/send_msg_port.sh "garbage" ${COMDB2_PMUX_PORT} &>> rte.out
    cat <<EOF > rte.expected
-1
-1 unknown command, type 'help' for a brief usage description
EOF

    if ! diff rte.expected rte.out ; then
        failexit "differing rte.expected rte.out"
    fi
}

function empty_used_list_crash
{
    [[ "$debug" == 1 ]] && echo "STARTING ${FUNCNAME[0]}" && set -x
    echo "del pmux" | nc -w 1 localhost ${COMDB2_PMUX_PORT}
    echo "used" | nc -w 1 localhost ${COMDB2_PMUX_PORT}
    sleep 1
    kill -0 $pmux_pid
    if [[ $? != 0 ]]; then
        failexit "${FUNCNAME[0]} test failed: empty used list killed pmux"
    fi
}

function start_database
{
    DBLRL=$1

    jj=0

    while [[ $jj -lt $start_iters ]]; do
        ${COMDB2_EXE} ${db} --lrl $DBLRL &
        dbpid=$!
        echo $dbpid > $dbpidfile
        sleep $start_sleep
        kill -0 $dbpid
        if [[ $? == 0 ]]; then
            echo "Database started"
            return 0
        fi
        let jj=jj+1
    done
    failexit "Couldn't start the database"
}

function verify_hello_reuse
{
    [[ "$debug" == 1 ]] && echo "STARTING ${FUNCNAME[0]}" && set -x
    iters=20
    start_timeout=30

    # Create a db
    DBDIR=$TESTDIR/$DBNAME
    mkdir $DBDIR
    mkdir -p $TESTDIR/var/log/cdb2 $TESTDIR/tmp/cdb2

    # Create config file
    echo "$db 0 localhost" > $CDB2_CONFIG
    echo "comdb2_config:default_type=testsuite" >> $CDB2_CONFIG
    echo "comdb2_config:portmuxport=$COMDB2_PMUX_PORT" >> $CDB2_CONFIG
    echo "comdb2_config:allow_pmux_route:true" >> $CDB2_CONFIG

    # Tweak lrl
    DBLRL=$DBDIR/${db}.lrl
    echo "portmux_port ${COMDB2_PMUX_PORT}" >> $DBLRL
    echo "portmux_bind_path /tmp/pmux.${COMDB2_PMUX_PORT} " >> $DBLRL
    echo "dir $DBDIR " >> $DBLRL
    df $DBDIR | awk '{print $1 }' | grep "tmpfs\|nfs" && echo "setattr directio 0" >> ${DBLRL}
    ${COMDB2_EXE} $db --create --lrl $DBLRL

    # Start the test
    i=0
    while [[ $i -lt $iters ]]; do
        start_database $DBLRL
        dbpid=$(cat $dbpidfile)

        t=0
        started=0
        while [[ $t -lt $start_timeout ]]; do
            $CDB2SQL_EXE --cdb2cfg $CDB2_CONFIG $db default "select 1" >/dev/null 2>&1
            if [[ $? == 0 ]]; then
                started=1
            else
                started=0
                sleep 1
            fi
            let t=t+1
        done

        # send rte and then garbage to verify pmux does not crash
        echo -e "rte comdb2/replication/$db\ngarbage\n" | nc -w 1 localhost ${COMDB2_PMUX_PORT}

        kill -0 $pmux_pid
        if [[ $? != 0 ]]; then
            failexit "${FUNCNAME[0]} rte test failed: empty used list killed pmux"
        fi

        kill -9 $dbpid

        if [[ $started == 0 ]]; then
            failexit "${FUNCNAME[0]} pmux hello-test failed on iteration $i"
        fi
        sleep 1

        let i=i+1
    done
}

test_basic_actions()
{
    cat <<EOF > help.expected
get [/echo] service     : discover port for service
reg service             : obtain/discover port for new service
del service             : forget port assignment for service
use service port        : set specific port registration for service
stat                    : dump some stats
used                    : dump active port assignments
rte                     : get route to instance service/port
hello service           : keep active connection
active                  : list active connections
exit                    : shutdown pmux (may be restarted by system)
EOF

    ${TESTSROOTDIR}/tools/send_msg_port.sh "help" ${COMDB2_PMUX_PORT} &> help.out
    if ! diff help.expected help.out ; then
        failexit "differing help.expected help.out"
    fi

    #----------
    ${TESTSROOTDIR}/tools/send_msg_port.sh "stat" ${COMDB2_PMUX_PORT} &> stat.out
    cat <<EOF > stat.expected
free ports: 90
EOF

    if ! diff stat.expected stat.out ; then
        failexit "differing stat.expected stat.out"
    fi

    #----------
    name="comdb2/replication/dummynameforadatabase12345678901234567890"
    ${TESTSROOTDIR}/tools/send_msg_port.sh "reg $name" ${COMDB2_PMUX_PORT} &> reg.out
    cat <<EOF > reg.expected
22000
EOF
    if ! diff reg.expected reg.out ; then
        failexit "differing reg.expected reg.out"
    fi

    #----------
    name="comdb2/replication/dummynameforadatabase12345678901234567890"
    ${TESTSROOTDIR}/tools/send_msg_port.sh "get $name" ${COMDB2_PMUX_PORT} &> get.out
    cat <<EOF > get.expected
22000
EOF
    if ! diff get.expected get.out ; then
        failexit "differing get.expected get.out"
    fi

    #----------
    ${TESTSROOTDIR}/tools/send_msg_port.sh "stat" ${COMDB2_PMUX_PORT} &> stat2.out
    cat <<EOF > stat2.expected
free ports: 89
$name -> 22000
EOF
    if ! diff stat2.expected stat2.out ; then
        failexit "differing stat2.expected stat2.out"
    fi

    #----------
    ${TESTSROOTDIR}/tools/send_msg_port.sh "del $name" ${COMDB2_PMUX_PORT} &> del.out
    cat <<EOF > del.expected
0
EOF
    if ! diff del.expected del.out ; then
        failexit "differing del.expected del.out"
    fi

    #----------
    ${TESTSROOTDIR}/tools/send_msg_port.sh "stat" ${COMDB2_PMUX_PORT} &> stat.out
    if ! diff stat.expected stat.out ; then
        failexit "differing stat.expected stat.out"
    fi


    #----------
    name="comdb2/replication/dummynameforadatabase12345678901234567890"
    ${TESTSROOTDIR}/tools/send_msg_port.sh "use $name 19001" ${COMDB2_PMUX_PORT} &> use.out
    cat <<EOF > use.expected
-1
EOF
    if ! diff use.expected use.out ; then
        failexit "differing use.expected use.out"
    fi

    #----------
    name="comdb2/replication/dummynameforadatabase12345678901234567890"
    ${TESTSROOTDIR}/tools/send_msg_port.sh "use $name 22001" ${COMDB2_PMUX_PORT} &> use.out
    cat <<EOF > use.expected
0
EOF
    if ! diff use.expected use.out ; then
        failexit "differing use.expected use.out"
    fi

    #----------
    name="comdb2/replication/dummynameforadatabase12345678901234567890"
    ${TESTSROOTDIR}/tools/send_msg_port.sh "get $name" ${COMDB2_PMUX_PORT} &> get.out
    cat <<EOF > get.expected
22001
EOF
    if ! diff get.expected get.out ; then
        failexit "differing get.expected get.out"
    fi

    #----------
    ${TESTSROOTDIR}/tools/send_msg_port.sh "stat" ${COMDB2_PMUX_PORT} &> stat3.out
    cat <<EOF > stat3.expected
free ports: 89
$name -> 22001
EOF
    if ! diff stat3.expected stat3.out ; then
        failexit "differing stat3.expected stat3.out"
    fi

}

function runtest
{
    [[ "$debug" == 1 ]] && echo "STARTING ${FUNCNAME[0]}" && set -x

    echo Send exit in case previous pmux still running
    ${TESTSROOTDIR}/tools/send_msg_port.sh "exit" ${COMDB2_PMUX_PORT}

    echo Start pmux
    ${PMUX_EXE} -n -r 22000:22090 -f -p ${COMDB2_PMUX_PORT} -b /tmp/pmux.${COMDB2_PMUX_PORT} &
    pmux_pid=$!

    sleep 5
    test_rte
    test_basic_actions

    empty_used_list_crash
    verify_hello_reuse

    kill -9 $pmux_pid
    rm /tmp/pmux.${COMDB2_PMUX_PORT}
}

runtest

echo "Success"
exit 0
