#!/usr/bin/env bash
bash -n "$0" | exit 1

# Time partition testcase for comdb2
################################################################################

# args
# <dbname>
dbname=$1

OUT="run.log"

rm $OUT 2>/dev/null
touch $OUT


function timepart_stats
{
    dbn=$1
    # check the current partitions 
    echo cdb2sql ${CDB2_OPTIONS} $dbn default "exec procedure sys.cmd.send('partitions')" | 
        egrep -v "STARTTIME|LOW|HIGH|SOURCE_ID"
    cdb2sql -tabs ${CDB2_OPTIONS} $dbn default "exec procedure sys.cmd.send('partitions')" |
        egrep -v "STARTTIME|LOW|HIGH|SOURCE_ID" >> $OUT
    if (( $? != 0 )) ; then
        echo "FAILURE"
        exit 1
    fi

    echo cdb2sql ${CDB2_OPTIONS} $dbn default  "select name, period, retention, nshards, version,shard0name from comdb2_timepartitions "
    cdb2sql ${CDB2_OPTIONS} $dbn default  "select name, period, retention, nshards, version,shard0name from comdb2_timepartitions " >> $OUT
    if (( $? != 0 )) ; then
        echo "FAILURE"
        exit 1
    fi

    echo cdb2sql ${CDB2_OPTIONS} $dbn default  "select name, shardname from comdb2_timepartshards"
    cdb2sql ${CDB2_OPTIONS} $dbn default  "select name, shardname from comdb2_timepartshards" >> $OUT
    if (( $? != 0 )) ; then
        echo "FAILURE"
        exit 1
    fi
}

timepart_stats $dbname

# create the partition
starttime1=`perl -MPOSIX -le 'local $ENV{TZ}=":/usr/share/zoneinfo/UTC"; print strftime "%Y-%m-%dT%H%M%S UTC", localtime(time()-60*60*(24*3+1))'`
echo cdb2sql ${CDB2_OPTIONS} $dbname default "CREATE TIME PARTITION ON t1 as tv PERIOD 'daily' RETENTION 3 START '${starttime1}'" 
cdb2sql ${CDB2_OPTIONS} $dbname default "CREATE TIME PARTITION ON t1 as tv PERIOD 'daily' RETENTION 3 START '${starttime1}'" >> $OUT
if (( $? != 0 )) ; then
   echo "FAILURE"
   exit 1
fi
sleep 10

timepart_stats $dbname

echo cdb2sql ${CDB2_OPTIONS} $dbname default "insert into '\$0_A2BDF977' values (1, 'A row')"
cdb2sql ${CDB2_OPTIONS} $dbname default "insert into '\$0_A2BDF977' values (1, 'A row')" >> $OUT
if (( $? != 0 )) ; then
    echo "FAILURE"
    exit 1
fi
echo cdb2sql ${CDB2_OPTIONS} $dbname default "insert into '\$2_EDD2AB7A' values (10, 'A row')"
cdb2sql ${CDB2_OPTIONS} $dbname default "insert into '\$2_EDD2AB7A' values (10, 'A row')" >> $OUT
if (( $? != 0 )) ; then
    echo "FAILURE"
    exit 1
fi

echo cdb2sql ${CDB2_OPTIONS} $dbname default "select * from tv order by a"
cdb2sql ${CDB2_OPTIONS} $dbname default "select * from tv order by a" >> $OUT
if (( $? != 0 )) ; then
    echo "FAILURE"
    exit 1
fi


echo "cdb2sql ${CDB2_OPTIONS} $dbname default - < reader.sql"
cdb2sql ${CDB2_OPTIONS} $dbname default - < reader.sql  >> $OUT 2>&1 &


sleep 5
echo "cdb2sql ${CDB2_OPTIONS} $dbname default - < writer.sql"
cdb2sql ${CDB2_OPTIONS} $dbname default - < writer.sql >> $OUT 2>&1

sleep 20

difs=`diff $OUT $OUT.expected`
if [[ $? != 0 ]]; then
   echo "FAILURE"
   exit 1
fi
if [[ ! -z "${difs}" ]] ; then
   echo "diff $OUT $OUT.expected"
   echo ${difs}
   echo "FAILURE"
   exit 1
fi

echo "SUCCESS"
