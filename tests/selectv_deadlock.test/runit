#!/usr/bin/env bash
bash -n "$0" | exit 1

export debug=0
[[ $debug == "1" ]] && set -x

export myhost=$(hostname)
export selectv_deadlock=${TESTSBUILDDIR}/selectv_deadlock
export threads=8
export timelimit=600
export numrecs=100000
export updatespertxn=4000

function write_prompt
{
    typeset func=$1
    echo "[$func] $2"
}

function failexit
{
    [[ $debug == "1" ]] && set -x
    typeset func="failexit"
    typeset f=$1
    write_prompt $func "$f failed: $2"
    exit -1
}

function get_master
{
    [[ $debug == "1" ]] && set -x
    typeset func="get_master"
    typeset tries=$total_tries
    $CDB2SQL_EXE -tabs $CDB2_OPTIONS $DBNAME default "exec procedure sys.cmd.send(\"bdb cluster\")" | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'
}

function run_tests
{
    typeset func="run_tests"
    start=$(date +%s)
    $selectv_deadlock -d $DBNAME -T $threads -M -I -R $numrecs -m $timelimit -l $updatespertxn -c $CDB2_CONFIG
    export r=$?
    stop=$(date +%s)
    [[ $r != 0 ]] && failexit $func "selectv_deadlock test failed"
    master=$(get_master)
    deadlocks=$($CDB2SQL_EXE -tabs $CDB2_OPTIONS $DBNAME -host $master "select value from comdb2_metrics where name='deadlocks'")
    elapsed=$(( stop - start ))
    echo "Number of deadlocks: $deadlocks, elapsed-time: $elapsed seconds"
    [[ $deadlocks -gt 50 ]] && failexit $func "too many deadlocks: $deadlocks"
}

run_tests
echo "Success"
exit 0

