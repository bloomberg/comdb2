#!/usr/bin/env bash
bash -n "$0" | exit 1

# Debug variable
debug=0

# Grab my database name.
dbnm=$1

# Number of records I will add.
nrecs=8

# How often to print an update message
upmsg=100

# Number of schema changes
nusc=100

# Flag for updater to stop
killu=0

# Background pid of the updater
upid=-1

# Do schema changes
function do_schema_changes
{
    typeset max=$1
    typeset iter=0
    typeset scnt=0

    schema=t$(( scnt % 2 + 1)).csc2

    while [[ $scnt -lt $max ]]; do 

        cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat $schema ` }"

        if [[ $? != 0 ]]; then

            echo "Error schema-changing on iteration $scnt"
            echo "Testcase failed"
            return 1

        fi

        let scnt=scnt+1

    done

    return 0
}

# Update all records in the table
function update_all_records
{
    typeset prmsg=$1
    typeset iter=0

    [[ "$debug" == 1 ]] && set -x

    while :; do 

        cdb2sql -s ${CDB2_OPTIONS} $dbnm default "update t1 set c=x'1234' where b='test1'" >/dev/null 2>&1
        let iter=iter+1

        if [[ -n "$prmsg" && $(( iter % prmsg )) == 0 ]]; then

            echo "Updated all of table t1 $iter times."

        fi

    done
}

# Insert a bunch of records.
j=0
echo "Inserting records."

while [[ $j -lt $nrecs ]]; do 

    cdb2sql -s ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b,c) values ($j,'test1',x'1234')" >/dev/null 2>&1
    let j=j+1

done

# Print a count
cdb2sql ${CDB2_OPTIONS} $dbnm default "select count(*) from t1"


# Start an updater
update_all_records $upmsg &

# Grab background pid of the updater
upid=$!

# Do my schema changes
do_schema_changes $nusc

ret=$?

# Kill the updater
kill -9 $upid

if [[ "$ret" == 0 ]]; then
    echo "Success!  Performed $nusc schema-changes."
    echo "Success"
    exit 0
else
    echo "Failed"
    exit 1
fi
