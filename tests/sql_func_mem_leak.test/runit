#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

# Make sure that all queries go to the same node.
mach=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'select comdb2_host()'`
echo "target machine is $mach"

# Create table; insert rows
cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm "drop table if exists leak"
cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm "create table leak (i int, t text)"
yes "insert into leak values (1, 'Lorem ipsum')" | head -2000 | cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm ->/dev/null

# Warm up
yes 'select i from leak where lower(t) in ("abcd") and i != 1' | head -10 | cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm ->/dev/null
cdb2sql --tabs -s ${CDB2_OPTIONS} --host $mach $dbnm 'exec procedure sys.cmd.send("memstat sqlite")' >/dev/null

# Get memory snapshot
before=`cdb2sql --tabs $dbnm --host $mach "SELECT SUM(used) FROM comdb2_memstats WHERE lower(name)= 'sqlite'"`

# Run the leak reproducer
yes 'select i from leak where lower(t) in ("abcd") and i != 1' | head -1000 | cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm ->/dev/null

# Get memory snapshot again
after=`cdb2sql --tabs $dbnm --host $mach "SELECT SUM(used) FROM comdb2_memstats WHERE lower(name)= 'sqlite'"`

# Should be almost identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "ratio is too high: $ratio" >&2
  exit 1
fi
