#!/usr/bin/env bash
bash -n "$0" | exit 1

dbname=$1
tblname="t1"

if [[ -z ${dbname} ]] ; then 
   echo "Usage: $0 dbname"
   exit 1
fi  

#test will take 1 minute
NROWS=60

#populate db
echo "Inserting $NROWS rows"
j=0
while (( $j != $NROWS )); do
   cdb2sql -s ${CDB2_OPTIONS} ${dbname} default "insert into ${tblname} values ($j, 10+$j, 100+$j, 1000+$j)" >/dev/null 2>&1
   let j=j+1
done

#exit 

#run sql sql in the background
echo "Running select in the background"
cdb2sql ${CDB2_OPTIONS} ${dbname} default "select *, sleep(1) from ${tblname} order by a" > sel_out.txt &


#master swing
echo "Sleep 10"
sleep 10
echo "Downgrade master"
master=`cdb2sql -tabs ${CDB2_OPTIONS} $dbname default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
cdb2sql ${CDB2_OPTIONS} $dbname --host $master "exec procedure sys.cmd.send('downgrade')"

echo "Sleep 10s more to make sure sql recovery phase is done"
sleep 10

#drop table 
echo "Trying to drop to table; if locks are working, this will wait for select"
cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t1"


#check on the output
echo "waiting for select to finish"
wait

echo "Checking results"
diffs=`diff sel_out.txt sel_out.txt.expected`

if [[ ! -z ${diffs} ]] ; then
   echo "Failed"
   echo "diff ${PWD}/sel_out.txt ${PWD}/sel_out.txt.expected"
   echo $diffs

   exit 1
fi

echo "Success"
