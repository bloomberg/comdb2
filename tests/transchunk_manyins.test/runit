#!/usr/bin/env bash
bash -n "$0" | exit 1

TMPDIR=${TMPDIR:-/tmp}

#set -e 
#set -x

# args
a_dbn=$1
master=`cdb2sql --tabs ${CDB2_OPTIONS} $a_dbn default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | awk '{print $1}' | cut -d':' -f1`
r="cdb2sql -s ${CDB2_OPTIONS} $a_dbn default -"
rt="cdb2sql -s ${CDB2_OPTIONS} $a_dbn default "
rtm="cdb2sql -s -n ${master} ${CDB2_OPTIONS} $a_dbn default "

outlog='log.run'

txnsize=2
#>>$outlog

function check_done
{ 
    $rtm "exec procedure sys.cmd.send('long')" | grep -A 3 "'t'" | grep DONE >> $outlog
}

echo "Starting coproc"
echo "Starting coproc" > $outlog

coproc kiddo (${r} 2>&1)

echo "set transaction chunk ${txnsize}" >&${kiddo[1]}
echo "begin" >&${kiddo[1]}
a=1
for ((i = 1; i <= 25000; ++i)) ; do
    echo "insert into t values ( $a ), ( $(($a+1)) ), ( $(($a+2)) ), ( $(($a+3)) )" >&${kiddo[1]}
    a=$(($a+4))
done
echo "commit" >&${kiddo[1]}
exec {kiddo[1]}>&-

read out <&${kiddo[0]}

if [[ "$out" != "" ]]; then
    echo "Error \"$out\""
    exit 1
fi

wait ${kiddo_pid}
if  (( $? != 0 )) ; then
    echo "Failed to insert ret code $?"
    exit 1
fi

check_done

$rt "select count(*) from t" >> $outlog

# get testcase output
testcase_output=$(cat $outlog)

# get expected output
expected_output=$(cat log.expected)

# verify 
if [[ "$testcase_output" != "$expected_output" ]]; then

    echo "  ^^^^^^^^^^^^"
    echo "The above testcase (${testcase}) has failed!!!"
    echo " "
    echo "Use 'diff <expected-output> <my-output>' to see why:"
    echo "> diff ${PWD}/{log.expected,$outlog}"
    echo " "
    diff log.expected $outlog
    echo " "
    exit 1

fi

echo "Testcase passed."

