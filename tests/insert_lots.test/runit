#!/usr/bin/env bash
bash -n "$0" | exit 1

set -e
set -x
source ${TESTSROOTDIR}/tools/runit_common.sh

# Debug variable
debug=0

dbnm=$1

if [ "x$dbnm" == "x" ] ; then
    echo "need a DB name"
    exit 1
fi

# Number of insert_records function calls
nins=0


assertthdpoolcntzero()
{
    node=$1
    cdb2sql --tabs ${CDB2_OPTIONS} ${DBNAME} --host $node 'exec procedure sys.cmd.send("get_verify_thdpool_status")' &> assertthdpoolcntzero.out
    grep "Current num threads       : 0"  assertthdpoolcntzero.out
    if [ $? -ne 0 ] ; then
        failexit "nonzero count of current threads running verify, see assertthdpoolcntzero.out"
    fi
}

gen_series_test()
{
    MAX=9000
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "create table t2 (i int)"
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "insert into t2 select * from generate_series(1, $MAX) "
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "select distinct i from t2" | sort -n > gen.out
    seq 1 $MAX > gen.exp
    if ! diff gen.out gen.exp ; then 
        failexit 'genseries content not what it is expected'
    fi
}

echo $CDB2_CONFIG
THRDS=20
CNT=10000
ITERATIONS=5
TRANSIZE=0
if [[ $DBNAME == *"largetrangenerated"* ]] ; then
    TRANSIZE=2800
fi

gen_series_test

time ${TESTSBUILDDIR}/insert_lots_mt --dbname $dbnm --numthreads $THRDS --cntperthread $CNT --iterations $ITERATIONS --transize $TRANSIZE> ins.out
assertcnt t1 $((THRDS * CNT * ITERATIONS))
do_verify t1

node=`cdb2sql ${CDB2_OPTIONS} -s --tabs $dbnm default 'SELECT comdb2_host()'`

### testing cancelling verify behavior ###

declare -a args
args+=("'t1','parallel','verbose'")
args+=("'t1','parallel'")
args+=("'t1','verbose'")
args+=("'t1'")
for arg in ${args[@]}; do
echo cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $node "exec procedure sys.cmd.verify($arg)"
cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $node "exec procedure sys.cmd.verify($arg)" &> verify_t1.out &
pid=$!
sleep 1
kill -9 $pid
sleep 3
assertthdpoolcntzero $node
done

echo "Success"
