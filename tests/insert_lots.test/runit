#!/usr/bin/env bash
bash -n "$0" | exit 1

set -e
source ${TESTSROOTDIR}/tools/runit_common.sh

dbnm=$1

if [ "x$dbnm" == "x" ] ; then
    echo "need a DB name"
    exit 1
fi

assertthdpoolcntzero()
{
    local node=$1
    cdb2sql --tabs ${CDB2_OPTIONS} ${DBNAME} --host $node 'exec procedure sys.cmd.send("get_verify_thdpool_status")' &> assertthdpoolcntzero.out
    grep "Current num threads       : 0"  assertthdpoolcntzero.out
    if [ $? -ne 0 ] ; then
        failexit "nonzero count of current threads running verify, see assertthdpoolcntzero.out"
    fi
}

gen_series_test()
{
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "drop table if exists t1"
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "drop table if exists t2"

    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "create table t1 {$(<t1.csc2)}"
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "create table t2 (i int)"

    local MAX=9000
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "insert into t2 select * from generate_series(1, $MAX) "
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "select distinct i from t2" | sort -n > gen.out
    seq 1 $MAX > gen.exp
    if ! diff gen.out gen.exp ; then 
        failexit 'genseries content not what it is expected'
    fi
}

insert_lots_test()
{
    local THRDS=20
    local CNT=10000
    local ITERATIONS=5
    local TRANSIZE=$1

    echo "Running with TRANSIZE: ${TRANSIZE}"

    time ${TESTSBUILDDIR}/insert_lots_mt --dbname $dbnm --numthreads $THRDS --cntperthread $CNT --iterations $ITERATIONS --transize $TRANSIZE> ins.out
    assertcnt t1 $((THRDS * CNT * ITERATIONS))
    do_verify t1
    local node=`cdb2sql ${CDB2_OPTIONS} -s --tabs $dbnm default 'SELECT comdb2_host()'`

    ### testing cancelling verify behavior ###

    local args=()
    args+=("'t1','parallel','verbose'")
    args+=("'t1','parallel'")
    args+=("'t1','verbose'")
    args+=("'t1'")
    for arg in ${args[@]}; do
        cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $node "exec procedure sys.cmd.verify($arg)" &> verify_t1.out &
        pid=$!
        sleep 1
        kill -9 $pid
        sleep 3
        assertthdpoolcntzero $node
    done
}

gen_series_test
insert_lots_test 0

gen_series_test
insert_lots_test 2000

echo "Success"
