(z='phase 0')
(out='Freed in-memory ruleset')
(out='Freed in-memory ruleset')
(z='phase 1')
(1=1)
(x=1)
(x=2)
(x=3)
(comdb2_ctxinfo('priority')=xx, x=1)
(comdb2_ctxinfo('priority')=xx, x=2)
(comdb2_ctxinfo('priority')=xx, x=3)
(x=1)
(x=2)
(x=3)
(z='phase 2')
(out='[ERROR] t01.ruleset:5, field 'fingerprint' forbidden by configuration')
(z='phase 3')
(2=2)
(x=1)
(x=2)
(x=3)
(comdb2_ctxinfo('priority')=xx, x=1)
(comdb2_ctxinfo('priority')=xx, x=2)
(comdb2_ctxinfo('priority')=xx, x=3)
(x=1)
(x=2)
(x=3)
(z='phase 4')
(out='ruleset (nil) matched 0, ruleNo=0, action=NONE, flags=NONE (0x0), priority=HIGHEST, pool=<null>')
(z='phase 5')
(out='Ruleset loaded from file "t00.ruleset"')
(out='Upgraded ruleset from version 1 to 2')
(out='comdb2_dump_ruleset: ruleset 0x00000000, version 2, generation 3, rule count 9, rule fingerprint count 0')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #8 <null> seqNo 0, action {NONE} (0x0), adjustment 0, pool {<null>}, flags {NONE} (0x0), mode {NONE} (0x0), originHost {<null>}, originTask {<null>}, user {<null>}, sql {<null>}, fingerprint {<null>}, evalCount 1, matchCount 1')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #9 <null> seqNo 0, action {REJECT} (0x1), adjustment 0, pool {<null>}, flags {PRINT STOP} (0x6), mode {REGEXP NOCASE} (0xC), originHost {<null>}, originTask {<null>}, user {<null>}, sql {^DROP .*$}, fingerprint {<null>}, evalCount 1, matchCount 0')
(out='Freed in-memory ruleset')
(z='phase 6')
(3=3)
(x=1)
(x=2)
(x=3)
(comdb2_ctxinfo('priority')=zz, x=1)
(comdb2_ctxinfo('priority')=zz, x=2)
(comdb2_ctxinfo('priority')=zz, x=3)
(x=1)
(x=2)
(x=3)
(out='ruleset (nil) matched 0, ruleNo=0, action=NONE, flags=NONE (0x0), priority=HIGHEST, pool=<null>')
(z='phase 7')
(out='[ERROR] t01.ruleset:5, field 'fingerprint' forbidden by configuration')
(out='[ERROR] bad.ruleset:5, field 'fingerprint' forbidden by configuration')
(out='ruleset (nil) matched 0, ruleNo=0, action=NONE, flags=NONE (0x0), priority=HIGHEST, pool=<null>')
(out='Failed DISABLE ruleset item #1: rc=22')
(out='ruleset (nil) matched 0, ruleNo=0, action=NONE, flags=NONE (0x0), priority=HIGHEST, pool=<null>')
(out='Failed ENABLE ruleset item #1: rc=22')
(out='ruleset (nil) matched 0, ruleNo=0, action=NONE, flags=NONE (0x0), priority=HIGHEST, pool=<null>')
(out='Freed in-memory ruleset')
(z='phase 8')
(out='Ruleset loaded from file "t03.ruleset"')
(out='Upgraded ruleset from version 1 to 2')
(out='comdb2_dump_ruleset: ruleset 0x00000000, version 2, generation 6, rule count 10, rule fingerprint count 0')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #10 <null> seqNo 0, action {UNREJECT} (0x4), adjustment 0, pool {<null>}, flags {PRINT STOP} (0x6), mode {REGEXP NOCASE} (0xC), originHost {<null>}, originTask {<null>}, user {<null>}, sql {^DROP .*$}, fingerprint {<null>}, evalCount 1, matchCount 0')
(out='Freed in-memory ruleset')
(z='phase 9')
(out='[ERROR] t01.ruleset:5, field 'fingerprint' forbidden by configuration')
(out='Ruleset loaded from file "t02.ruleset"')
(out='Upgraded ruleset from version 1 to 2')
(out='comdb2_dump_ruleset: ruleset 0x00000000, version 2, generation 8, rule count 6, rule fingerprint count 0')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #1 <null> seqNo 0, action {NONE} (0x0), adjustment 0, pool {<null>}, flags {NONE} (0x0), mode {EXACT} (0x1), originHost {<null>}, originTask {<null>}, user {<null>}, sql {<null>}, fingerprint {<null>}, evalCount 1, matchCount 1')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #6 <null> seqNo 0, action {NONE} (0x0), adjustment 0, pool {<null>}, flags {NONE} (0x0), mode {EXACT} (0x1), originHost {<null>}, originTask {<null>}, user {<null>}, sql {<null>}, fingerprint {<null>}, evalCount 1, matchCount 1')
(out='Freed in-memory ruleset')
(z='phase 10')
(out='Ruleset loaded from file "t04.ruleset"')
(sleep(1)=1)
(comdb2_host()=host_name_here)
(out='comdb2_dump_ruleset: ruleset 0x00000000, version 2, generation 10, rule count 2, rule fingerprint count 0')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #1 <null> seqNo 0, action {SET_POOL} (0x20), adjustment 0, pool {extra1}, flags {PRINT STOP} (0x6), mode {REGEXP NOCASE} (0xC), originHost {<null>}, originTask {<null>}, user {<null>}, sql {sleep}, fingerprint {<null>}, evalCount 5, matchCount 1')
(out='comdb2_dump_ruleset_item: ruleset 0x00000000 rule #2 <null> seqNo 0, action {SET_POOL} (0x20), adjustment 0, pool {extra4}, flags {PRINT STOP DYN_POOL} (0xE), mode {REGEXP NOCASE} (0xC), originHost {<null>}, originTask {<null>}, user {<null>}, sql {comdb2_host}, fingerprint {<null>}, evalCount 4, matchCount 1')
(out='Freed in-memory ruleset')
(out='list_all_sql_pools_func: (name {default}, threads 0) ==> (name {sqlenginepool}, threads 1)')
(out='list_all_sql_pools_func: (name {extra1}, threads 0) ==> (name {extra1}, threads 0)')
(out='list_all_sql_pools_func: (name {extra2}, threads 1) ==> (name {extra2}, threads 1)')
(out='list_all_sql_pools_func: (name {extra4}, threads 1) ==> (name {extra4}, threads 1)')
(out='thdpool_destroy: pool extra1 wait done (X microseconds)')
(out='Destroyed SQL pool "extra1" (3)')
(out='thdpool_destroy: pool extra2 wait done (X microseconds)')
(out='Destroyed SQL pool "extra2" (3)')
(out='Cannot destroy SQL pool "extra3" (0)')
(out='thdpool_destroy: pool extra4 wait done (X microseconds)')
(out='Destroyed SQL pool "extra4" (3)')
