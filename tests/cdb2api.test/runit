#!/usr/bin/env bash
bash -n "$0" | exit 1

# This test case is a collection of queries reported in various 
# DRQS tickets. As such each one will have different schemas.
# The driver will just add/alter tables as required.

dbname=$1
if [[ -z $dbname ]] ; then
    echo dbname missing
    exit 1
fi

for testreq in `ls t*.req` ; do
    # Setup all the tables this test case needs :-
    # First drop the table (its ok if this fails,
    # the table probably doesn't exist).
    # Then add the table.
    testname=`echo $testreq | cut -d "." -f 1`
    echo preparing db for $testname
    for schema in `ls csc2/$testname.*.csc2 2> /dev/null` ; do
        table=`echo $schema | cut -d "." -f2`

        cdb2sql ${CDB2_OPTIONS} $dbname default "drop table $table"
        cdb2sql ${CDB2_OPTIONS} $dbname default "create table $table {$(cat $schema)}"
    done

    cdb2sql -s ${CDB2_OPTIONS} -f $testreq $dbname default > $testname.output 2>&1
    echo "diff $testname.expected $testname.output >/dev/null"
    diff $testname.expected $testname.output >/dev/null
    if [[  $? -eq 0 ]]; then
        echo "passed $testname"
    else
        echo "failed $testname"
        exit 1
    fi
done

# This test checks that master host returned in dbinforesponse matches with
# one in comdb2_cluster system table. List of nodes in dbinforesponse gets
# printed to stderr in debug mode.
master_host=$(CDB2_DEBUG=1 cdb2sql --tabs ${CDB2_OPTIONS} $dbname default "select host from comdb2_cluster where is_master='Y'" 2> cdb2_debug.log)
master_host_dbinfo=$(cat cdb2_debug.log | grep "(master)" | cut -d' ' -f1)
if [[ "${master_host}" == "${master_host_dbinfo}" ]] ; then
    echo "passed"
else
    echo "failed .. master hosts do not match! expected: ${master_host}, got: ${master_host_dbinfo}"
    exit 1
fi

echo
exit 0
