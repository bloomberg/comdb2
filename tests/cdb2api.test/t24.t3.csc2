constants
{
    DEAL_ID_LEN2    = 10,
    EXCH_BYTE_LEN2  = 5,
    FORMULA_LEN     = 220,
    FAILED_FIELD_LEN = 101,
    FORMULA_LEN2    = 330,
}

schema
{
    longlong  validation_id           // id of validation
    cstring   deal_id[DEAL_ID_LEN2]   // deal id of deal
    longlong  pricing_time            // pricing time of deal
    cstring   exchange_byte[EXCH_BYTE_LEN2]     // exchange byte used for pricing
    int       pricing_engine_id       // id of pricing engine offline
    int       field_id                // field id which is priced
    double    price                   // price of field
    double    bid_price  null= yes    // bid price of field
    double    ask_price  null= yes    // ask price of field
    double    expected_price          // expected price from validation rule
    double    deviation               // deviation of price from tolerance range
    double    tolerance_range         // tolerance range used for validation
    int       validate_status         // status of deal pricing
    int       commit_status           // status of committing manual validation
    cstring   formula[FORMULA_LEN2]    // numeric validation formula string
    int       tier dbstore=2          // tier this was valued in. Tier 1 always shows prices, even if questioned
    int       snapshot_id dbstore=0   // snapshot id
    longlong  last_operation dbstore=0 // time of the last pricing operation 
    int       admin_uuid dbstore=0      // uuid who executed the last pricing/validation
    double    previous_value null=yes   // the previous price for a deal
    longlong  job_id         null=yes   // the group_id for bulk repricing 
    longlong  last_validation dbstore=0 // time when the deal was validated
    int       data_validation null=yes  // passed market data validation = 1, failed = 0
    longlong  previous_date  dbstore=0  // date for which the previous price was obtained
    int       charge_fee_flag dbstore=1  //whether the deal was intended to be charged or not
                                        //default to 1
    cstring   failed_fields[FAILED_FIELD_LEN]  null=yes  // list of failed pricing fields, | delimited
}

tag "alldata"
{
    longlong  validation_id
    cstring   deal_id[DEAL_ID_LEN2]
    longlong  pricing_time
    cstring   exchange_byte[EXCH_BYTE_LEN2]
    int       pricing_engine_id
    int       field_id
    double    price
    double    expected_price
    double    deviation
    double    tolerance_range
    int       validate_status
    int       commit_status
    cstring   formula[FORMULA_LEN]
    int       tier
}

tag "alldata1"
{
    longlong  validation_id
    cstring   deal_id[DEAL_ID_LEN2]
    longlong  pricing_time
    cstring   exchange_byte[EXCH_BYTE_LEN2]
    int       pricing_engine_id
    int       field_id
    double    price
    double    bid_price
    double    ask_price
    double    expected_price
    double    deviation
    double    tolerance_range
    int       validate_status
    int       commit_status
    cstring   formula[FORMULA_LEN]
    int       tier
}

keys
{
    "VALIDATIONID" = validation_id
    dup "PRICINGTIME" = pricing_time + validate_status
    dup "DEALID" = deal_id + snapshot_id + pricing_time + validate_status + exchange_byte + validation_id
    dup "JOBID" = job_id
}

