#!/usr/bin/env bash
bash -n "$0" | exit 1

. ${TESTSROOTDIR}/tools/cluster_utils.sh
. ${TESTSROOTDIR}/tools/runit_common.sh

export debug=1
[[ $debug == "1" ]] && set -x

function cdb2_master_check
{
    x=$($CDB2SQL_EXE -tabs $CDB2_OPTIONS -M $DBNAME default "select count(*) from comdb2_cluster where comdb2_host() = host and is_master = 'Y'" 2>&1)
    if [[ $x -ne "1" ]]; then
        failexit "cdb2_master flag did not execute on master, count=$x"
    fi
    $CDB2SQL_EXE $CDB2_OPTIONS -M $DBNAME default "select comdb2_host(),* from comdb2_cluster"
    echo "Master check succeeded"
}

function test_iteration
{
    $CDB2SQL_EXE -tabs $CDB2_OPTIONS -M $DBNAME default "exec procedure sys.cmd.send('downgrade')" >/dev/null 2>&1
    sleep 20
    cdb2_master_check
}

function run_test
{
    # Verify all machines are up
    let j=0
    while [[ $j -lt 10 ]]; do
        test_iteration
        let j=j+1
    done
}

rm ${DBNAME}.failexit >/dev/null 2>&1 
[[ -z "$CLUSTER" ]] && failexit "This test requires a cluster"
run_test

if [[ -f ${DBNAME}.failexit ]]; then
    echo "Testcase failed"
    exit -1
fi

echo "Success"
