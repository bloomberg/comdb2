#!/bin/bash

export debug=1
[[ "$debug" == 1 ]] && set -x

needcluster=1
db=$1

if [[ "$needcluster" = "1" && -z "$CLUSTER" ]]; then
    echo "This test is only relevant for a CLUSTERED installation."
    exit 1
fi

if [[ -z "$stage" ]]; then
    echo "Setting stage to 'default' (set 'stage' var to override)."
    stage="default"
fi


function createtables
{
    [[ "$debug" == 1 ]] && set -x
    cdb2sql ${CDB2_OPTIONS} $db $stage "create table t1 {schema{int id int val null=yes} keys{ dup \"id\" = id }}" >/dev/null 2>&1
}

function insert_records
{
    [[ "$debug" == 1 ]] && set -x
    iters=$1

    fname=insert.sql

    echo "BEGIN" > $fname
    i=0

    while [[ $i -lt 1000 ]]; do
        echo "INSERT INTO t1 (id) VALUES (1)" >> $fname
        let i=i+1
    done

    echo "COMMIT" >> $fname

    j=0
    while [[ $j -lt $iters ]]; do
        cdb2sql ${CDB2_OPTIONS} $db $stage - < $fname 2>/dev/null
        let j=j+1
    done
    rm $fname
}

function runtest
{
    [[ "$debug" == 1 ]] && set -x

    # Insert a bunch of records inline
    insert_records 10

    # Poll for 10 seconds in the processor thread 
    for node in $CLUSTER; do
        cdb2sql ${CDB2_OPTIONS} $db default --host $node "PUT TUNABLE processor_thd_poll 10000"
    done

    insert_records 4

    # Sleep a bit then downgrade in a loop
    sleep 20

    let j=0

    while [[ $j -lt 20 ]] ; do 
        master=`cdb2sql -tabs ${CDB2_OPTIONS} $db default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]' `
        sleep 10
        let j=j+1
    done

    wait

    err=0

    # If all nodes are still up then we are cool
    for node in $CLUSTER; do
        cdb2sql ${CDB2_OPTIONS} $db default --host $node "select 1" > /dev/null 2>&1
        if [[ $? != 0 ]]; then
            echo "ERROR SELECTING FROM NODE $node"
            cdb2sql ${CDB2_OPTIONS} $db default --host $node "select 1"
            err=1
        fi
    done

    if [[ $err != 0 ]]; then
        echo "Testcase failed"
        exit 1
    fi
}

createtables
runtest

echo "Success"
exit 0
