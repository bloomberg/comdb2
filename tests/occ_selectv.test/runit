#!/usr/bin/env bash
bash -n "$0" | exit 1

dbname=$1
if [[ -z $dbname ]] ; then
    echo dbname missing
    exit 1
fi

maxrecords=15000
maxselectfail=20

cdb2sql ${CDB2_OPTIONS} $dbname default "truncate jobs"
cdb2sql ${CDB2_OPTIONS} $dbname default "truncate schedule"

sleep 2

cdb2sql ${CDB2_OPTIONS} $dbname default "WITH RECURSIVE cnt(x) AS (SELECT 1 UNION ALL SELECT x+1 FROM cnt LIMIT $maxrecords) insert into jobs(instid, state, updatehost) SELECT x, 0, 0 FROM cnt"

sleep 10

# Run the executable
exe=${TESTSBUILDDIR}/selectv

echo "Testing selectv..."
$exe -d $dbname -o -t 5 > test.log 2>&1 &
tpid=$!
echo "Test Thread PID $tpid"

function errquit
{
    typeset msg=$1
    typeset cnt=0

    echo "ERROR: $msg"
    echo "Testcase failed."

    kill -9 $tpid
    echo "Killed Test Thread PID $tpid"

    # Exit test.
    exit 1
}

# Trap to errquit if the user presses Ctrl-C
trap "errquit \"Cancelling test on INT EXIT\"" INT EXIT

prevnum=0
num=0
noprogress=0
selecterror=0
while [[ $selecterror -lt $maxselectfail ]]; do
    num=$(cdb2sql --tabs ${CDB2_OPTIONS} $dbname default "select count(*) from jobs where state = 0" 2>&1)
    if [[ $? != 0 ]]; then
        let selecterror=selecterror+1
        echo "select error: $num"
        sleep 3
        continue
    fi
    if [[ "$num" == "0" ]]; then
        break
    fi
    echo "$num remaining"

    if [[ $prevnum == $num ]]; then
        let noprogress=noprogress+1
    else
        let noprogress=0
    fi
    let prevnum=num
    if [[ $noprogress == 6 ]]; then
        errquit "NOT MAKING PROGRESS FOR A LONG TIME"
    fi

    grep "BUG" test.log
    if [[ $? == 0 ]]; then
        errquit "BUG FOUND !!!"
    fi

    sleep 10
done

kill -9 $tpid

# Remove trap-command.
trap - INT EXIT

grep "BUG" test.log
if [[ $? == 0 ]]; then
    echo "BUG FOUND !!!"
    exit 1
fi

if [[ $selecterror -ge 20 ]]; then
    echo "SELECT FAILED $selecterror TIMES!!!"
    exit 1
fi

echo "Testcase passed."
exit 0

