#!/usr/bin/env bash

bash -n "$0" | exit 1

dbnm=$1

set -e

cdb2sql ${CDB2_OPTIONS} $dbnm default 'CREATE TABLE t1 (b blob)'

master=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | awk '{print $1}' | cut -d':' -f1`

# Three leaks:
# 1) We leak the sql query, only in sockbplog mode
# 2) We leak the bplog buffer, only in sockbplog mode
# 3) We leak the osql transaction buffer in both net and sockbplog modes
before=`cdb2sql --tabs $dbnm --host $master 'exec procedure sys.cmd.send("memstat uncategorized")' | grep total | tail -1 | awk '{print $6}'`
# Use a long query to make the leaks more visible
yes "INSERT INTO t1 VALUES (x'`openssl rand -hex 16384`')" | head -1000 | cdb2sql ${CDB2_OPTIONS} $dbnm default - >/dev/null
after=`cdb2sql --tabs $dbnm --host $master 'exec procedure sys.cmd.send("memstat uncategorized")' | grep total | tail -1 | awk '{print $6}'`

delta=`expr $after - $before`
if [ $delta -gt 524288 ]; then
    echo leaky? >&2
    exit 1
fi


# In sockbplog mode, for each osql cancel (rollback or client disconnect),
# we leak the osql transaction and temptables

for i in `seq 1 1000`; do
cdb2sql ${CDB2_OPTIONS} $dbnm default - >/dev/null <<EOF
BEGIN
INSERT INTO t1 VALUES (x'')
ROLLBACK
EOF
done

cdb2sql --tabs $dbnm --host $master 'exec procedure sys.cmd.send("bdb temptable")'
ntmptbls=`cdb2sql --tabs $dbnm --host $master 'exec procedure sys.cmd.send("bdb temptable")' | grep 'total objects' | awk '{print $NF}'`
if [ $ntmptbls -gt 100 ] ; then
    echo leaky? >&2
    exit 1
fi
