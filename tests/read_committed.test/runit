#!/usr/bin/env bash
bash -n "$0" | exit 1

# Debug variable
debug=0

# Grab my database name.
dbname=$1
dbtype=default


if [ "x$dbname" == "x" ] ; then
    print "need a DB name"
    exit 1
fi

# Number of records I will add.
nrecs=2000

# Number of schema changes
nusc=10

# Background pid of the updater
upid=-1

tbl=t1

function run_test 
{
    for i in `ls *.sql`; do
        cmd="cdb2sql -f ${i} ${CDB2_OPTIONS} $dbname default > ${i}.res"
        echo $cmd
        eval $cmd
        if ! `diff ${i}.out ${i}.res > /dev/null`; then
            echo "${i}.out ${i}.res differ..."
            echo "Test FAILED"
            exit 1
        fi
    done
}


echo "running test in machine $(hostname):${PWD}"

cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t1"
cdb2sql ${CDB2_OPTIONS} $dbname default 'delete from sqlite_stat1 where 1'
cdb2sql ${CDB2_OPTIONS} $dbname default "create table t1  { `cat t1.csc2 ` }"
cdb2sql ${CDB2_OPTIONS} $dbname default 'insert into t1 (a,b) values (1,1)'

#get the stats so that the selects in this test will choose to traverse the index
cdb2sql ${CDB2_OPTIONS} $dbname default 'exec procedure sys.cmd.analyze("t1")'
cdb2sql ${CDB2_OPTIONS} $dbname default 'update sqlite_stat1 set stat="5900 345 87" where tbl="t1"'

cdb2sql ${CDB2_OPTIONS} $dbname default 'delete from t1 where 1'

#have the stats be reread
cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t3"
#need extra empty table to reload stats
cdb2sql ${CDB2_OPTIONS} $dbname default "create table t3  { `cat t1.csc2 ` }"

cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t2"
cdb2sql ${CDB2_OPTIONS} $dbname default "create table t2  { `cat t2.csc2 ` }"

cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t4"
cdb2sql ${CDB2_OPTIONS} $dbname default "create table t4  { `cat t4.csc2 ` }"

cdb2sql ${CDB2_OPTIONS} $dbname default "drop table t5"
cdb2sql ${CDB2_OPTIONS} $dbname default "create table t5  { `cat t5.csc2 ` }"

run_test

echo "Test Succeeded"
