#!/usr/bin/env bash
bash -n "$0" | exit 1

TMPDIR=${TMPDIR:-/tmp}

# args
a_dbn=$1

# find input files
files=$( find . -type f -name \*.req | sort )

# counter 
nfiles=0

# last batch
last_batch=

# post-process
pproc=cat

# testcase output
testcase_output=

# expected output
expected_output=


# fastinit
function fastinit
{
    # print debug trace
    [[ "$debug" == "1" ]] && set -x

    # args
    typeset db=$1
    typeset iter=$2
    typeset tbl

    # flagged?
    if [[ ! -f $iter.fastinit ]]; then
        return 0
    fi

    # fastinit
    for tbl in $(cat $iter.fastinit) ; do
        echo "cdb2sql ${CDB2_OPTIONS} $db default \"truncate $tbl\""
        cdb2sql ${CDB2_OPTIONS} $db default "truncate $tbl"
    done

    return 0
}

# iterate through input files
for testcase in $files ; do

    # increment counter
    let nfiles=nfiles+1

    # cleanup testcase
    testcase=${testcase##*/}
    
    # see if the prefix has changed
    new_batch=${testcase%%_*}

    # set output
    output=$testcase.res
    
    # fastinit if requested
    if [[ $new_batch != $last_batch ]] ; then

        fastinit $a_dbn $new_batch
        last_batch=$new_batch

    fi

    # applying a filter to change
    # from
    #   [insert into t3 values(3,99)] 443 failed with rc 3 verify key constraint cannot resolve constraint table 't1' index 'a'
    # to
    #   [insert into t3 values(3,99)] failed with rc 3
    #sed "s/[0-9]* \(failed with rc [0-9]*\).*/\1/g" ${output}.1 > $output
    cdb2sql -s -f $new_batch ${CDB2_OPTIONS} $a_dbn default &> ${output}

    # get testcase output
    testcase_output=$(cat $output)

    # alt output
    testcase_output_alt=""
    testcase_output_alt_2=""

    if [[ -f "$testcase.out.alt" ]]; then

        testcase_output_alt=$(cat $testcase.out.alt)

    fi

    if [[ -f "$testcase.out.alt.2" ]]; then

        testcase_output_alt_2=$(cat $testcase.out.alt.2)

    fi

    # get expected output
    expected_output=$(cat $testcase.out)

    # verify 
    if [[   "$testcase_output" != "$expected_output" && "$testcase_output" != "$testcase_output_alt" && "$testcase_output" != "$testcase_output_alt_2" ]]; then

        echo "  ^^^^^^^^^^^^"
        echo "The above testcase (${testcase}) has failed!!!"
        echo " "
        echo "Use 'diff <expected-output> <my-output>' to see why:"
        echo "> diff ${PWD}/{$testcase.out,$output}"
        echo " "
        diff $testcase.out $output
        echo " "
        exit 1

    fi

done

echo "Testcase passed."
