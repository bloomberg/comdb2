#!/usr/bin/env bash

# Verify that if a datacenter is down, we connect to a random node in the other data center

bash -n "$0" | exit 1

[ -z "${CLUSTER}" ] && { echo "Test requires a cluster"; exit 0; }

dbnm=$1

export CDB2_DISABLE_SOCKPOOL=1

leader=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT host FROM comdb2_cluster WHERE is_master="Y"'`

# Delay rep_process_message so election will timeout
for h in $CLUSTER; do
    cdb2sql $dbnm --host $h "EXEC PROCEDURE sys.cmd.send('on rep_delay')"
done
cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send('downgrade')"

sleep 5

# This used to error out almost immediately because min-retries was set too low
cdb2sql --debugtrace --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT 1' &
pid=$!

# Allow election to complete now. Verify that the command above succeeds.
for h in $CLUSTER; do
  ssh $h "${CDB2SQL_EXE} --admin $dbnm --host localhost \"EXEC PROCEDURE sys.cmd.send('off rep_delay')\""
done

wait $pid
