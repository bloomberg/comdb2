#!/usr/bin/env bash

# Verify that if a datacenter is down, we connect to a random node in the other data center

bash -n "$0" | exit 1

[ -z "${CLUSTER}" ] && { echo "Test requires a cluster"; exit 0; }

dbnm=$1

hosts=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "select host from comdb2_cluster"`
nhosts=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "select host from comdb2_cluster" | wc -l`

# Let's assume those machines are in us_west datacenter
literal='@'
for host in $hosts; do
    literal="$literal$host:dc=us_west,"
done

# We're in us_east
cp $DBDIR/comdb2db.cfg $DBDIR/q1.cfg
echo "comdb2_config:room=us_east" >>$DBDIR/q1.cfg

# us_east has example.com and example.org (both are reserved test domain)
literal="${literal}example.com:dc=us_east,example.org:dc=us_east"

# Now try to connect to the database. All connections will go to us_west
for i in `seq 1 100`; do
    cdb2sql --cdb2cfg $DBDIR/q1.cfg $dbnm $literal 'select comdb2_host()' >>output
done

sort output | uniq

# old code would always connect to the same node in us_west;
# New code randomly chooses one.
# Make sure we've connected to all nodes in us_west
nconnected=`sort output | uniq | wc -l`
if [ $nconnected -ne $nhosts ]; then
    echo failed
    exit 1
fi
