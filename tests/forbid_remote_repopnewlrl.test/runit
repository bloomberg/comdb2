#!/usr/bin/env bash
bash -n "$0" | exit 1

[[ $debug == "1" ]] && set -x
set -x

. ${TESTSROOTDIR}/tools/cluster_utils.sh


function run_test
{
    local myhost=$(hostname)
    local node=$($CDB2SQL_EXE --tabs ${CDB2_OPTIONS} $DBNAME default "select host from comdb2_cluster where host != \"$myhost\" limit 1")
    local port=$($CDB2SQL_EXE --tabs ${CDB2_OPTIONS} $DBNAME --host $node "select comdb2_port()")
    local target=$DBDIR/$DBNAME.new.lrl
    
    echo "Ask $node to repopulate an lrl file"
    echo -e "repopnewlrl\n$target\n" | nc -w 1 $node $port

    echo "Verify that $node did not create this file"
    x=$(ssh -o StrictHostKeyChecking=no $node "ls $target")
    [[ -n "$x" ]] && failexit "Node $node repopulated a new lrl file from a remote connection"

    echo "Tell $db to allow remote repopnewlrl"
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $node "put tunable 'forbid_remote_repopnewlrl' 0"

    echo "Ask $node to repopulate an lrl file"
    echo -e "repopnewlrl\n$target\n" | nc -w 1 $node $port

    echo "Verify that $node created this file"
    x=$(ssh -o StrictHostKeyChecking=no $node "ls $target")
    [[ -z "$x" ]] && failexit "Node $node did not repopulate a new lrl file from a remote connection"

    echo "Success!"
    exit 0
}

[ =z "$CLUSTER" ] && failexit "This test requires a cluster"
run_test
