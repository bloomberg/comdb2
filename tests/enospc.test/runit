#!/usr/bin/env bash


set -e
set -x

dbname=$1
nrows=10000

env

cdb2sql ${CDB2_OPTIONS} $dbname default "create table t (a int)"

echo "adding rows"
set +x
for i in $(seq 1 ${nrows}); do
    echo "insert into t values ($i)"
done | cdb2sql ${CDB2_OPTIONS} $dbname default - >/dev/null
set -x
echo "done adding rows"

# take the db, bring it back up, and run some tests on it
cdb2sql ${CDB2_OPTIONS} $dbname default "exec procedure sys.cmd.send('exit')"
sleep 10
cp ${COMDB2_EXE} cdb2_verify 

for file in ${DBDIR}/*.datas* ${DBDIR}/*.index; do
    ./cdb2_verify $file
done

${COMDB2_EXE} $dbname --lrl ${DBDIR}/${dbname}.lrl --no-global-lrl --pidfile ${TMPDIR}/${DBNAME}.pid >> ${TESTDIR}/logs/${dbname}.db 2>&1 &
sleep 5

# steal from setup - wait until db is up
echo "waiting until ready"
set +e
out=$($CDB2SQL_EXE ${CDB2_OPTIONS} --tabs $dbname default 'select 1' 2> /dev/null)
while [[ "$out" != "1" ]]; do
    sleep 1
    out=$($CDB2SQL_EXE ${CDB2_OPTIONS} --tabs $dbname default 'select 1' 2> /dev/null)
    echo " waiting until ready"
done
set -e

count=$(cdb2sql -tabs ${CDB2_OPTIONS} $dbname default "select count(*) from t")
echo "found $count rows, expected $nrows"
if [[ $count -ne $nrows ]]; then
    echo "found $count rows, expected $nrows"
    exit 1
fi
echo Done
