DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS t2;

SELECT '==== CASCADING DELETE + PARTIAL KEY (Part 1) ====' AS test;

CREATE TABLE t1 {
  schema {
    cstring i[10]
  }
  keys {
    dup "idx1" = i
  }
}$$

CREATE TABLE t2 {
  schema {
    cstring i[10]
    cstring j[10]
    blob    k
  }
  keys {
    dup "idx1" = i
    dup "idx2" = i + j { where j = 'foo' }
  }
  constraints {
    "idx1" -> <"t1":"idx1"> on delete cascade
  }
}$$

INSERT INTO t1 VALUES('aaa');
INSERT INTO t1 VALUES('bbb');
INSERT INTO t2 VALUES('aaa', 'foo', x'cdb2');

# this record would update "idx2", but the subsequent one won't;
# we run "sys.cmd.verify" in the end to make sure the indices
# are clean after cascaded delete operations.
INSERT INTO t2 VALUES('bbb', 'foo', x'cdb2');
INSERT INTO t2 VALUES('bbb', 'bar', x'cdb2');

# should fail due to constraint violation
INSERT INTO t2 VALUES('ccc', 'foo', x'cdb2');

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

DELETE FROM t1 WHERE i = 'bbb';

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

exec procedure sys.cmd.verify('t1')
exec procedure sys.cmd.verify('t2')

DROP TABLE t2;
DROP TABLE t1;

SELECT '==== CASCADING DELETE + PARTIAL KEY (Part 2) ====' AS test;

CREATE TABLE t1 {
  schema {
    cstring i[10]
  }
  keys {
    dup "idx1" = i
  }
}$$

CREATE TABLE t2 {
  schema {
    cstring i[10]
    cstring j[10]
    blob    k
  }
  keys {
    dup "idx1" = i
    dup "idx2" = i + j { where j = 'foo' }
  }
  constraints {
    "idx2" -> <"t1":"idx1"> on delete cascade
  }
}$$

INSERT INTO t1 VALUES('aaa');
INSERT INTO t1 VALUES('bbb');
INSERT INTO t2 VALUES('aaa', 'foo', x'cdb2');

# this record would update "idx2", but the subsequent one won't;
# we run "sys.cmd.verify" in the end to make sure the indices
# are clean after cascaded delete operations.
INSERT INTO t2 VALUES('bbb', 'foo', x'cdb2');
INSERT INTO t2 VALUES('bbb', 'bar', x'cdb2');

# should fail due to constraint violation
INSERT INTO t2 VALUES('ccc', 'foo', x'cdb2');

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

DELETE FROM t1 WHERE i = 'bbb';

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

exec procedure sys.cmd.verify('t1')
exec procedure sys.cmd.verify('t2')

DROP TABLE t2;
DROP TABLE t1;

SELECT '==== CASCADING UPDATE + PARTIAL KEY (Part 1) ====' AS test;

CREATE TABLE t1 {
  schema {
    cstring i[10]
  }
  keys {
    dup "idx1" = i
  }
}$$

CREATE TABLE t2 {
  schema {
    cstring i[10]
    cstring j[10]
    blob    k
  }
  keys {
    dup "idx1" = i
    dup "idx2" = i + j { where j = 'foo' }
  }
  constraints {
    "idx1" -> <"t1":"idx1"> on update cascade
  }
}$$

INSERT INTO t1 VALUES('aaa');
INSERT INTO t1 VALUES('bbb');
INSERT INTO t2 VALUES('aaa', 'foo', x'cdb2');

# this record would update "idx2", but the subsequent one won't;
# we run "sys.cmd.verify" in the end to make sure the indices
# are clean after cascaded delete operations.
INSERT INTO t2 VALUES('bbb', 'foo', x'cdb2');
INSERT INTO t2 VALUES('bbb', 'bar', x'cdb2');

# should fail due to constraint violation
INSERT INTO t2 VALUES('ccc', 'foo', x'cdb2');

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

UPDATE t1 SET i = 'ccc' WHERE i = 'bbb';

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

exec procedure sys.cmd.verify('t1')
exec procedure sys.cmd.verify('t2')

DROP TABLE t2;
DROP TABLE t1;

SELECT '==== CASCADING UPDATE + PARTIAL KEY (Part 2) ====' AS test;

CREATE TABLE t1 {
  schema {
    cstring i[10]
  }
  keys {
    dup "idx1" = i
  }
}$$

CREATE TABLE t2 {
  schema {
    cstring i[10]
    cstring j[10]
    blob    k
  }
  keys {
    dup "idx1" = i
    dup "idx2" = i + j { where j = 'foo' }
  }
  constraints {
    "idx2" -> <"t1":"idx1"> on update cascade
  }
}$$

INSERT INTO t1 VALUES('aaa');
INSERT INTO t1 VALUES('bbb');
INSERT INTO t2 VALUES('aaa', 'foo', x'cdb2');

# this record would update "idx2", but the subsequent one won't;
# we run "sys.cmd.verify" in the end to make sure the indices
# are clean after cascaded delete operations.
INSERT INTO t2 VALUES('bbb', 'foo', x'cdb2');
INSERT INTO t2 VALUES('bbb', 'bar', x'cdb2');

# should fail due to constraint violation
INSERT INTO t2 VALUES('ccc', 'foo', x'cdb2');

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

UPDATE t1 SET i = 'ccc' WHERE i = 'bbb';

SELECT * FROM t1 ORDER BY 1;
SELECT * FROM t2 ORDER BY 1;

exec procedure sys.cmd.verify('t1')
exec procedure sys.cmd.verify('t2')

DROP TABLE t2;
DROP TABLE t1;
