#### DOHAST MEMORY LEAKS ####

#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

######## Leak 1: Leaking cached rows (DRQS 141973376) ########

# Populate data
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "CREATE TABLE t0 (i TEXT)"
sleep 1
cdb2sql ${CDB2_OPTIONS} $dbnm default "INSERT INTO t0 SELECT 'It is only with the heart that one can see rightly; what is essential is invisible to the eye.' from generate_series limit 9999" >/dev/null

for i in `seq 1 4`; do
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "CREATE TABLE t$i (i TEXT)"
    sleep 1
    for j in `seq 1 10`; do
        cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "INSERT INTO t$i SELECT * FROM t0" >/dev/null
    done
done

# Make sure we talk to the same host
host=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT comdb2_host()'`

# Warm up
for i in `seq 1 20`; do
  cdb2sql ${CDB2_OPTIONS} $dbnm --host $host 'SELECT * FROM t0 UNION ALL SELECT * FROM t1 UNION ALL SELECT * FROM t2 UNION ALL SELECT * FROM t3 UNION ALL SELECT * FROM t4' >/dev/null
done

# Get a steady memory snapshot
before=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"

# Wait for SQL threads to exit
sleep 5

# Run the reproducer another 100 times
for i in `seq 1 100`; do
  cdb2sql ${CDB2_OPTIONS} $dbnm --host $host 'SELECT * FROM t0 UNION ALL SELECT * FROM t1 UNION ALL SELECT * FROM t2 UNION ALL SELECT * FROM t3 UNION ALL SELECT * FROM t4' >/dev/null
done

# Get a memory snapshot again
after=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"

# Should almost be identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 2 ]; then
  echo "leak 1 ratio is $ratio" >&2
  exit 1
fi

######## Leak 2: Leaking dohsql_node_t.order_dir (DRQS 150091715) ########

sleep 5

while true; do cdb2sql ${CDB2_OPTIONS} $dbnm --host $host "SELECT NULL FROM t0 ORDER BY 1"; done >/dev/null &
pid=$!
sleep 5
kill $pid

# Get a steady memory snapshot
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"
before=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`

sleep 5

while true; do cdb2sql ${CDB2_OPTIONS} $dbnm --host $host "SELECT NULL FROM t0 ORDER BY 1"; done >/dev/null &
pid=$!
sleep 120
kill $pid

# Get a memory snapshot again
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"
after=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`

# Should almost be identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "leak 2 ratio is $ratio" >&2
  exit 1
fi

# We double free dohsql_node_t.order_dir if any column after the first one
# in the order-by cluase refers to a subquery (Thanks Mike!).
# For instance, in the query below, the 2nd column in the order-by clause
# is 'SELECT 1', and it would crash the database.
cdb2sql ${CDB2_OPTIONS} $dbnm default 'SELECT i, (SELECT 1) FROM t0 ORDER BY 1, 2' >/dev/null


######## Leak 4: Dohast leaking sqlite3_mprintf (DRQS 159154516) ########
sleep 5

cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default "CREATE TABLE drqs_159154516 (i INTEGER, j INTEGER)"
sleep 1

# warm up
while true; do cdb2sql $dbnm --host $host "SELECT i, j FROM drqs_159154516"; done >/dev/null &
pid=$!
sleep 5
kill $pid

# Get a steady memory snapshot
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"
before=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`

sleep 5

while true; do cdb2sql $dbnm --host $host "SELECT i, j FROM drqs_159154516"; done >/dev/null &
pid=$!
sleep 120
kill $pid

# Get a memory snapshot again
sleep 2 # allow the sql engine to detect the disconnect and back out
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')"
after=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $6}'`

# Should almost be identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "leak 4 ratio is $ratio" >&2
  exit 1
fi
