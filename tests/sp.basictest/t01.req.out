(version='sptest')
($0='124', $1='432')
($0='124', $1='432')
(rows inserted=1)
(columnnamewithmorethanthirtytwocharacters=1, anothercolumnnamewithmorethanthirtytwocharacters=2)
(version='sptest1')
(rows inserted=1)
(rows inserted=1)
(rows inserted=1)
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(i=213, j=323)
(i=NULL, j=NULL)
(version='sptest3')
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(version='sptest4')
($0=NULL)
(id='5', b='12')
(id='25', b='12')
(version='sptest5')
(rows inserted=5.000000)
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(rows inserted=-1.000000)
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(version='sptest6')
(id=5, j=12, i=5, j=12)
(id=25, j=12, i=25, j=12)
(version='sptest7')
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(jon=124, doe=432)
($0='abcd')
[exec procedure test('4')] failed with rc -200 abcdef
($0='col1', $1='col2')
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(i=5, j=12)
(i=25, j=12)
(i=5, j=12, id=5, b=12)
(i=25, j=12, id=25, b=12)
($0=-1.000000)
[exec procedure test4('4')] failed with rc -200 Got an error
($0=-1.000000)
[exec procedure test4('4')] failed with rc -200 Got an error
(rows inserted=1)
(version='sptest8')
(decimal='123456789.123456789', double=123456789.123457)
(year=1969, month=12, month day=31)
(version='sptest9')
(id='25', j='12')
(id='35', j='12')
($0='skipped test')
(id=51, j=221)
(id=5, j=12)
(id=25, j=12)
(id=35, j=12)
(id=51, j=221)
(id=5, j=12)
(rows deleted=5)
(i=3, j=4)
(i=5, j=10)
(rows inserted=1)
(rows inserted=1)
(column1=1.000000, column2=2.000000)
(column1=2.000000, column2=3.000000)
(version='sptest10')
(column1='123456789.123456789', column2=123456789.123457)
(version='sptest11')
(i=1, j=2)
(i=2, j=3)
(i=29, j=29)
(i=200, j=200)
(i=500, j=500)
(i=900, j=900)
(i=1900, j=1900)
(i=1, j=2)
(i=2, j=3)
(i=29, j=29)
(i=200, j=200)
(i=500, j=500)
(i=900, j=900)
(i=1900, j=1900)
(version='sptest')
(count(*)=2000)
(version='sptest')
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(version='sptest')
SQL: select @i, @u, @ll, @ull, @s, @us, @f, @d, @dt, @cstr, hex(@ba), hex(@blob), @vutf8;
2147483647, -1, 9223372036854775807, -1, 32767, -1, 3.1415901184082, 3.14159, 2013-01-01T000000.000 America/New_York, Hello, World!, DBDBDBDB, DEADBEEFCAFEBABEFFFFFFFF, Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
SP: exec procedure bound(@i, @u, @ll, @ull, @s, @us, @f, @d, @dt, @cstr, @ba, @blob, @vutf8)
2147483647, -1, 9223372036854775807, -1, 32767, -1, 3.1415901184082, 3.14159, 2013-01-01T000000.000 America/New_York, Hello, World!, dbdbdbdb, deadbeefcafebabeffffffff, Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
(version='sptest')
(blob=x'dbdbdbdb')
(blob=x'f0f0f0f0')
(blob=x'deadbeef')
(blob=x'dbdbdbdb')
(blob=x'f0f0f0f0')
(blob=x'deadbeef')
(blob=x'ffffffff')
(blob=x'00000000')
(version='sptest')
(version='sptest')
($0=x'')
($0=x'deadbeef')
($0=x'00112233445566778899001122334455667788990011223344556677889900112233445566778899')
(version='1')
(rows inserted=1)
(version='sptest')
("test 0"='test 0')
(count(*)=0)
("test 1"='test 1')
(count(*)=2)
(i=3)
(i=4)
("test 2"='test 2')
(count(*)=2)
(i=3)
(i=4)
("test 3"='test 3')
(count(*)=4)
(i=3)
(i=4)
(i=7)
(i=8)
("test 4"='test 4')
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 5"='test 5')
[exec procedure transactions('["begin"]')] failed with rc -3 [string "local function main(work)..."]:5: attempt to call method 'begin' (a nil value)
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 6"='test 6')
[exec procedure transactions('["begin"]')] failed with rc -222 unterminated transaction (no commit or rollback)
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 7"='test 7')
[exec procedure transactions('["commit"]')] failed with rc -3 [rc = db:commit()...]:7: No transaction to COMMIT/ROLLBACK
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 8"='test 8')
[exec procedure transactions('["rollback"]')] failed with rc -3 [db:rollback()...]:9: No transaction to COMMIT/ROLLBACK
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
(version='sptest')
(version='sptest')
(avg(i)=50000.500000)
(myavg(i)=50000.500000)
[select myavg(i) from nums] failed with rc -3 no such function: myavg
(version='1')
(rows inserted=1)
(rows inserted=1)
(i=10.000000)
(i=20.000000)
(version='1')
(version='2')
(version='1')
(version='2')
(version='1')
(version='1')
(version='2')
(version='8eb31cbc-f341-433b-9110-53713e0dd257')
(version='84c256f9-854f-406b-9444-92bd2a63cba1')
(testcase='SET AND EXEC DEFAULT VERSIONS')
(name='sp1', ver=2)
(name='sp1', ver=1)
(name='sp2', ver=1)
(name='sp2', ver=2)
(name='sp1 hdr', ver=0)
(name='sp1', ver=1)
(name='sp2 hdr', ver=0)
(name='sp2', ver=1)
(name='sp3 hdr', ver=0)
(name='sp3', ver=1)
(testcase='EXEC SP1 WITH DIFFERENT SP/SPVERSION OVERRIDES')
(name='sp1', ver=1)
(name='sp1', ver=2)
(name='sp1', ver=1)
(name='sp1', ver=1)
(testcase='EXEC SP2 WITH DIFFERENT SP/SPVERSION OVERRIDES')
(name='sp2', ver=2)
(name='sp2', ver=2)
(name='sp2', ver=1)
(name='sp2', ver=2)
(testcase='TEST SET SPVERSION WITH NEW/OLD STYLE VERSIONS')
(id=1)
(id=2)
(id='8eb31cbc-f341-433b-9110-53713e0dd257')
(id='84c256f9-854f-406b-9444-92bd2a63cba1')
[exec procedure sp1()] failed with rc -3 no such procedure: sp1 ver:100
[exec procedure sp2()] failed with rc -3 no such procedure: sp2 ver:200
(testcase='SPVERSION APPLIES TO ONGOING SESSION ONLY')
(id=2)
(id=1)
(id='8eb31cbc-f341-433b-9110-53713e0dd257')
(id=1)
(testcase='SET INVALID DEFAULTS - VERSIONED SPs HAVE CHECKS')
[put default procedure sp2000 '2000'] failed with rc 304 OP #3 BLOCK2_SEQV2(824): no such procedure sp2000:2000
[put default procedure sp1 '2000'] failed with rc 304 OP #3 BLOCK2_SEQV2(824): no such procedure sp1:2000
(testcase='SHOULD GET SAME RESULTS AS comdb2sc.tsk')
(version='1')
(i=0)
[exec procedure dup()] failed with rc -206 OP #3 BLOCK2_SEQV2(824): add key constraint duplicate key 'I' on table 'dup' index 0
(version='sptest')
(version='sptest')
(rows deleted=500)
(name='audit', type='trigger', tbl_name='foraudit', event='add', col='i')
(name='audit', type='trigger', tbl_name='foraudit', event='del', col='i')
(name='audit', type='trigger', tbl_name='foraudit', event='upd', col='i')
(name='cons', type='consumer', tbl_name='foraudit', event='add', col='i')
(name='cons', type='consumer', tbl_name='foraudit', event='del', col='i')
(name='cons', type='consumer', tbl_name='foraudit', event='upd', col='i')
(added_by='consumer', type='add', count(*)=500)
(added_by='consumer', type='del', count(*)=500)
(added_by='trigger', type='add', count(*)=500)
(added_by='trigger', type='del', count(*)=500)
(version='1')
(version='1')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='i')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='j')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='k')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='i')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='j')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='k')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='i')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='j')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='k')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='a')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='b')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='c')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='a')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='b')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='c')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='a')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='b')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='c')
(name='b', type='consumer', tbl_name='for_trigger1', event='add', col='i')
(name='b', type='consumer', tbl_name='for_trigger1', event='add', col='j')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='i')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='j')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='k')
(name='b', type='consumer', tbl_name='for_trigger1', event='upd', col='j')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='c')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='b')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='a')
(name='b', type='consumer', tbl_name='for_trigger2', event='del', col='c')
(name='b', type='consumer', tbl_name='for_trigger2', event='upd', col='c')
(name='b', type='consumer', tbl_name='for_trigger2', event='upd', col='b')
(name='a', version='1', client_versioned='N', default='Y')
(name='audit', version='sptest', client_versioned='Y', default='Y')
(name='b', version='1', client_versioned='N', default='Y')
(name='blobliteral', version='sptest', client_versioned='Y', default='Y')
(name='bound', version='sptest', client_versioned='Y', default='Y')
(name='close', version='sptest', client_versioned='Y', default='Y')
(name='commitsp', version='1', client_versioned='N', default='Y')
(name='cons', version='sptest', client_versioned='Y', default='Y')
(name='dup', version='1', client_versioned='N', default='Y')
(name='gen', version='sptest', client_versioned='Y', default='Y')
(name='hexarg', version='sptest', client_versioned='Y', default='Y')
(name='json_extract', version='1', client_versioned='N', default='Y')
(name='myavg', version='sptest', client_versioned='Y', default='Y')
(name='prepare', version='sptest', client_versioned='Y', default='Y')
(name='sp1', version='1', client_versioned='N', default='N')
(name='sp1', version='2', client_versioned='N', default='N')
(name='sp2', version='1', client_versioned='N', default='N')
(name='sp2', version='2', client_versioned='N', default='Y')
(name='sp2000', version=NULL, client_versioned=NULL, default='N')
(name='sp3', version='1', client_versioned='N', default='Y')
(name='sp4', version='1', client_versioned='N', default='Y')
(name='sp4', version='2', client_versioned='N', default='N')
(name='sp4', version='84c256f9-854f-406b-9444-92bd2a63cba1', client_versioned='Y', default='N')
(name='sp4', version='8eb31cbc-f341-433b-9110-53713e0dd257', client_versioned='Y', default='N')
(name='test', version='sptest', client_versioned='Y', default='Y')
(name='test1', version='sptest1', client_versioned='Y', default='Y')
(name='test10', version='sptest10', client_versioned='Y', default='Y')
(name='test11', version='sptest11', client_versioned='Y', default='Y')
(name='test3', version='sptest3', client_versioned='Y', default='Y')
(name='test4', version='sptest4', client_versioned='Y', default='Y')
(name='test5', version='sptest5', client_versioned='Y', default='Y')
(name='test6', version='sptest6', client_versioned='Y', default='Y')
(name='test7', version='sptest7', client_versioned='Y', default='Y')
(name='test8', version='sptest8', client_versioned='Y', default='Y')
(name='test9', version='sptest9', client_versioned='Y', default='Y')
(name='transactions', version='sptest', client_versioned='Y', default='Y')
(name='types', version='sptest', client_versioned='Y', default='Y')
(1=1)
(out='Verify succeeded.')
(2=2)
(out='Usage: verify("<table>")')
[exec procedure sys.cmd.verify()] failed with rc -3 [sys.comdb_verify(tbl)...]:2: Verify failed.
(3=3)
[exec procedure sys.cmd.verify(\"nonexistent\")] failed with rc -3 bad argument -> \"nonexistent\")
(4=4)
(out='Table does not exist.')
[exec procedure sys.cmd.verify("nonexistent")] failed with rc -3 [sys.comdb_verify(tbl)...]:2: Verify failed.
(5=5)
(version='sptest')
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(version='sptest')
($0='dup pass')
($0='verify pass')
($0='fkey pass')
($0='null pass')
($0='selectv pass')
($0='selectv pass')
($0='selectv pass')
($0='conv pass')
($0='finished')
(version='sptest')
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(version='sptest')
(i=100)
(i=100)
(i=1)
(i=1)
(i=2)
(i=2)
(i=3)
(i=3)
(i=4)
(i=4)
(i=5)
(i=5)
(i=6)
(i=6)
(i=7)
(i=7)
(i=8)
(i=8)
(i=9)
(i=9)
(i=10)
(i=10)
(i=11)
(i=11)
(i=12)
(i=12)
(i=13)
(i=13)
(i=14)
(i=14)
(i=15)
(i=15)
(i=16)
(i=16)
(i=17)
(i=17)
(i=18)
(i=18)
(i=19)
(i=19)
(i=20)
(i=20)
(i=21)
(i=21)
(i=22)
(i=22)
(i=23)
(i=23)
(i=24)
(i=24)
(i=25)
(i=25)
(i=26)
(i=26)
(i=27)
(i=27)
(i=28)
(i=28)
(i=29)
(i=29)
(i=30)
(i=30)
(i=31)
(i=31)
(i=32)
(i=32)
(i=33)
(i=33)
(i=34)
(i=34)
(i=35)
(i=35)
(i=36)
(i=36)
(i=37)
(i=37)
(i=38)
(i=38)
(i=39)
(i=39)
(i=40)
(i=40)
(i=41)
(i=41)
(i=42)
(i=42)
(i=43)
(i=43)
(i=44)
(i=44)
(i=45)
(i=45)
(i=46)
(i=46)
(i=47)
(i=47)
(i=48)
(i=48)
(i=49)
(i=49)
(i=50)
(i=50)
(i=51)
(i=52)
(i=53)
(i=54)
(i=55)
(i=56)
(i=57)
(i=58)
(i=59)
(i=60)
(i=61)
(i=62)
(i=63)
(i=64)
(i=65)
(i=66)
(i=67)
(i=68)
(i=69)
(i=70)
(i=71)
(i=72)
(i=73)
(i=74)
(i=75)
(i=76)
(i=77)
(i=78)
(i=79)
(i=80)
(i=81)
(i=82)
(i=83)
(i=84)
(i=85)
(i=86)
(i=87)
(i=88)
(i=89)
(i=90)
(i=91)
(i=92)
(i=93)
(i=94)
(i=95)
(i=96)
(i=97)
(i=98)
(i=99)
(i=100)
[exec procedure reset_test()] failed with rc -3 [row = s1:fetch()...]:53: no active stmt
(expected=100, actual=100)
(version='sptest')
(count=50000, first=0, last=49999)
[exec procedure binder()] failed with rc -3 [db:column_name("count", 1); db:...]:37: attempt to change column name
(name='a', version='1', client_versioned='N', default='Y')
(name='audit', version='sptest', client_versioned='Y', default='Y')
(name='b', version='1', client_versioned='N', default='Y')
(name='binder', version='sptest', client_versioned='Y', default='Y')
(name='blobliteral', version='sptest', client_versioned='Y', default='Y')
(name='bound', version='sptest', client_versioned='Y', default='Y')
(name='close', version='sptest', client_versioned='Y', default='Y')
(name='commitsp', version='1', client_versioned='N', default='Y')
(name='cons', version='sptest', client_versioned='Y', default='Y')
(name='dup', version='1', client_versioned='N', default='Y')
(name='gen', version='sptest', client_versioned='Y', default='Y')
(name='hexarg', version='sptest', client_versioned='Y', default='Y')
(name='json_extract', version='1', client_versioned='N', default='Y')
(name='myavg', version='sptest', client_versioned='Y', default='Y')
(name='prepare', version='sptest', client_versioned='Y', default='Y')
(name='rcodes', version='sptest', client_versioned='Y', default='Y')
(name='reset_test', version='sptest', client_versioned='Y', default='Y')
(name='sp1', version='1', client_versioned='N', default='N')
(name='sp1', version='2', client_versioned='N', default='N')
(name='sp2', version='1', client_versioned='N', default='N')
(name='sp2', version='2', client_versioned='N', default='Y')
(name='sp2000', version=NULL, client_versioned=NULL, default='N')
(name='sp3', version='1', client_versioned='N', default='Y')
(name='sp4', version='1', client_versioned='N', default='Y')
(name='sp4', version='2', client_versioned='N', default='N')
(name='sp4', version='84c256f9-854f-406b-9444-92bd2a63cba1', client_versioned='Y', default='N')
(name='sp4', version='8eb31cbc-f341-433b-9110-53713e0dd257', client_versioned='Y', default='N')
(name='test', version='sptest', client_versioned='Y', default='Y')
(name='test1', version='sptest1', client_versioned='Y', default='Y')
(name='test10', version='sptest10', client_versioned='Y', default='Y')
(name='test11', version='sptest11', client_versioned='Y', default='Y')
(name='test3', version='sptest3', client_versioned='Y', default='Y')
(name='test4', version='sptest4', client_versioned='Y', default='Y')
(name='test5', version='sptest5', client_versioned='Y', default='Y')
(name='test6', version='sptest6', client_versioned='Y', default='Y')
(name='test7', version='sptest7', client_versioned='Y', default='Y')
(name='test8', version='sptest8', client_versioned='Y', default='Y')
(name='test9', version='sptest9', client_versioned='Y', default='Y')
(name='tmptbls', version='sptest', client_versioned='Y', default='Y')
(name='transactions', version='sptest', client_versioned='Y', default='Y')
(name='types', version='sptest', client_versioned='Y', default='Y')
(version='sptest')
[exec procedure json_utf8()] failed with rc -3 [json, rc = db:table_to_json(row...]:12: invalid utf-8 cstring in 'table_to_json'
(strategy='fail', json=NULL, rc=2)
(strategy='truncate', json='{"c":"abcde"}', rc=4)
(strategy='hex', json='{"c":"6162636465ff666768696a00"}', rc=8)
(version='sptest')
[exec procedure loop()] failed with rc -3 [db:table_to_json(x)...]:5: too many nested tables
(version='sptest')
($0=1.000000, $1='number', $2='NULL', $3='int', $4='NULL', $5='int')
($0=2.000000, $1='number', $2='NULL', $3='real', $4='NULL', $5='real')
($0=3.000000, $1='number', $2='NULL', $3='decimal', $4='NULL', $5='decimal')
($0=4.000000, $1='number', $2='NULL', $3='cstring', $4='NULL', $5='cstring')
($0=5.000000, $1='number', $2='NULL', $3='blob', $4='NULL', $5='blob')
($0=6.000000, $1='number', $2='NULL', $3='datetime', $4='NULL', $5='datetime')
($0=7.000000, $1='number', $2='NULL', $3='intervalds', $4='NULL', $5='intervalds')
($0=8.000000, $1='number', $2='NULL', $3='intervalym', $4='NULL', $5='intervalym')
($0=9.000000, $1='number', $2='lua string', $3='string', $4='lua string', $5='string')
($0=10.000000, $1='number', $2='3.14159', $3='number', $4='3.14159', $5='number')
($0=11.000000, $1='number', $2='true', $3='boolean', $4='true', $5='boolean')
($0=12.000000, $1='number', $2='592', $3='int', $4='592', $5='int')
($0=13.000000, $1='number', $2='3.14159', $3='real', $4='3.14159', $5='real')
($0=14.000000, $1='number', $2='0.3', $3='decimal', $4='0.3', $5='decimal')
($0=15.000000, $1='number', $2='comdb2 string', $3='cstring', $4='comdb2 string', $5='cstring')
($0=16.000000, $1='number', $2='deadbeef', $3='blob', $4='deadbeef', $5='blob')
($0=17.000000, $1='number', $2='2017-04-18T160323.416 America/New_York', $3='datetime', $4='2017-04-18T160323.416 America/New_York', $5='datetime')
($0=18.000000, $1='number', $2='0 00:01:00.000', $3='intervalds', $4='0 00:01:00.000', $5='intervalds')
($0=1.000000, $1='number', $2='NULL', $3='int', $4='NULL', $5='int')
($0=2.000000, $1='number', $2='NULL', $3='real', $4='NULL', $5='real')
($0=3.000000, $1='number', $2='NULL', $3='decimal', $4='NULL', $5='decimal')
($0=4.000000, $1='number', $2='NULL', $3='cstring', $4='NULL', $5='cstring')
($0=5.000000, $1='number', $2='NULL', $3='blob', $4='NULL', $5='blob')
($0=6.000000, $1='number', $2='NULL', $3='datetime', $4='NULL', $5='datetime')
($0=7.000000, $1='number', $2='NULL', $3='intervalds', $4='NULL', $5='intervalds')
($0=8.000000, $1='number', $2='NULL', $3='intervalym', $4='NULL', $5='intervalym')
($0=9.000000, $1='number', $2='lua string', $3='string', $4='lua string', $5='string')
($0=10.000000, $1='number', $2='3.14159', $3='number', $4='3.14159', $5='number')
($0=11.000000, $1='number', $2='true', $3='boolean', $4='true', $5='boolean')
($0=12.000000, $1='number', $2='592', $3='int', $4='592', $5='int')
($0=13.000000, $1='number', $2='3.14159', $3='real', $4='3.14159', $5='real')
($0=14.000000, $1='number', $2='0.3', $3='decimal', $4='0.3', $5='decimal')
($0=15.000000, $1='number', $2='comdb2 string', $3='cstring', $4='comdb2 string', $5='cstring')
($0=16.000000, $1='number', $2='deadbeef', $3='blob', $4='deadbeef', $5='blob')
($0=17.000000, $1='number', $2='2017-04-18T160323.416 America/New_York', $3='datetime', $4='2017-04-18T160323.416 America/New_York', $5='datetime')
($0=18.000000, $1='number', $2='0 00:01:00.000', $3='intervalds', $4='0 00:01:00.000', $5='intervalds')
($0=19.000000, $1='number', $2='0-10', $3='intervalym', $4='0-10', $5='intervalym')
