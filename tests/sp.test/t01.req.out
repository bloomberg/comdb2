(version='sptest')
($0='124', $1='432')
($0='124', $1='432')
(rows inserted=1)
(columnnamewithmorethanthirtytwocharacters=1, anothercolumnnamewithmorethanthirtytwocharacters=2)
(version='sptest1')
(rows inserted=1)
(rows inserted=1)
(rows inserted=1)
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(i=213, j=323)
(i=NULL, j=NULL)
(version='sptest3')
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(version='sptest4')
($0=NULL)
(id='5', b='12')
(id='25', b='12')
(version='sptest5')
(rows inserted=5.000000)
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(rows inserted=-1.000000)
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(version='sptest6')
(id=5, j=12, i=5, j=12)
(id=25, j=12, i=25, j=12)
(version='sptest7')
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(jon=124, doe=432)
($0='abcd')
[exec procedure test('4')] failed with rc -200 abcdef
($0='col1', $1='col2')
(i=5, j=12)
(i=23, j=23)
(i=25, j=12)
(i=32, j=32)
(i=321, j=321)
(i=23, j=23)
(i=32, j=32)
(i=321, j=321)
(i=5, j=12)
(i=25, j=12)
(i=5, j=12, id=5, b=12)
(i=25, j=12, id=25, b=12)
($0=-1.000000)
[exec procedure test4('4')] failed with rc -200 Got an error
($0=-1.000000)
[exec procedure test4('4')] failed with rc -200 Got an error
(rows inserted=1)
(version='sptest8')
(decimal='123456789.123456789', double=123456789.123457)
(year=1969, month=12, month day=31)
(version='sptest9')
(id='25', j='12')
(id='35', j='12')
($0='skipped test')
(id=51, j=221)
(id=5, j=12)
(id=25, j=12)
(id=35, j=12)
(id=51, j=221)
(id=5, j=12)
(rows deleted=5)
(i=3, j=4)
(i=5, j=10)
(rows inserted=1)
(rows inserted=1)
(column1=1.000000, column2=2.000000)
(column1=2.000000, column2=3.000000)
(version='sptest10')
(column1='123456789.123456789', column2=123456789.123457)
(version='sptest11')
(i=1, j=2)
(i=2, j=3)
(i=29, j=29)
(i=200, j=200)
(i=500, j=500)
(i=900, j=900)
(i=1900, j=1900)
(i=1, j=2)
(i=2, j=3)
(i=29, j=29)
(i=200, j=200)
(i=500, j=500)
(i=900, j=900)
(i=1900, j=1900)
(version='sptest')
(count(*)=2000)
(version='sptest')
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(count(*)=7)
(version='sptest')
SQL: select @i, @u, @ll, @ull, @s, @us, @f, @d, @dt, @cstr, hex(@ba), hex(@blob), @vutf8;
2147483647, -1, 9223372036854775807, -1, 32767, -1, 3.1415901184082, 3.14159, 2013-01-01T000000.000 America/New_York, Hello, World!, DBDBDBDB, DEADBEEFCAFEBABEFFFFFFFF, Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
SP: exec procedure bound(@i, @u, @ll, @ull, @s, @us, @f, @d, @dt, @cstr, @ba, @blob, @vutf8)
2147483647, -1, 9223372036854775807, -1, 32767, -1, 3.1415901184082, 3.14159, 2013-01-01T000000.000 America/New_York, Hello, World!, dbdbdbdb, deadbeefcafebabeffffffff, Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
(version='sptest')
(blob=x'dbdbdbdb')
(blob=x'f0f0f0f0')
(blob=x'deadbeef')
(blob=x'dbdbdbdb')
(blob=x'f0f0f0f0')
(blob=x'deadbeef')
(blob=x'ffffffff')
(blob=x'00000000')
(version='sptest')
(version='sptest')
($0=x'')
($0=x'deadbeef')
($0=x'00112233445566778899001122334455667788990011223344556677889900112233445566778899')
(version='1')
(rows inserted=1)
(version='sptest')
("test 0"='test 0')
(count(*)=0)
("test 1"='test 1')
(count(*)=2)
(i=3)
(i=4)
("test 2"='test 2')
(count(*)=2)
(i=3)
(i=4)
("test 3"='test 3')
(count(*)=4)
(i=3)
(i=4)
(i=7)
(i=8)
("test 4"='test 4')
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 5"='test 5')
[exec procedure transactions('["begin"]')] failed with rc -3 [string "local function main(work)..."]:5: attempt to call method 'begin' (a nil value)
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 6"='test 6')
[exec procedure transactions('["begin"]')] failed with rc -222 unterminated transaction (no commit or rollback)
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 7"='test 7')
[exec procedure transactions('["commit"]')] failed with rc -3 [rc = db:commit()...]:7: No transaction to COMMIT/ROLLBACK
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
("test 8"='test 8')
[exec procedure transactions('["rollback"]')] failed with rc -3 [db:rollback()...]:9: No transaction to COMMIT/ROLLBACK
(count(*)=10)
(i=3)
(i=4)
(i=7)
(i=8)
(i=9)
(i=10)
(i=13)
(i=14)
(i=15)
(i=16)
(version='sptest')
(version='sptest')
(avg(i)=50000.500000)
(myavg(i)=50000.500000)
[select myavg(i) from nums] failed with rc -3 no such function: myavg
(version='1')
(rows inserted=1)
(rows inserted=1)
(i=10.000000)
(i=20.000000)
(version='1')
(version='2')
(version='1')
(version='2')
(version='1')
(version='1')
(version='2')
(version='8eb31cbc-f341-433b-9110-53713e0dd257')
(version='84c256f9-854f-406b-9444-92bd2a63cba1')
(testcase='SET AND EXEC DEFAULT VERSIONS')
(name='sp1', ver=2)
(name='sp1', ver=1)
(name='sp2', ver=1)
(name='sp2', ver=2)
(name='sp1 hdr', ver=0)
(name='sp1', ver=1)
(name='sp2 hdr', ver=0)
(name='sp2', ver=1)
(name='sp3 hdr', ver=0)
(name='sp3', ver=1)
(testcase='EXEC SP1 WITH DIFFERENT SP/SPVERSION OVERRIDES')
(name='sp1', ver=1)
(name='sp1', ver=2)
(name='sp1', ver=1)
(name='sp1', ver=1)
(testcase='EXEC SP2 WITH DIFFERENT SP/SPVERSION OVERRIDES')
(name='sp2', ver=2)
(name='sp2', ver=2)
(name='sp2', ver=1)
(name='sp2', ver=2)
(testcase='TEST SET SPVERSION WITH NEW/OLD STYLE VERSIONS')
(id=1)
(id=2)
(id='8eb31cbc-f341-433b-9110-53713e0dd257')
(id='84c256f9-854f-406b-9444-92bd2a63cba1')
[exec procedure sp1()] failed with rc -3 no such procedure: sp1 ver:100
[exec procedure sp2()] failed with rc -3 no such procedure: sp2 ver:200
(testcase='SPVERSION APPLIES TO ONGOING SESSION ONLY')
(id=2)
(id=1)
(id='8eb31cbc-f341-433b-9110-53713e0dd257')
(id=1)
(testcase='SET INVALID DEFAULTS - VERSIONED SPs HAVE CHECKS')
[put default procedure sp2000 '2000'] failed with rc 240 no such procedure sp2000:2000
[put default procedure sp1 '2000'] failed with rc 240 no such procedure sp1:2000
(testcase='SHOULD GET SAME RESULTS AS comdb2sc.tsk')
(version='1')
(i=0)
[exec procedure dup()] failed with rc -206 add key constraint duplicate key 'I' on table 'dup' index 0
(version='sptest')
(version='sptest')
(version='sptest')
(version='sptest')
(version='sptest')
[exec procedure cons0(true)] failed with rc -3 [local consumer = db:consumer()...]:2: trigger/consumer is only supported under default transaction mode
(rows deleted=500)
(name='audit', type='trigger', tbl_name='foraudit', event='add', col='i', seq='N')
(name='audit', type='trigger', tbl_name='foraudit', event='del', col='i', seq='N')
(name='audit', type='trigger', tbl_name='foraudit', event='upd', col='i', seq='N')
(name='cons0', type='consumer', tbl_name='foraudit', event='add', col='i', seq='N')
(name='cons0', type='consumer', tbl_name='foraudit', event='del', col='i', seq='N')
(name='cons0', type='consumer', tbl_name='foraudit', event='upd', col='i', seq='N')
(name='cons1', type='consumer', tbl_name='foraudit', event='add', col='i', seq='N')
(name='cons1', type='consumer', tbl_name='foraudit', event='del', col='i', seq='N')
(name='cons1', type='consumer', tbl_name='foraudit', event='upd', col='i', seq='N')
(added_by='consumer', type='add', count(*)=1000)
(added_by='consumer', type='del', count(*)=1000)
(added_by='trigger', type='add', count(*)=500)
(added_by='trigger', type='del', count(*)=500)
(version='1')
(version='1')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='i', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='j', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='add', col='k', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='i', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='j', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='del', col='k', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='i', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='j', seq='N')
(name='a', type='trigger', tbl_name='for_trigger1', event='upd', col='k', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='a', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='b', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='add', col='c', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='a', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='b', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='del', col='c', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='a', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='b', seq='N')
(name='a', type='trigger', tbl_name='for_trigger2', event='upd', col='c', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='add', col='i', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='add', col='j', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='i', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='j', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='del', col='k', seq='N')
(name='b', type='consumer', tbl_name='for_trigger1', event='upd', col='j', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='c', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='b', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='add', col='a', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='del', col='c', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='upd', col='c', seq='N')
(name='b', type='consumer', tbl_name='for_trigger2', event='upd', col='b', seq='N')
(name='a', version='1', client_versioned='N', default='Y')
(name='audit', version='sptest', client_versioned='Y', default='Y')
(name='b', version='1', client_versioned='N', default='Y')
(name='blobliteral', version='sptest', client_versioned='Y', default='Y')
(name='bound', version='sptest', client_versioned='Y', default='Y')
(name='close', version='sptest', client_versioned='Y', default='Y')
(name='commitsp', version='1', client_versioned='N', default='Y')
(name='cons0', version='sptest', client_versioned='Y', default='Y')
(name='cons1', version='sptest', client_versioned='Y', default='Y')
(name='cons_with_sequence_epoch', version='sptest', client_versioned='Y', default='Y')
(name='cons_with_tid', version='sptest', client_versioned='Y', default='Y')
(name='dup', version='1', client_versioned='N', default='Y')
(name='gen', version='sptest', client_versioned='Y', default='Y')
(name='hexarg', version='sptest', client_versioned='Y', default='Y')
(name='json_extract', version='1', client_versioned='N', default='Y')
(name='myavg', version='sptest', client_versioned='Y', default='Y')
(name='prepare', version='sptest', client_versioned='Y', default='Y')
(name='sp1', version='1', client_versioned='N', default='N')
(name='sp1', version='2', client_versioned='N', default='N')
(name='sp2', version='1', client_versioned='N', default='N')
(name='sp2', version='2', client_versioned='N', default='Y')
(name='sp2000', version=NULL, client_versioned=NULL, default='N')
(name='sp3', version='1', client_versioned='N', default='Y')
(name='sp4', version='1', client_versioned='N', default='Y')
(name='sp4', version='2', client_versioned='N', default='N')
(name='sp4', version='84c256f9-854f-406b-9444-92bd2a63cba1', client_versioned='Y', default='N')
(name='sp4', version='8eb31cbc-f341-433b-9110-53713e0dd257', client_versioned='Y', default='N')
(name='test', version='sptest', client_versioned='Y', default='Y')
(name='test1', version='sptest1', client_versioned='Y', default='Y')
(name='test10', version='sptest10', client_versioned='Y', default='Y')
(name='test11', version='sptest11', client_versioned='Y', default='Y')
(name='test3', version='sptest3', client_versioned='Y', default='Y')
(name='test4', version='sptest4', client_versioned='Y', default='Y')
(name='test5', version='sptest5', client_versioned='Y', default='Y')
(name='test6', version='sptest6', client_versioned='Y', default='Y')
(name='test7', version='sptest7', client_versioned='Y', default='Y')
(name='test8', version='sptest8', client_versioned='Y', default='Y')
(name='test9', version='sptest9', client_versioned='Y', default='Y')
(name='transactions', version='sptest', client_versioned='Y', default='Y')
(name='types', version='sptest', client_versioned='Y', default='Y')
(1=1)
(out='Verify succeeded.')
(2=2)
(out='Usage: verify("<table>" [,"serial"|"parallel"|"data"|"blobs"|"indices",["verbose"]])')
[exec procedure sys.cmd.verify()] failed with rc -3 [sys.comdb_verify(tbl, mode, ver...]:2: Verify failed.
(3=3)
(out='Usage: verify("<table>" [,"serial"|"parallel"|"data"|"blobs"|"indices",["verbose"]])')
[exec procedure sys.cmd.verify('')] failed with rc -3 [sys.comdb_verify(tbl, mode, ver...]:2: Verify failed.
(4=4)
[exec procedure sys.cmd.verify(\"nonexistent\")] failed with rc -3 bad argument -> \"nonexistent\")
(5=5)
(out='Table "nonexistent" does not exist.')
[exec procedure sys.cmd.verify("nonexistent")] failed with rc -3 [sys.comdb_verify(tbl, mode, ver...]:2: Verify failed.
(6=6)
(version='sptest')
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(i=1, count(*)=20)
(i=2, count(*)=19)
(i=3, count(*)=18)
(i=4, count(*)=17)
(i=5, count(*)=16)
(i=6, count(*)=15)
(i=7, count(*)=14)
(i=8, count(*)=13)
(i=9, count(*)=12)
(i=10, count(*)=11)
(i=11, count(*)=10)
(i=12, count(*)=9)
(i=13, count(*)=8)
(i=14, count(*)=7)
(i=15, count(*)=6)
(i=16, count(*)=5)
(i=17, count(*)=4)
(i=18, count(*)=3)
(i=19, count(*)=2)
(i=20, count(*)=1)
(version='sptest')
($0='dup pass')
($0='verify pass')
($0='fkey pass')
($0='null pass')
($0='selectv pass')
($0='selectv pass')
($0='selectv pass')
($0='conv pass')
($0='finished')
(version='sptest')
(i=100)
(i=100)
(i=1)
(i=1)
(i=2)
(i=2)
(i=3)
(i=3)
(i=4)
(i=4)
(i=5)
(i=5)
(i=6)
(i=6)
(i=7)
(i=7)
(i=8)
(i=8)
(i=9)
(i=9)
(i=10)
(i=10)
(i=11)
(i=11)
(i=12)
(i=12)
(i=13)
(i=13)
(i=14)
(i=14)
(i=15)
(i=15)
(i=16)
(i=16)
(i=17)
(i=17)
(i=18)
(i=18)
(i=19)
(i=19)
(i=20)
(i=20)
(i=21)
(i=21)
(i=22)
(i=22)
(i=23)
(i=23)
(i=24)
(i=24)
(i=25)
(i=25)
(i=26)
(i=26)
(i=27)
(i=27)
(i=28)
(i=28)
(i=29)
(i=29)
(i=30)
(i=30)
(i=31)
(i=31)
(i=32)
(i=32)
(i=33)
(i=33)
(i=34)
(i=34)
(i=35)
(i=35)
(i=36)
(i=36)
(i=37)
(i=37)
(i=38)
(i=38)
(i=39)
(i=39)
(i=40)
(i=40)
(i=41)
(i=41)
(i=42)
(i=42)
(i=43)
(i=43)
(i=44)
(i=44)
(i=45)
(i=45)
(i=46)
(i=46)
(i=47)
(i=47)
(i=48)
(i=48)
(i=49)
(i=49)
(i=50)
(i=50)
(i=51)
(i=52)
(i=53)
(i=54)
(i=55)
(i=56)
(i=57)
(i=58)
(i=59)
(i=60)
(i=61)
(i=62)
(i=63)
(i=64)
(i=65)
(i=66)
(i=67)
(i=68)
(i=69)
(i=70)
(i=71)
(i=72)
(i=73)
(i=74)
(i=75)
(i=76)
(i=77)
(i=78)
(i=79)
(i=80)
(i=81)
(i=82)
(i=83)
(i=84)
(i=85)
(i=86)
(i=87)
(i=88)
(i=89)
(i=90)
(i=91)
(i=92)
(i=93)
(i=94)
(i=95)
(i=96)
(i=97)
(i=98)
(i=99)
(i=100)
[exec procedure reset_test()] failed with rc -3 [row = s1:fetch()...]:54: no active stmt
(expected=100, actual=100)
(version='sptest')
(count=50000, first=0, last=49999)
[exec procedure binder()] failed with rc -3 [db:column_name("count", 1); db:...]:37: attempt to change column name
(name='a', version='1', client_versioned='N', default='Y')
(name='audit', version='sptest', client_versioned='Y', default='Y')
(name='b', version='1', client_versioned='N', default='Y')
(name='binder', version='sptest', client_versioned='Y', default='Y')
(name='blobliteral', version='sptest', client_versioned='Y', default='Y')
(name='bound', version='sptest', client_versioned='Y', default='Y')
(name='close', version='sptest', client_versioned='Y', default='Y')
(name='commitsp', version='1', client_versioned='N', default='Y')
(name='cons0', version='sptest', client_versioned='Y', default='Y')
(name='cons1', version='sptest', client_versioned='Y', default='Y')
(name='cons_with_sequence_epoch', version='sptest', client_versioned='Y', default='Y')
(name='cons_with_tid', version='sptest', client_versioned='Y', default='Y')
(name='dup', version='1', client_versioned='N', default='Y')
(name='gen', version='sptest', client_versioned='Y', default='Y')
(name='hexarg', version='sptest', client_versioned='Y', default='Y')
(name='json_extract', version='1', client_versioned='N', default='Y')
(name='myavg', version='sptest', client_versioned='Y', default='Y')
(name='prepare', version='sptest', client_versioned='Y', default='Y')
(name='rcodes', version='sptest', client_versioned='Y', default='Y')
(name='reset_test', version='sptest', client_versioned='Y', default='Y')
(name='sp1', version='1', client_versioned='N', default='N')
(name='sp1', version='2', client_versioned='N', default='N')
(name='sp2', version='1', client_versioned='N', default='N')
(name='sp2', version='2', client_versioned='N', default='Y')
(name='sp2000', version=NULL, client_versioned=NULL, default='N')
(name='sp3', version='1', client_versioned='N', default='Y')
(name='sp4', version='1', client_versioned='N', default='Y')
(name='sp4', version='2', client_versioned='N', default='N')
(name='sp4', version='84c256f9-854f-406b-9444-92bd2a63cba1', client_versioned='Y', default='N')
(name='sp4', version='8eb31cbc-f341-433b-9110-53713e0dd257', client_versioned='Y', default='N')
(name='test', version='sptest', client_versioned='Y', default='Y')
(name='test1', version='sptest1', client_versioned='Y', default='Y')
(name='test10', version='sptest10', client_versioned='Y', default='Y')
(name='test11', version='sptest11', client_versioned='Y', default='Y')
(name='test3', version='sptest3', client_versioned='Y', default='Y')
(name='test4', version='sptest4', client_versioned='Y', default='Y')
(name='test5', version='sptest5', client_versioned='Y', default='Y')
(name='test6', version='sptest6', client_versioned='Y', default='Y')
(name='test7', version='sptest7', client_versioned='Y', default='Y')
(name='test8', version='sptest8', client_versioned='Y', default='Y')
(name='test9', version='sptest9', client_versioned='Y', default='Y')
(name='tmptbls', version='sptest', client_versioned='Y', default='Y')
(name='transactions', version='sptest', client_versioned='Y', default='Y')
(name='types', version='sptest', client_versioned='Y', default='Y')
(version='sptest')
[exec procedure json_utf8()] failed with rc -3 [json, rc = db:table_to_json(row...]:12: invalid utf-8 cstring in 'table_to_json'
(strategy='fail', json=NULL, rc=2)
(strategy='truncate', json='{"c":"abcde"}', rc=4)
(strategy='hex', json='{"c":"6162636465ff666768696a00"}', rc=8)
(version='sptest')
[exec procedure loop()] failed with rc -3 [db:table_to_json(x)...]:5: too many nested tables
(version='sptest')
($0=1.000000, $1='number', $2='NULL', $3='int', $4='NULL', $5='int')
($0=2.000000, $1='number', $2='NULL', $3='real', $4='NULL', $5='real')
($0=3.000000, $1='number', $2='NULL', $3='decimal', $4='NULL', $5='decimal')
($0=4.000000, $1='number', $2='NULL', $3='cstring', $4='NULL', $5='cstring')
($0=5.000000, $1='number', $2='NULL', $3='blob', $4='NULL', $5='blob')
($0=6.000000, $1='number', $2='NULL', $3='datetime', $4='NULL', $5='datetime')
($0=7.000000, $1='number', $2='NULL', $3='intervalds', $4='NULL', $5='intervalds')
($0=8.000000, $1='number', $2='NULL', $3='intervalym', $4='NULL', $5='intervalym')
($0=9.000000, $1='number', $2='lua string', $3='string', $4='lua string', $5='string')
($0=10.000000, $1='number', $2='3.14159', $3='number', $4='3.14159', $5='number')
($0=11.000000, $1='number', $2='true', $3='boolean', $4='true', $5='boolean')
($0=12.000000, $1='number', $2='592', $3='int', $4='592', $5='int')
($0=13.000000, $1='number', $2='3.14159', $3='real', $4='3.14159', $5='real')
($0=14.000000, $1='number', $2='0.3', $3='decimal', $4='0.3', $5='decimal')
($0=15.000000, $1='number', $2='comdb2 string', $3='cstring', $4='comdb2 string', $5='cstring')
($0=16.000000, $1='number', $2='deadbeef', $3='blob', $4='deadbeef', $5='blob')
($0=17.000000, $1='number', $2='2017-04-18T160323.416 America/New_York', $3='datetime', $4='2017-04-18T160323.416 America/New_York', $5='datetime')
($0=18.000000, $1='number', $2='0 00:01:00.000', $3='intervalds', $4='0 00:01:00.000', $5='intervalds')
($0=19.000000, $1='number', $2='0-10', $3='intervalym', $4='0-10', $5='intervalym')
($0=1.000000, $1='number', $2='NULL', $3='int', $4='NULL', $5='int')
($0=2.000000, $1='number', $2='NULL', $3='real', $4='NULL', $5='real')
($0=3.000000, $1='number', $2='NULL', $3='decimal', $4='NULL', $5='decimal')
($0=4.000000, $1='number', $2='NULL', $3='cstring', $4='NULL', $5='cstring')
($0=5.000000, $1='number', $2='NULL', $3='blob', $4='NULL', $5='blob')
($0=6.000000, $1='number', $2='NULL', $3='datetime', $4='NULL', $5='datetime')
($0=7.000000, $1='number', $2='NULL', $3='intervalds', $4='NULL', $5='intervalds')
($0=8.000000, $1='number', $2='NULL', $3='intervalym', $4='NULL', $5='intervalym')
($0=9.000000, $1='number', $2='lua string', $3='string', $4='lua string', $5='string')
($0=10.000000, $1='number', $2='3.14159', $3='number', $4='3.14159', $5='number')
($0=11.000000, $1='number', $2='true', $3='boolean', $4='true', $5='boolean')
($0=12.000000, $1='number', $2='592', $3='int', $4='592', $5='int')
($0=13.000000, $1='number', $2='3.14159', $3='real', $4='3.14159', $5='real')
($0=14.000000, $1='number', $2='0.3', $3='decimal', $4='0.3', $5='decimal')
($0=15.000000, $1='number', $2='comdb2 string', $3='cstring', $4='comdb2 string', $5='cstring')
($0=16.000000, $1='number', $2='deadbeef', $3='blob', $4='deadbeef', $5='blob')
($0=17.000000, $1='number', $2='2017-04-18T160323.416 America/New_York', $3='datetime', $4='2017-04-18T160323.416 America/New_York', $5='datetime')
($0=18.000000, $1='number', $2='0 00:01:00.000', $3='intervalds', $4='0 00:01:00.000', $5='intervalds')
($0=19.000000, $1='number', $2='0-10', $3='intervalym', $4='0-10', $5='intervalym')
(version='sptest')
(val0='0', val1='0')
(val0='255', val1='255')
(rows inserted=10)
(version='sptest')
($0=10.000000)
($0=10.000000)
(version='1')
(thd='main', i=1)
(thd='main', i=100000)
(thd='tmp001', i=1)
(thd='tmp001', i=100)
(thd='tmp002', i=1)
(thd='tmp002', i=200)
(thd='tmp003', i=1)
(thd='tmp003', i=300)
(thd='tmp004', i=1)
(thd='tmp004', i=400)
(thd='tmp005', i=1)
(thd='tmp005', i=500)
(thd='tmp006', i=1)
(thd='tmp006', i=600)
(thd='tmp007', i=1)
(thd='tmp007', i=700)
(thd='tmp008', i=1)
(thd='tmp008', i=800)
(thd='tmp009', i=1)
(thd='tmp009', i=900)
(thd='tmp010', i=1)
(thd='tmp010', i=1000)
(thd='tmp011', i=1)
(thd='tmp011', i=1100)
(thd='tmp012', i=1)
(thd='tmp012', i=1200)
(thd='tmp013', i=1)
(thd='tmp013', i=1300)
(thd='tmp014', i=1)
(thd='tmp014', i=1400)
(thd='tmp015', i=1)
(thd='tmp015', i=1500)
(thd='tmp016', i=1)
(thd='tmp016', i=1600)
(thd='tmp017', i=1)
(thd='tmp017', i=1700)
(thd='tmp018', i=1)
(thd='tmp018', i=1800)
(thd='tmp019', i=1)
(thd='tmp019', i=1900)
(thd='tmp020', i=1)
(thd='tmp020', i=2000)
(thd='tmp021', i=1)
(thd='tmp021', i=2100)
(thd='tmp022', i=1)
(thd='tmp022', i=2200)
(thd='tmp023', i=1)
(thd='tmp023', i=2300)
(thd='tmp024', i=1)
(thd='tmp024', i=2400)
(thd='tmp025', i=1)
(thd='tmp025', i=2500)
(thd='tmp026', i=1)
(thd='tmp026', i=2600)
(thd='tmp027', i=1)
(thd='tmp027', i=2700)
(thd='tmp028', i=1)
(thd='tmp028', i=2800)
(thd='tmp029', i=1)
(thd='tmp029', i=2900)
(thd='tmp030', i=1)
(thd='tmp030', i=3000)
(thd='tmp031', i=1)
(thd='tmp031', i=3100)
(thd='tmp032', i=1)
(thd='tmp032', i=3200)
(thd='tmp033', i=1)
(thd='tmp033', i=3300)
(thd='tmp034', i=1)
(thd='tmp034', i=3400)
(thd='tmp035', i=1)
(thd='tmp035', i=3500)
(thd='tmp036', i=1)
(thd='tmp036', i=3600)
(thd='tmp037', i=1)
(thd='tmp037', i=3700)
(thd='tmp038', i=1)
(thd='tmp038', i=3800)
(thd='tmp039', i=1)
(thd='tmp039', i=3900)
(thd='tmp040', i=1)
(thd='tmp040', i=4000)
(thd='tmp041', i=1)
(thd='tmp041', i=4100)
(thd='tmp042', i=1)
(thd='tmp042', i=4200)
(thd='tmp043', i=1)
(thd='tmp043', i=4300)
(thd='tmp044', i=1)
(thd='tmp044', i=4400)
(thd='tmp045', i=1)
(thd='tmp045', i=4500)
(thd='tmp046', i=1)
(thd='tmp046', i=4600)
(thd='tmp047', i=1)
(thd='tmp047', i=4700)
(thd='tmp048', i=1)
(thd='tmp048', i=4800)
(thd='tmp049', i=1)
(thd='tmp049', i=4900)
(thd='tmp050', i=1)
(thd='tmp050', i=5000)
(thd='tmp051', i=1)
(thd='tmp051', i=5100)
(thd='tmp052', i=1)
(thd='tmp052', i=5200)
(thd='tmp053', i=1)
(thd='tmp053', i=5300)
(thd='tmp054', i=1)
(thd='tmp054', i=5400)
(thd='tmp055', i=1)
(thd='tmp055', i=5500)
(thd='tmp056', i=1)
(thd='tmp056', i=5600)
(thd='tmp057', i=1)
(thd='tmp057', i=5700)
(thd='tmp058', i=1)
(thd='tmp058', i=5800)
(thd='tmp059', i=1)
(thd='tmp059', i=5900)
(thd='tmp060', i=1)
(thd='tmp060', i=6000)
(thd='tmp061', i=1)
(thd='tmp061', i=6100)
(thd='tmp062', i=1)
(thd='tmp062', i=6200)
(thd='tmp063', i=1)
(thd='tmp063', i=6300)
(thd='tmp064', i=1)
(thd='tmp064', i=6400)
(thd='tmp065', i=1)
(thd='tmp065', i=6500)
(thd='tmp066', i=1)
(thd='tmp066', i=6600)
(thd='tmp067', i=1)
(thd='tmp067', i=6700)
(thd='tmp068', i=1)
(thd='tmp068', i=6800)
(thd='tmp069', i=1)
(thd='tmp069', i=6900)
(thd='tmp070', i=1)
(thd='tmp070', i=7000)
(thd='tmp071', i=1)
(thd='tmp071', i=7100)
(thd='tmp072', i=1)
(thd='tmp072', i=7200)
(thd='tmp073', i=1)
(thd='tmp073', i=7300)
(thd='tmp074', i=1)
(thd='tmp074', i=7400)
(thd='tmp075', i=1)
(thd='tmp075', i=7500)
(thd='tmp076', i=1)
(thd='tmp076', i=7600)
(thd='tmp077', i=1)
(thd='tmp077', i=7700)
(thd='tmp078', i=1)
(thd='tmp078', i=7800)
(thd='tmp079', i=1)
(thd='tmp079', i=7900)
(thd='tmp080', i=1)
(thd='tmp080', i=8000)
(thd='tmp081', i=1)
(thd='tmp081', i=8100)
(thd='tmp082', i=1)
(thd='tmp082', i=8200)
(thd='tmp083', i=1)
(thd='tmp083', i=8300)
(thd='tmp084', i=1)
(thd='tmp084', i=8400)
(thd='tmp085', i=1)
(thd='tmp085', i=8500)
(thd='tmp086', i=1)
(thd='tmp086', i=8600)
(thd='tmp087', i=1)
(thd='tmp087', i=8700)
(thd='tmp088', i=1)
(thd='tmp088', i=8800)
(thd='tmp089', i=1)
(thd='tmp089', i=8900)
(thd='tmp090', i=1)
(thd='tmp090', i=9000)
(thd='tmp091', i=1)
(thd='tmp091', i=9100)
(thd='tmp092', i=1)
(thd='tmp092', i=9200)
(thd='tmp093', i=1)
(thd='tmp093', i=9300)
(thd='tmp094', i=1)
(thd='tmp094', i=9400)
(thd='tmp095', i=1)
(thd='tmp095', i=9500)
(thd='tmp096', i=1)
(thd='tmp096', i=9600)
(thd='tmp097', i=1)
(thd='tmp097', i=9700)
(thd='tmp098', i=1)
(thd='tmp098', i=9800)
(thd='tmp099', i=1)
(thd='tmp099', i=9900)
(thd='tmp100', i=1)
(thd='tmp100', i=10000)
(thd='tmp101', i=1)
(thd='tmp101', i=10100)
(thd='tmp102', i=1)
(thd='tmp102', i=10200)
(thd='tmp103', i=1)
(thd='tmp103', i=10300)
(thd='tmp104', i=1)
(thd='tmp104', i=10400)
(thd='tmp105', i=1)
(thd='tmp105', i=10500)
(thd='tmp106', i=1)
(thd='tmp106', i=10600)
(thd='tmp107', i=1)
(thd='tmp107', i=10700)
(thd='tmp108', i=1)
(thd='tmp108', i=10800)
(thd='tmp109', i=1)
(thd='tmp109', i=10900)
(thd='tmp110', i=1)
(thd='tmp110', i=11000)
(thd='tmp111', i=1)
(thd='tmp111', i=11100)
(thd='tmp112', i=1)
(thd='tmp112', i=11200)
(thd='tmp113', i=1)
(thd='tmp113', i=11300)
(thd='tmp114', i=1)
(thd='tmp114', i=11400)
(thd='tmp115', i=1)
(thd='tmp115', i=11500)
(thd='tmp116', i=1)
(thd='tmp116', i=11600)
(thd='tmp117', i=1)
(thd='tmp117', i=11700)
(thd='tmp118', i=1)
(thd='tmp118', i=11800)
(thd='tmp119', i=1)
(thd='tmp119', i=11900)
(thd='tmp120', i=1)
(thd='tmp120', i=12000)
(thd='tmp121', i=1)
(thd='tmp121', i=12100)
(thd='tmp122', i=1)
(thd='tmp122', i=12200)
(thd='tmp123', i=1)
(thd='tmp123', i=12300)
(thd='tmp124', i=1)
(thd='tmp124', i=12400)
(thd='tmp125', i=1)
(thd='tmp125', i=12500)
(thd='tmp126', i=1)
(thd='tmp126', i=12600)
(thd='tmp127', i=1)
(thd='tmp127', i=12700)
(thd='tmp128', i=1)
(thd='tmp128', i=12800)
(thd='tmp129', i=1)
(thd='tmp129', i=12900)
(thd='tmp130', i=1)
(thd='tmp130', i=13000)
(thd='tmp131', i=1)
(thd='tmp131', i=13100)
(thd='tmp132', i=1)
(thd='tmp132', i=13200)
(thd='tmp133', i=1)
(thd='tmp133', i=13300)
(thd='tmp134', i=1)
(thd='tmp134', i=13400)
(thd='tmp135', i=1)
(thd='tmp135', i=13500)
(thd='tmp136', i=1)
(thd='tmp136', i=13600)
(thd='tmp137', i=1)
(thd='tmp137', i=13700)
(thd='tmp138', i=1)
(thd='tmp138', i=13800)
(thd='tmp139', i=1)
(thd='tmp139', i=13900)
(thd='tmp140', i=1)
(thd='tmp140', i=14000)
(thd='tmp141', i=1)
(thd='tmp141', i=14100)
(thd='tmp142', i=1)
(thd='tmp142', i=14200)
(thd='tmp143', i=1)
(thd='tmp143', i=14300)
(thd='tmp144', i=1)
(thd='tmp144', i=14400)
(thd='tmp145', i=1)
(thd='tmp145', i=14500)
(thd='tmp146', i=1)
(thd='tmp146', i=14600)
(thd='tmp147', i=1)
(thd='tmp147', i=14700)
(thd='tmp148', i=1)
(thd='tmp148', i=14800)
(thd='tmp149', i=1)
(thd='tmp149', i=14900)
(thd='tmp150', i=1)
(thd='tmp150', i=15000)
(thd='tmp151', i=1)
(thd='tmp151', i=15100)
(thd='tmp152', i=1)
(thd='tmp152', i=15200)
(thd='tmp153', i=1)
(thd='tmp153', i=15300)
(thd='tmp154', i=1)
(thd='tmp154', i=15400)
(thd='tmp155', i=1)
(thd='tmp155', i=15500)
(thd='tmp156', i=1)
(thd='tmp156', i=15600)
(thd='tmp157', i=1)
(thd='tmp157', i=15700)
(thd='tmp158', i=1)
(thd='tmp158', i=15800)
(thd='tmp159', i=1)
(thd='tmp159', i=15900)
(thd='tmp160', i=1)
(thd='tmp160', i=16000)
(thd='tmp161', i=1)
(thd='tmp161', i=16100)
(thd='tmp162', i=1)
(thd='tmp162', i=16200)
(thd='tmp163', i=1)
(thd='tmp163', i=16300)
(thd='tmp164', i=1)
(thd='tmp164', i=16400)
(thd='tmp165', i=1)
(thd='tmp165', i=16500)
(thd='tmp166', i=1)
(thd='tmp166', i=16600)
(thd='tmp167', i=1)
(thd='tmp167', i=16700)
(thd='tmp168', i=1)
(thd='tmp168', i=16800)
(thd='tmp169', i=1)
(thd='tmp169', i=16900)
(thd='tmp170', i=1)
(thd='tmp170', i=17000)
(thd='tmp171', i=1)
(thd='tmp171', i=17100)
(thd='tmp172', i=1)
(thd='tmp172', i=17200)
(thd='tmp173', i=1)
(thd='tmp173', i=17300)
(thd='tmp174', i=1)
(thd='tmp174', i=17400)
(thd='tmp175', i=1)
(thd='tmp175', i=17500)
(thd='tmp176', i=1)
(thd='tmp176', i=17600)
(thd='tmp177', i=1)
(thd='tmp177', i=17700)
(thd='tmp178', i=1)
(thd='tmp178', i=17800)
(thd='tmp179', i=1)
(thd='tmp179', i=17900)
(thd='tmp180', i=1)
(thd='tmp180', i=18000)
(thd='tmp181', i=1)
(thd='tmp181', i=18100)
(thd='tmp182', i=1)
(thd='tmp182', i=18200)
(thd='tmp183', i=1)
(thd='tmp183', i=18300)
(thd='tmp184', i=1)
(thd='tmp184', i=18400)
(thd='tmp185', i=1)
(thd='tmp185', i=18500)
(thd='tmp186', i=1)
(thd='tmp186', i=18600)
(thd='tmp187', i=1)
(thd='tmp187', i=18700)
(thd='tmp188', i=1)
(thd='tmp188', i=18800)
(thd='tmp189', i=1)
(thd='tmp189', i=18900)
(thd='tmp190', i=1)
(thd='tmp190', i=19000)
(thd='tmp191', i=1)
(thd='tmp191', i=19100)
(thd='tmp192', i=1)
(thd='tmp192', i=19200)
(thd='tmp193', i=1)
(thd='tmp193', i=19300)
(thd='tmp194', i=1)
(thd='tmp194', i=19400)
(thd='tmp195', i=1)
(thd='tmp195', i=19500)
(thd='tmp196', i=1)
(thd='tmp196', i=19600)
(thd='tmp197', i=1)
(thd='tmp197', i=19700)
(thd='tmp198', i=1)
(thd='tmp198', i=19800)
(thd='tmp199', i=1)
(thd='tmp199', i=19900)
(thd='tmp200', i=1)
(thd='tmp200', i=20000)
(thd='tmp201', i=1)
(thd='tmp201', i=20100)
(thd='tmp202', i=1)
(thd='tmp202', i=20200)
(thd='tmp203', i=1)
(thd='tmp203', i=20300)
(thd='tmp204', i=1)
(thd='tmp204', i=20400)
(thd='tmp205', i=1)
(thd='tmp205', i=20500)
(thd='tmp206', i=1)
(thd='tmp206', i=20600)
(thd='tmp207', i=1)
(thd='tmp207', i=20700)
(thd='tmp208', i=1)
(thd='tmp208', i=20800)
(thd='tmp209', i=1)
(thd='tmp209', i=20900)
(thd='tmp210', i=1)
(thd='tmp210', i=21000)
(thd='tmp211', i=1)
(thd='tmp211', i=21100)
(thd='tmp212', i=1)
(thd='tmp212', i=21200)
(thd='tmp213', i=1)
(thd='tmp213', i=21300)
(thd='tmp214', i=1)
(thd='tmp214', i=21400)
(thd='tmp215', i=1)
(thd='tmp215', i=21500)
(thd='tmp216', i=1)
(thd='tmp216', i=21600)
(thd='tmp217', i=1)
(thd='tmp217', i=21700)
(thd='tmp218', i=1)
(thd='tmp218', i=21800)
(thd='tmp219', i=1)
(thd='tmp219', i=21900)
(thd='tmp220', i=1)
(thd='tmp220', i=22000)
(thd='tmp221', i=1)
(thd='tmp221', i=22100)
(thd='tmp222', i=1)
(thd='tmp222', i=22200)
(thd='tmp223', i=1)
(thd='tmp223', i=22300)
(thd='tmp224', i=1)
(thd='tmp224', i=22400)
(thd='tmp225', i=1)
(thd='tmp225', i=22500)
(thd='tmp226', i=1)
(thd='tmp226', i=22600)
(thd='tmp227', i=1)
(thd='tmp227', i=22700)
(thd='tmp228', i=1)
(thd='tmp228', i=22800)
(thd='tmp229', i=1)
(thd='tmp229', i=22900)
(thd='tmp230', i=1)
(thd='tmp230', i=23000)
(thd='tmp231', i=1)
(thd='tmp231', i=23100)
(thd='tmp232', i=1)
(thd='tmp232', i=23200)
(thd='tmp233', i=1)
(thd='tmp233', i=23300)
(thd='tmp234', i=1)
(thd='tmp234', i=23400)
(thd='tmp235', i=1)
(thd='tmp235', i=23500)
(thd='tmp236', i=1)
(thd='tmp236', i=23600)
(thd='tmp237', i=1)
(thd='tmp237', i=23700)
(thd='tmp238', i=1)
(thd='tmp238', i=23800)
(thd='tmp239', i=1)
(thd='tmp239', i=23900)
(thd='tmp240', i=1)
(thd='tmp240', i=24000)
(thd='tmp241', i=1)
(thd='tmp241', i=24100)
(thd='tmp242', i=1)
(thd='tmp242', i=24200)
(thd='tmp243', i=1)
(thd='tmp243', i=24300)
(thd='tmp244', i=1)
(thd='tmp244', i=24400)
(thd='tmp245', i=1)
(thd='tmp245', i=24500)
(thd='tmp246', i=1)
(thd='tmp246', i=24600)
(thd='tmp247', i=1)
(thd='tmp247', i=24700)
(thd='tmp248', i=1)
(thd='tmp248', i=24800)
(thd='tmp249', i=1)
(thd='tmp249', i=24900)
(thd='tmp250', i=1)
(thd='tmp250', i=25000)
(thd='tmp251', i=1)
(thd='tmp251', i=25100)
(thd='tmp252', i=1)
(thd='tmp252', i=25200)
(thd='tmp253', i=1)
(thd='tmp253', i=25300)
(thd='tmp254', i=1)
(thd='tmp254', i=25400)
(thd='tmp255', i=1)
(thd='tmp255', i=25500)
(thd='tmp256', i=1)
(thd='tmp256', i=25600)
(thd='tmp257', i=1)
(thd='tmp257', i=25700)
(thd='tmp258', i=1)
(thd='tmp258', i=25800)
(thd='tmp259', i=1)
(thd='tmp259', i=25900)
(thd='tmp260', i=1)
(thd='tmp260', i=26000)
(thd='tmp261', i=1)
(thd='tmp261', i=26100)
(thd='tmp262', i=1)
(thd='tmp262', i=26200)
(thd='tmp263', i=1)
(thd='tmp263', i=26300)
(thd='tmp264', i=1)
(thd='tmp264', i=26400)
(thd='tmp265', i=1)
(thd='tmp265', i=26500)
(thd='tmp266', i=1)
(thd='tmp266', i=26600)
(thd='tmp267', i=1)
(thd='tmp267', i=26700)
(thd='tmp268', i=1)
(thd='tmp268', i=26800)
(thd='tmp269', i=1)
(thd='tmp269', i=26900)
(thd='tmp270', i=1)
(thd='tmp270', i=27000)
(thd='tmp271', i=1)
(thd='tmp271', i=27100)
(thd='tmp272', i=1)
(thd='tmp272', i=27200)
(thd='tmp273', i=1)
(thd='tmp273', i=27300)
(thd='tmp274', i=1)
(thd='tmp274', i=27400)
(thd='tmp275', i=1)
(thd='tmp275', i=27500)
(thd='tmp276', i=1)
(thd='tmp276', i=27600)
(thd='tmp277', i=1)
(thd='tmp277', i=27700)
(thd='tmp278', i=1)
(thd='tmp278', i=27800)
(thd='tmp279', i=1)
(thd='tmp279', i=27900)
(thd='tmp280', i=1)
(thd='tmp280', i=28000)
(thd='tmp281', i=1)
(thd='tmp281', i=28100)
(thd='tmp282', i=1)
(thd='tmp282', i=28200)
(thd='tmp283', i=1)
(thd='tmp283', i=28300)
(thd='tmp284', i=1)
(thd='tmp284', i=28400)
(thd='tmp285', i=1)
(thd='tmp285', i=28500)
(thd='tmp286', i=1)
(thd='tmp286', i=28600)
(thd='tmp287', i=1)
(thd='tmp287', i=28700)
(thd='tmp288', i=1)
(thd='tmp288', i=28800)
(thd='tmp289', i=1)
(thd='tmp289', i=28900)
(thd='tmp290', i=1)
(thd='tmp290', i=29000)
(thd='tmp291', i=1)
(thd='tmp291', i=29100)
(thd='tmp292', i=1)
(thd='tmp292', i=29200)
(thd='tmp293', i=1)
(thd='tmp293', i=29300)
(thd='tmp294', i=1)
(thd='tmp294', i=29400)
(thd='tmp295', i=1)
(thd='tmp295', i=29500)
(thd='tmp296', i=1)
(thd='tmp296', i=29600)
(thd='tmp297', i=1)
(thd='tmp297', i=29700)
(thd='tmp298', i=1)
(thd='tmp298', i=29800)
(thd='tmp299', i=1)
(thd='tmp299', i=29900)
(thd='tmp300', i=1)
(thd='tmp300', i=30000)
(thd='tmp301', i=1)
(thd='tmp301', i=30100)
(thd='tmp302', i=1)
(thd='tmp302', i=30200)
(thd='tmp303', i=1)
(thd='tmp303', i=30300)
(thd='tmp304', i=1)
(thd='tmp304', i=30400)
(thd='tmp305', i=1)
(thd='tmp305', i=30500)
(thd='tmp306', i=1)
(thd='tmp306', i=30600)
(thd='tmp307', i=1)
(thd='tmp307', i=30700)
(thd='tmp308', i=1)
(thd='tmp308', i=30800)
(thd='tmp309', i=1)
(thd='tmp309', i=30900)
(thd='tmp310', i=1)
(thd='tmp310', i=31000)
(thd='tmp311', i=1)
(thd='tmp311', i=31100)
(thd='tmp312', i=1)
(thd='tmp312', i=31200)
(thd='tmp313', i=1)
(thd='tmp313', i=31300)
(thd='tmp314', i=1)
(thd='tmp314', i=31400)
(thd='tmp315', i=1)
(thd='tmp315', i=31500)
(thd='tmp316', i=1)
(thd='tmp316', i=31600)
(thd='tmp317', i=1)
(thd='tmp317', i=31700)
(thd='tmp318', i=1)
(thd='tmp318', i=31800)
(thd='tmp319', i=1)
(thd='tmp319', i=31900)
(thd='tmp320', i=1)
(thd='tmp320', i=32000)
(thd='tmp321', i=1)
(thd='tmp321', i=32100)
(thd='tmp322', i=1)
(thd='tmp322', i=32200)
(thd='tmp323', i=1)
(thd='tmp323', i=32300)
(thd='tmp324', i=1)
(thd='tmp324', i=32400)
(thd='tmp325', i=1)
(thd='tmp325', i=32500)
(thd='tmp326', i=1)
(thd='tmp326', i=32600)
(thd='tmp327', i=1)
(thd='tmp327', i=32700)
(thd='tmp328', i=1)
(thd='tmp328', i=32800)
(thd='tmp329', i=1)
(thd='tmp329', i=32900)
(thd='tmp330', i=1)
(thd='tmp330', i=33000)
(thd='tmp331', i=1)
(thd='tmp331', i=33100)
(thd='tmp332', i=1)
(thd='tmp332', i=33200)
(thd='tmp333', i=1)
(thd='tmp333', i=33300)
(thd='tmp334', i=1)
(thd='tmp334', i=33400)
(thd='tmp335', i=1)
(thd='tmp335', i=33500)
(thd='tmp336', i=1)
(thd='tmp336', i=33600)
(thd='tmp337', i=1)
(thd='tmp337', i=33700)
(thd='tmp338', i=1)
(thd='tmp338', i=33800)
(thd='tmp339', i=1)
(thd='tmp339', i=33900)
(thd='tmp340', i=1)
(thd='tmp340', i=34000)
(thd='tmp341', i=1)
(thd='tmp341', i=34100)
(thd='tmp342', i=1)
(thd='tmp342', i=34200)
(thd='tmp343', i=1)
(thd='tmp343', i=34300)
(thd='tmp344', i=1)
(thd='tmp344', i=34400)
(thd='tmp345', i=1)
(thd='tmp345', i=34500)
(thd='tmp346', i=1)
(thd='tmp346', i=34600)
(thd='tmp347', i=1)
(thd='tmp347', i=34700)
(thd='tmp348', i=1)
(thd='tmp348', i=34800)
(thd='tmp349', i=1)
(thd='tmp349', i=34900)
(thd='tmp350', i=1)
(thd='tmp350', i=35000)
(thd='tmp351', i=1)
(thd='tmp351', i=35100)
(thd='tmp352', i=1)
(thd='tmp352', i=35200)
(thd='tmp353', i=1)
(thd='tmp353', i=35300)
(thd='tmp354', i=1)
(thd='tmp354', i=35400)
(thd='tmp355', i=1)
(thd='tmp355', i=35500)
(thd='tmp356', i=1)
(thd='tmp356', i=35600)
(thd='tmp357', i=1)
(thd='tmp357', i=35700)
(thd='tmp358', i=1)
(thd='tmp358', i=35800)
(thd='tmp359', i=1)
(thd='tmp359', i=35900)
(thd='tmp360', i=1)
(thd='tmp360', i=36000)
(thd='tmp361', i=1)
(thd='tmp361', i=36100)
(thd='tmp362', i=1)
(thd='tmp362', i=36200)
(thd='tmp363', i=1)
(thd='tmp363', i=36300)
(thd='tmp364', i=1)
(thd='tmp364', i=36400)
(thd='tmp365', i=1)
(thd='tmp365', i=36500)
(thd='tmp366', i=1)
(thd='tmp366', i=36600)
(thd='tmp367', i=1)
(thd='tmp367', i=36700)
(thd='tmp368', i=1)
(thd='tmp368', i=36800)
(thd='tmp369', i=1)
(thd='tmp369', i=36900)
(thd='tmp370', i=1)
(thd='tmp370', i=37000)
(thd='tmp371', i=1)
(thd='tmp371', i=37100)
(thd='tmp372', i=1)
(thd='tmp372', i=37200)
(thd='tmp373', i=1)
(thd='tmp373', i=37300)
(thd='tmp374', i=1)
(thd='tmp374', i=37400)
(thd='tmp375', i=1)
(thd='tmp375', i=37500)
(thd='tmp376', i=1)
(thd='tmp376', i=37600)
(thd='tmp377', i=1)
(thd='tmp377', i=37700)
(thd='tmp378', i=1)
(thd='tmp378', i=37800)
(thd='tmp379', i=1)
(thd='tmp379', i=37900)
(thd='tmp380', i=1)
(thd='tmp380', i=38000)
(thd='tmp381', i=1)
(thd='tmp381', i=38100)
(thd='tmp382', i=1)
(thd='tmp382', i=38200)
(thd='tmp383', i=1)
(thd='tmp383', i=38300)
(thd='tmp384', i=1)
(thd='tmp384', i=38400)
(thd='tmp385', i=1)
(thd='tmp385', i=38500)
(thd='tmp386', i=1)
(thd='tmp386', i=38600)
(thd='tmp387', i=1)
(thd='tmp387', i=38700)
(thd='tmp388', i=1)
(thd='tmp388', i=38800)
(thd='tmp389', i=1)
(thd='tmp389', i=38900)
(thd='tmp390', i=1)
(thd='tmp390', i=39000)
(thd='tmp391', i=1)
(thd='tmp391', i=39100)
(thd='tmp392', i=1)
(thd='tmp392', i=39200)
(thd='tmp393', i=1)
(thd='tmp393', i=39300)
(thd='tmp394', i=1)
(thd='tmp394', i=39400)
(thd='tmp395', i=1)
(thd='tmp395', i=39500)
(thd='tmp396', i=1)
(thd='tmp396', i=39600)
(thd='tmp397', i=1)
(thd='tmp397', i=39700)
(thd='tmp398', i=1)
(thd='tmp398', i=39800)
(thd='tmp399', i=1)
(thd='tmp399', i=39900)
(thd='tmp400', i=1)
(thd='tmp400', i=40000)
(thd='tmp401', i=1)
(thd='tmp401', i=40100)
(thd='tmp402', i=1)
(thd='tmp402', i=40200)
(thd='tmp403', i=1)
(thd='tmp403', i=40300)
(thd='tmp404', i=1)
(thd='tmp404', i=40400)
(thd='tmp405', i=1)
(thd='tmp405', i=40500)
(thd='tmp406', i=1)
(thd='tmp406', i=40600)
(thd='tmp407', i=1)
(thd='tmp407', i=40700)
(thd='tmp408', i=1)
(thd='tmp408', i=40800)
(thd='tmp409', i=1)
(thd='tmp409', i=40900)
(thd='tmp410', i=1)
(thd='tmp410', i=41000)
(thd='tmp411', i=1)
(thd='tmp411', i=41100)
(thd='tmp412', i=1)
(thd='tmp412', i=41200)
(thd='tmp413', i=1)
(thd='tmp413', i=41300)
(thd='tmp414', i=1)
(thd='tmp414', i=41400)
(thd='tmp415', i=1)
(thd='tmp415', i=41500)
(thd='tmp416', i=1)
(thd='tmp416', i=41600)
(thd='tmp417', i=1)
(thd='tmp417', i=41700)
(thd='tmp418', i=1)
(thd='tmp418', i=41800)
(thd='tmp419', i=1)
(thd='tmp419', i=41900)
(thd='tmp420', i=1)
(thd='tmp420', i=42000)
(thd='tmp421', i=1)
(thd='tmp421', i=42100)
(thd='tmp422', i=1)
(thd='tmp422', i=42200)
(thd='tmp423', i=1)
(thd='tmp423', i=42300)
(thd='tmp424', i=1)
(thd='tmp424', i=42400)
(thd='tmp425', i=1)
(thd='tmp425', i=42500)
(thd='tmp426', i=1)
(thd='tmp426', i=42600)
(thd='tmp427', i=1)
(thd='tmp427', i=42700)
(thd='tmp428', i=1)
(thd='tmp428', i=42800)
(thd='tmp429', i=1)
(thd='tmp429', i=42900)
(thd='tmp430', i=1)
(thd='tmp430', i=43000)
(thd='tmp431', i=1)
(thd='tmp431', i=43100)
(thd='tmp432', i=1)
(thd='tmp432', i=43200)
(thd='tmp433', i=1)
(thd='tmp433', i=43300)
(thd='tmp434', i=1)
(thd='tmp434', i=43400)
(thd='tmp435', i=1)
(thd='tmp435', i=43500)
(thd='tmp436', i=1)
(thd='tmp436', i=43600)
(thd='tmp437', i=1)
(thd='tmp437', i=43700)
(thd='tmp438', i=1)
(thd='tmp438', i=43800)
(thd='tmp439', i=1)
(thd='tmp439', i=43900)
(thd='tmp440', i=1)
(thd='tmp440', i=44000)
(thd='tmp441', i=1)
(thd='tmp441', i=44100)
(thd='tmp442', i=1)
(thd='tmp442', i=44200)
(thd='tmp443', i=1)
(thd='tmp443', i=44300)
(thd='tmp444', i=1)
(thd='tmp444', i=44400)
(thd='tmp445', i=1)
(thd='tmp445', i=44500)
(thd='tmp446', i=1)
(thd='tmp446', i=44600)
(thd='tmp447', i=1)
(thd='tmp447', i=44700)
(thd='tmp448', i=1)
(thd='tmp448', i=44800)
(thd='tmp449', i=1)
(thd='tmp449', i=44900)
(thd='tmp450', i=1)
(thd='tmp450', i=45000)
(thd='tmp451', i=1)
(thd='tmp451', i=45100)
(thd='tmp452', i=1)
(thd='tmp452', i=45200)
(thd='tmp453', i=1)
(thd='tmp453', i=45300)
(thd='tmp454', i=1)
(thd='tmp454', i=45400)
(thd='tmp455', i=1)
(thd='tmp455', i=45500)
(thd='tmp456', i=1)
(thd='tmp456', i=45600)
(thd='tmp457', i=1)
(thd='tmp457', i=45700)
(thd='tmp458', i=1)
(thd='tmp458', i=45800)
(thd='tmp459', i=1)
(thd='tmp459', i=45900)
(thd='tmp460', i=1)
(thd='tmp460', i=46000)
(thd='tmp461', i=1)
(thd='tmp461', i=46100)
(thd='tmp462', i=1)
(thd='tmp462', i=46200)
(thd='tmp463', i=1)
(thd='tmp463', i=46300)
(thd='tmp464', i=1)
(thd='tmp464', i=46400)
(thd='tmp465', i=1)
(thd='tmp465', i=46500)
(thd='tmp466', i=1)
(thd='tmp466', i=46600)
(thd='tmp467', i=1)
(thd='tmp467', i=46700)
(thd='tmp468', i=1)
(thd='tmp468', i=46800)
(thd='tmp469', i=1)
(thd='tmp469', i=46900)
(thd='tmp470', i=1)
(thd='tmp470', i=47000)
(thd='tmp471', i=1)
(thd='tmp471', i=47100)
(thd='tmp472', i=1)
(thd='tmp472', i=47200)
(thd='tmp473', i=1)
(thd='tmp473', i=47300)
(thd='tmp474', i=1)
(thd='tmp474', i=47400)
(thd='tmp475', i=1)
(thd='tmp475', i=47500)
(thd='tmp476', i=1)
(thd='tmp476', i=47600)
(thd='tmp477', i=1)
(thd='tmp477', i=47700)
(thd='tmp478', i=1)
(thd='tmp478', i=47800)
(thd='tmp479', i=1)
(thd='tmp479', i=47900)
(thd='tmp480', i=1)
(thd='tmp480', i=48000)
(thd='tmp481', i=1)
(thd='tmp481', i=48100)
(thd='tmp482', i=1)
(thd='tmp482', i=48200)
(thd='tmp483', i=1)
(thd='tmp483', i=48300)
(thd='tmp484', i=1)
(thd='tmp484', i=48400)
(thd='tmp485', i=1)
(thd='tmp485', i=48500)
(thd='tmp486', i=1)
(thd='tmp486', i=48600)
(thd='tmp487', i=1)
(thd='tmp487', i=48700)
(thd='tmp488', i=1)
(thd='tmp488', i=48800)
(thd='tmp489', i=1)
(thd='tmp489', i=48900)
(thd='tmp490', i=1)
(thd='tmp490', i=49000)
(thd='tmp491', i=1)
(thd='tmp491', i=49100)
(thd='tmp492', i=1)
(thd='tmp492', i=49200)
(thd='tmp493', i=1)
(thd='tmp493', i=49300)
(thd='tmp494', i=1)
(thd='tmp494', i=49400)
(thd='tmp495', i=1)
(thd='tmp495', i=49500)
(thd='tmp496', i=1)
(thd='tmp496', i=49600)
(thd='tmp497', i=1)
(thd='tmp497', i=49700)
(thd='tmp498', i=1)
(thd='tmp498', i=49800)
(thd='tmp499', i=1)
(thd='tmp499', i=49900)
(thd='tmp500', i=1)
(thd='tmp500', i=50000)
(version='sp_no_ddl_test1')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP TABLE no_ddl_tmp0(x INT)')
(exec_rc=23, prepare_rc=23, ddl='DROP TABLE no_ddl_tmp1')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP INDEX no_ddl_tmp1_i1 ON no_ddl_tmp1(x)')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP TRIGGER no_ddl_tmp1_tr1 UPDATE OF x ON no_ddl_tmp1 BEGIN SELECT 1; END')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP VIEW no_ddl_tv1 AS SELECT 1')
(exec_rc=23, prepare_rc=23, ddl='PUT TUNABLE allow_lua_print 'OFF'')
(exec_rc=23, prepare_rc=23, ddl='CREATE INDEX no_ddl_t1_i2 ON no_ddl_t1(x)')
(exec_rc=23, prepare_rc=23, ddl='CREATE TABLE t1(x INT)')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP INDEX no_ddl_tmp1_i2 ON no_ddl_tmp1(x)')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP TABLE tmp1(x INT)')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP TRIGGER tr1 UPDATE OF x ON no_ddl_t1 BEGIN SELECT 1; END')
(exec_rc=23, prepare_rc=23, ddl='CREATE TEMP VIEW v1 AS SELECT 1')
(exec_rc=23, prepare_rc=23, ddl='CREATE TRIGGER tr1 UPDATE OF x ON no_ddl_t1 BEGIN SELECT 1; END')
(exec_rc=23, prepare_rc=23, ddl='CREATE VIEW v1 AS SELECT 1')
(exec_rc=23, prepare_rc=23, ddl='DROP INDEX no_ddl_t1_i1')
(exec_rc=23, prepare_rc=23, ddl='DROP INDEX no_ddl_tmp1_i1')
(exec_rc=23, prepare_rc=23, ddl='DROP lua consumer no_ddl_proc1')
(exec_rc=23, prepare_rc=23, ddl='ALTER TABLE no_ddl_t1 ADD COLUMN y INT')
(exec_rc=23, prepare_rc=23, ddl='REBUILD no_ddl_t1')
(exec_rc=23, prepare_rc=23, ddl='REBUILD INDEX no_ddl_t1 no_ddl_t1_i1')
(exec_rc=23, prepare_rc=23, ddl='REBUILD DATA no_ddl_t1')
(exec_rc=23, prepare_rc=23, ddl='REBUILD DATABLOB no_ddl_t2')
(exec_rc=23, prepare_rc=23, ddl='TRUNCATE TABLE no_ddl_t1')
(exec_rc=23, prepare_rc=23, ddl='CREATE PROCEDURE nestedtest1 VERSION 'spnestedtest1' {}')
(exec_rc=23, prepare_rc=23, ddl='DROP PROCEDURE no_ddl_proc1 'sp_no_ddl_proc1'')
(exec_rc=23, prepare_rc=23, ddl='CREATE TIME PARTITION ON no_ddl_t3 AS p1 PERIOD 'DAILY' RETENTION 30 START '2018-04-30'')
(exec_rc=23, prepare_rc=23, ddl='DROP TIME PARTITION no_ddl_t3_p1')
(exec_rc=23, prepare_rc=23, ddl='GET KW')
(exec_rc=23, prepare_rc=23, ddl='PUT AUTHENTICATION ON')
(exec_rc=23, prepare_rc=23, ddl='GRANT OP TO 'auth_test_user'')
(exec_rc=23, prepare_rc=23, ddl='REVOKE OP TO 'auth_test_user'')
(exec_rc=23, prepare_rc=23, ddl='CREATE LUA SCALAR FUNCTION no_ddl_proc2')
(exec_rc=23, prepare_rc=23, ddl='DROP LUA SCALAR FUNCTION no_ddl_proc2')
(exec_rc=23, prepare_rc=23, ddl='CREATE LUA AGGREGATE FUNCTION no_ddl_proc2')
(exec_rc=23, prepare_rc=23, ddl='DROP LUA AGGREGATE FUNCTION no_ddl_proc2')
(exec_rc=23, prepare_rc=23, ddl='CREATE LUA TRIGGER no_ddl_proc1 ON (TABLE no_ddl_t1 FOR INSERT OF x)')
(exec_rc=23, prepare_rc=23, ddl='DROP LUA TRIGGER no_ddl_proc1')
(exec_rc=23, prepare_rc=23, ddl='CREATE LUA CONSUMER no_ddl_proc1 ON (TABLE no_ddl_t1 FOR INSERT OF x)')
(exec_rc=23, prepare_rc=23, ddl='DROP LUA CONSUMER no_ddl_proc1')
($0='{"emoji":"hello world 😁"}')
($0='{"control":"\u0007"}')
