#!/bin/bash

db=$1
failed=0
export lastins=0
#debug=1

[[ "$debug" == 1 ]] && set -x

stage=default
if [[ -z "$CDB2_OPTIONS" ]]; then
    stage=local
fi

function insertrecords
{
    [[ "$debug" == "1" ]] && set -x
    count=$1
    f=./insert.$lastins.sql
    echo "begin" > $f
    j=0
    while [[ $j -lt $count ]] ; do
        echo "insert into jepsen (id, value) values ($lastins, $lastins)" >> $f
        let lastins=lastins+1
        let j=j+1
    done
    echo "commit" >> $f
    echo " " >> $f
    cdb2sql ${CDB2_OPTIONS} $db $stage - < $f
    [[ "$debug" != "1" ]] && rm $f
}


cdb2sql ${CDB2_OPTIONS} $db $stage "create table jepsen {schema{int id int value} keys{\"id\" = id}}"

cdb2sql -tabs ${CDB2_OPTIONS} $db $stage "exec procedure sys.cmd.send(\"seed_genid48 122C34\")"
insertrecords 10000

cdb2sql -tabs ${CDB2_OPTIONS} $db $stage "exec procedure sys.cmd.send(\"seed_genid48 127A51\")"
insertrecords 10000

cdb2sql -tabs ${CDB2_OPTIONS} $db $stage "exec procedure sys.cmd.send(\"seed_genid48 130000\")"
insertrecords 10000

cdb2sql -tabs ${CDB2_OPTIONS} $db $stage "exec procedure sys.cmd.send(\"seed_genid48 1302DB\")"

x=$(cdb2sql -tabs ${CDB2_OPTIONS} $db $stage - < count.sql)
echo "$x" | grep "$lastins"
if [[ "$?" == 0 ]]; then
    echo "success"
    exit 0
else
    echo "failed: expected count of 30000, but got $x"
    exit 1
fi
