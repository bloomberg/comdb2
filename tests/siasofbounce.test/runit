#!/usr/bin/env bash
bash -n "$0" | exit 1

source ${TESTSROOTDIR}/tools/cluster_utils.sh
source ${TESTSROOTDIR}/tools/runit_common.sh

insert() {
	local itr=1
	while cdb2sql ${CDB2_OPTIONS} "${DBNAME}" "insert into t values("${itr}")";
	do
		(( itr++ ))
		sleep .1
	done
	return 1
}

run_asof_snapshot_query() {
	local -r asof_time=$1 

cdb2sql --tabs ${CDB2_OPTIONS} "${DBNAME}" default - <<EOF
set transaction snapshot
begin transaction as of datetime ${asof_time}
select count(*) from t
commit
EOF
}

main() {
	set -e

	cdb2sql --tabs ${CDB2_OPTIONS} "${DBNAME}" default "create table t(i int)"

	insert > /dev/null &
	local -r pid=$!

	sleep 1
	local asof_time
	asof_time=$(date +%FT%T.%N)
	readonly asof_time
	sleep 1

	local results_before_bounce
	results_before_bounce=$(run_asof_snapshot_query "${asof_time}") 
	readonly results_before_bounce

	local -r MAX_FLUSH_ITRS=3
	local flush_itr
	for (( flush_itr=0; flush_itr<MAX_FLUSH_ITRS; flush_itr++ )); do
		cdb2sql --tabs ${CDB2_OPTIONS} "${DBNAME}" default "exec procedure sys.cmd.send('flush')"
		sleep 1
	done

	kill -9 "${pid}"

	set +e
	local -r KILL_WAIT_TIME=5
	kill_restart_node $(hostname) "${KILL_WAIT_TIME}"
	set -e

	local results_after_bounce
	results_after_bounce=$(run_asof_snapshot_query "${asof_time}")
	readonly results_after_bounce

	if [[ "${results_before_bounce}" != "${results_after_bounce}" ]]; then
		err "PIT snapshot results before bounce and after bounce do not match!"
		err "Before bounce:"
		err "${results_before_bounce}"
		err "After bounce:"
		err "${results_after_bounce}"
		exit 1
	else
		echo "Passed test"
		exit 0
	fi
}

main
