#!/usr/bin/env bash
bash -n "$0" | exit 1

# This test verifies that si-snapshots work correctly against 'big' berkley 
# operations
#
# Will test the following:
#       Update from a normal record to a big record
#       Update from a big record to another big record
#       Update from a big record to a normal record

db=$1
debug=0
cppid=-1

#set -x
set -e

TMPDIR=${TMPDIR:-/tmp}


# Artificially torque the pagesize down to 4096
cdb2sql ${CDB2_OPTIONS} $db default "truncate t1"
master=`cdb2sql --tabs ${CDB2_OPTIONS} $db default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
echo "master node is $master"
cdb2sql ${CDB2_OPTIONS} --host $master $db "select comdb2_host()"
cdb2sql ${CDB2_OPTIONS} --host $master $db 'exec procedure sys.cmd.send("pagesize set t1 blob 4096")'
cdb2sql ${CDB2_OPTIONS} $db default "rebuild t1"

[[ "$debug" == "1" ]] && set -x

function errquit
{
    typeset msg=$1
    [[ "$debug" == "1" ]] && set -x
    echo 2>&1 "ERROR: $msg"
    echo 2>&1 "Testcase failed."
    #print -p "quit"
    sleep 1
    [[ "$cppid" != -1 ]] && kill -9 $cppid
    exit 1
}

cdb2sql ${CDB2_OPTIONS} $db default "insert into t1(a, b1) values (1, x'12345678')"

coproc stdbuf -oL cdb2sql -s ${CDB2_OPTIONS} $db default - 
cppid=$!

echo me: $$ COPROC $cppid fd in ${COPROC[0]} out ${COPROC[1]}

echo "set transaction snapshot isolation" >&${COPROC[1]}
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
echo "out is $out"
[[ "$out" != "(count(*)=1)" ]] && errquit "Incorrect count from initial read: $out"

#############################################################################
# Snapshot should remain the same after update from small to a large record #
#############################################################################

results1=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.1
bigrec1=$(cat bigrec1.txt)
echo "begin" >&${COPROC[1]}
echo >&${COPROC[1]} "@redirect $results1"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
cdb2sql -s ${CDB2_OPTIONS} $db default "update t1 set b1=x'$bigrec1' where a=1" &>/dev/null

results2=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.2
echo >&${COPROC[1]} "@redirect $results2"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
echo >&${COPROC[1]} "commit"
echo >&${COPROC[1]} "select count(*) from t1"
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=1)" ]] && errquit "Bad count after update: small to large record (first test)"
diff $results1 $results2
[[ $? != 0 ]] && errquit "Snapshot error after updating from small to large record"


#############################################################################
# Snapshot should remain the same after update from large to a large record #
#############################################################################

results1=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.1
bigrec2=$(cat bigrec2.txt)
echo >&${COPROC[1]} "begin"
echo >&${COPROC[1]} "@redirect $results1"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
cdb2sql -s ${CDB2_OPTIONS} $db default "update t1 set b1=x'$bigrec2' where a=1" &>/dev/null

results2=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.2
echo >&${COPROC[1]} "@redirect $results2"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
echo >&${COPROC[1]} "commit"
echo >&${COPROC[1]} "select count(*) from t1"
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=1)" ]] && errquit "Bad count after update: large to large record (second test)"
diff $results1 $results2
[[ $? != 0 ]] && errquit "Snapshot error after updating from large to large record"


#############################################################################
# Snapshot should remain the same after update from large to a small record #
#############################################################################

results1=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.1
echo >&${COPROC[1]} "begin"
echo >&${COPROC[1]} "@redirect $results1"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
cdb2sql -s ${CDB2_OPTIONS} $db default "update t1 set b1=x'1234' where a=1" &>/dev/null

results2=${TMPDIR}/cdb2tst_big.$$.$RANDOM.tmp.2
echo >&${COPROC[1]} "@redirect $results2"
echo >&${COPROC[1]} "select * from t1"
echo >&${COPROC[1]} "@redirect"
echo >&${COPROC[1]} "commit"
echo >&${COPROC[1]} "select count(*) from t1"
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=1)" ]] && errquit "Bad count after update: large to large record (second test)"
diff $results1 $results2
[[ $? != 0 ]] && errquit "Snapshot error after updating from large to small record"

echo >&${COPROC[1]} "quit"

cdb2sql ${CDB2_OPTIONS} --host $master $db 'exec procedure sys.cmd.send("flush")'
echo "Success!"
exit 0
