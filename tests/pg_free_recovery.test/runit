#!/bin/bash

dbname=$1
trace=1

[[ "$debug" == 1 ]] && set -x

if [[ -z "$dbname" ]]; then
    echo dbname missing
    exit 1
fi

if [[ -z "${CDB2_OPTIONS}" ]]; then
    stage=local
else
    stage=default
fi

cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'create table t1 { schema { int a } }' 
cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'create table t2 { schema { int a } keys { "a" = a } }'
cluster=$(cdb2sql --tabs ${CDB2_OPTIONS} $dbname default 'exec procedure sys.cmd.send("bdb cluster")' | grep lsn | cut -f1 -d':')

function generate_good_insert
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running generate_good_insert"
    echo "begin" > ./good_insert.sql
    j=0
    while [[ $j -lt 4000 ]]; do
        echo "insert into t1(a) values (1)" >> ./good_insert.sql
        let j=j+1
    done
    echo "commit" >> ./good_insert.sql
}

function generate_bad_insert
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running generate_bad_insert"
    echo "begin" > ./bad_insert.sql
    j=0
    while [[ $j -lt 4000 ]]; do
        echo "insert into t1(a) values (1)" >> ./bad_insert.sql
        let j=j+1
    done
    echo "insert into t2(a) values (1)" >> ./bad_insert.sql
    echo "insert into t2(a) values (1)" >> ./bad_insert.sql
    echo "commit" >> ./bad_insert.sql
}

function good_inserter
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running good_inserter"
    set i=0
    while [[ $forever || $i -lt 10 ]]; do
        cdb2sql ${CDB2_OPTIONS} $dbname $stage - < ./good_insert.sql > /dev/null 2>&1
        let i=i+1
    done
}

function bad_inserter
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running bad_inserter"
    set i=0
    while [[ $forever || $i -lt 10 ]]; do
        cdb2sql ${CDB2_OPTIONS} $dbname $stage - < ./bad_insert.sql > /dev/null 2>&1
        let i=i+1
    done
}

function downgrade
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running downgrade"
    master=`cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
    cdb2sql ${CDB2_OPTIONS} --host $master $dbname $stage "exec procedure sys.cmd.send('downgrade')"
}

function deleteall
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running deleteall"
    xxx=$(cdb2sql ${CDB2_OPTIONS} $dbname $stage "delete from t1 limit 10000") ; xx=${xxx##*=} ; x=${xx%\)}
    while [[ -n "$x" && "$x" != 0 ]]; do
        xxx=$(cdb2sql ${CDB2_OPTIONS} $dbname $stage "delete from t1 limit 10000") ; xx=${xxx##*=} ; x=${xx%\)}
    done
}

function beforedowngrade
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running beforedowngrade"
    generate_good_insert
    generate_bad_insert
    bad_inserter &
    sleep 1 
    cnt=0
    while [[ "$cnt" -lt 4 ]]; do
        bad_inserter &
        good_inserter &
        let cnt=cnt+1
    done
}

function afterdowngrade
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running afterdowngrade"
    deleteall
    cnt=0
    while [[ "$cnt" -lt 8 ]]; do
        good_inserter &
        let cnt=cnt+1
    done
    wait
}

function verify
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running verify"
    for node in $cluster ; do
        cdb2sql ${CDB2_OPTIONS} --host $node $dbname "select count(*) from t1" 
        if [[ $? != 0 ]]; then
            echo "No response from $node"
            exit 1
        else
            echo "Good SELECT from $node"
        fi
    done
}

function runtest
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running runtest"
    beforedowngrade
    wait
    downgrade
    sleep 10
    afterdowngrade
    verify
}

runtest
echo "success"
exit 0
