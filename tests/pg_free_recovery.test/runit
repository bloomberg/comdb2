#!/bin/bash

dbname=$1
error=0
vers=open
trace=1
#stage=dev
#forever=1
#vers=r6

# debug=1
[[ "$debug" == 1 ]] && set -x

if [[ -z "$dbname" ]]; then
    echo dbname missing
    exit 1
fi

if [[ $vers == "r6" ]]; then
    CDB2_OPTIONS=""
    stage=local
    masterst=""
    comdb2sc.tsk $dbname add t1 ./t1.csc2
    comdb2sc.tsk $dbname add t2 ./t2.csc2
else
    if [[ -z "$stage" ]]; then
        stage=default
    fi
    master=`cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
    masterst="--host $master"
    cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'create table t1 { schema { int a } }' 
    cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'create table t2 { schema { int a } keys { "a" = a } }'
fi

function good_inserter
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running good_inserter"
    set i=0

    while [[ $forever || $i -lt 10 ]]; do
        cdb2sql ${CDB2_OPTIONS} $dbname $stage - < good_insert.sql > /dev/null 2>&1
        let i=i+1
    done
}

function bad_inserter
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running bad_inserter"
    set i=0

    while [[ $forever || $i -lt 10 ]]; do
        cdb2sql ${CDB2_OPTIONS} $dbname $stage - < bad_insert.sql > /dev/null 2>&1
        let i=i+1
    done
}

function downgrade
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running downgrade"
    master=`cdb2sql -tabs ${CDB2_OPTIONS} $dbname $stage 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
    cdb2sql ${CDB2_OPTIONS} $dbname --host $master $stage "exec procedure sys.cmd.send('downgrade')"
}

function deleteall
{
    [[ "$debug" == 1 ]] && set -x
    [[ "$trace" == 1 ]] && echo "Running deleteall"
    xxx=$(cdb2sql ${CDB2_OPTIONS} $dbname $stage "delete from t1 limit 10000") ; xx=${xxx##*=} ; x=${xx%\)}
    while [[ -n "$x" && "$x" != 0 ]]; do
        xxx=$(cdb2sql ${CDB2_OPTIONS} $dbname $stage "delete from t1 limit 10000") ; xx=${xxx##*=} ; x=${xx%\)}
    done
}

bad_inserter &
sleep 1 

cnt=0
while [[ "$cnt" -lt 4 ]]; do
    bad_inserter &
    good_inserter &
    let cnt=cnt+1
done

wait

downgrade

sleep 10
deleteall

# insert the same number of records & this should crash
cnt=0
while [[ "$cnt" -lt 8 ]]; do
    good_inserter &
    let cnt=cnt+1
done
wait

exit 0
