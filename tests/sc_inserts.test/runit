#!/usr/bin/env bash
bash -n "$0" | exit 1

source ${TESTSROOTDIR}/tools/runit_common.sh
set -x


if [ "x${DBNAME}" == "x" ] ; then
    echo "need a DB name"
    exit 1
fi

tbl=t2
# Number of records I will add.
nrecs=1000

# Max number of schema changes
max_nusc=100


function do_rebuild_track_pid
{
    typeset loc_dbname=$1
    typeset loc_tbl=$2
    typeset track_pid=$3
    typeset scnt=0
    while `kill -0 $track_pid 2>/dev/null` && [[ $scnt -lt $max_nusc ]]; do

        echo "Running rebuild iteration $scnt"
        $CDB2SQL_EXE ${CDB2_OPTIONS} $loc_dbname default "rebuild $loc_tbl"

        if [[ $? != 0 ]]; then
            kill -9 $track_pid
            failexit "Error schema-changing on iteration $scnt"
        fi
        echo "Done with rebuild iteration $scnt"

        echo "Running verify"
        do_verify $loc_tbl
        echo "Done with verify"
        let scnt=scnt+1
    done

    echo "Success!  Performed $scnt schema-changes."

    return 0
}


function insert_records
{
    echo "Inserting $nrecs records."
    typeset j=0
    typeset loc_nrecs=$1
    typeset is_sleep=$2

    while [[ $j -lt $loc_nrecs ]]; do 
        echo "insert into $tbl(a,b,c,d,e,f) values ($j,'test1',x'1234',$((j*2)),$j,$j)"
        let j=j+1
        if [ -n "$is_sleep" ] ; then
            sleep $is_sleep
        fi
    done | $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default &> insert.out || failexit "insert_records error"
    echo "Done inserting $loc_nrecs records."
}



function run_test
{
    typeset ipid=''

    $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default "drop table if exists $tbl"
    $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default "create table $tbl {
schema
{
    int      a
    cstring  b[32]
    blob     c
    int      d
    int      e
    int      f
}
}
"

    insert_records $nrecs 0.01 &
    typeset ipid=$!

    $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default "alter table $tbl { `cat $tbl.csc2 ` }"
    do_verify $tbl

    do_rebuild_track_pid ${DBNAME} $tbl $ipid
    wait

    assertcnt $tbl $nrecs
    do_verify $tbl
}


echo "running test in machine $(hostname):${PWD}"

master=`$CDB2SQL_EXE -tabs ${CDB2_OPTIONS} ${DBNAME} default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'`
$CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} --host $master "PUT SCHEMACHANGE COMMITSLEEP 1"
$CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} --host $master "PUT SCHEMACHANGE CONVERTSLEEP 1"

max_iter=10
t=0
while [ $t -lt ${max_iter} ] ; do
    $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} --host $master "exec procedure sys.cmd.send('gofast')"
    run_test
    mv insert.out insert.out.$t

    $CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} --host $master "exec procedure sys.cmd.send('goslow')"
    run_test
    mv insert.out insert.out.$t

    let t=t+1
done

echo "Success"
