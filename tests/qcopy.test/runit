#!/usr/bin/env bash
bash -n "$0" | exit 1

set -x
set -e

COPYDIR=$DBDIR/copy
mkdir $COPYDIR
export COMDB2AR_AROPTS="-x $COMDB2_EXE"
$COPYCOMDB2_EXE -s ${DBDIR}/${DBNAME}.lrl $COPYDIR
cd $COPYDIR
grep -v name ${DBNAME}.lrl | grep -v "cluster nodes" > tmp && mv tmp ${DBNAME}.lrl
NEWNAME="qcopy$$test"
echo "name $NEWNAME" >> ${DBNAME}.lrl
echo creating new db with name $NEWNAME
$COMDB2_EXE $NEWNAME --create --lrl ${DBNAME}.lrl
echo starting new db $NEWNAME
$COMDB2_EXE $NEWNAME --lrl ${DBNAME}.lrl &
dbpid=$!

function exiting {
    echo send exit to $NEWNAME
    $CDB2SQL_EXE $NEWNAME "exec procedure sys.cmd.send('exit')"


    sleep 10
    #just in case it is still up
    kill -9 $dbpid

    echo deregister from pmux $NEWNAME
    ${TESTSROOTDIR}/tools/send_msg_port.sh "del comdb2/replication/${NEWNAME} " ${pmux_port}
}

trap exiting EXIT

while :; do 
    # cdb2sql may fail if the db isn't up yet
    set +e
    out=$($CDB2SQL_EXE -tabs $NEWNAME local 'select 1') ||
    [[ "$out" = "1" ]] && break
    set -e
    sleep 1
done

exiting

echo Success
