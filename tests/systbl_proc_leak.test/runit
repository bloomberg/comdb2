#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

# Make sure that all queries go to the same node.
mach=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'select comdb2_host()'`
echo "target machine is $mach"

# Create dummy SP-s;
for i in `seq 1 100`; do
  cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm "create procedure sp$i { local function main (e) end }" >/dev/null
done

# Sleep more than the lingering time to ensure we start with 0 SQL thread in the database below.
sleep 5

# Warm up
yes 'select name, version from comdb2sys_procedures' | head -100 | cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm ->/dev/null

# allow a bit of time for the SQL thread to clean up itself.
sleep 2

# Get memory snapshot
before=`cdb2sql --tabs $dbnm --host $mach "SELECT SUM(used) FROM comdb2_memstats WHERE name='bdb'"`

# Run the leak reproducer
yes 'select name, version from comdb2sys_procedures' | head -100 | cdb2sql -s ${CDB2_OPTIONS} --host $mach $dbnm ->/dev/null

# allow a bit of time for the SQL thread to clean up itself.
sleep 2

# Get memory snapshot again
after=`cdb2sql --tabs $dbnm --host $mach "SELECT SUM(used) FROM comdb2_memstats WHERE name='bdb'"`

# Should be almost identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "ratio is too high: $ratio" >&2
  exit 1
fi
