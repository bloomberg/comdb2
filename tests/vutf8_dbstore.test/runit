#!/usr/bin/env bash
bash -n "$0" | exit 1

set -x
source ${TESTSROOTDIR}/tools/runit_common.sh

# This testcase checks dbstore setting for vutf8
# when we add a new vutf8 field dbstore should work correctly:
# if dbstore is too large to fit in dta, it should spill to 
# blob dta files--for existing rows to be valid that means adding such field
# should trigger a rebuild.

dbnm=$1

cdb2sql ${CDB2_OPTIONS} $dbnm default "select comdb2_host()"

cdb2sql ${CDB2_OPTIONS} $dbnm default "truncate t1"

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a, b1) values (1, x'12345678')"
cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a, b1) values (2, x'22345678')"

#t1_2 should be instant sc
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat t1_2.csc2 ` }"
do_verify t1

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a, b1) values (3, x'32345678')"
do_verify t1

#reset
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat t1_1.csc2 ` }"
do_verify t1


#t1_3 should be instant sc
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat t1_3.csc2 ` }"
do_verify t1

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a, b1) values (4, x'42345678')"
do_verify t1


#reset
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat t1_1.csc2 ` }"
do_verify t1


#t1_4 should force rebuild
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t1 { `cat t1_4.csc2 ` }"
do_verify t1

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a, b1) values (5, x'52345678')"
do_verify t1


echo "Success!"
exit 0
