#!/usr/bin/env bash
bash -n "$0" | exit 1

function echo_color()
{
    MSG=$1
    COLOR=$2
    BOLD=$3

    #Attr
    #Reset 0; Bright 1; Dim 2; Underline 3; Blink 5; Reverse 7; Hidden 8
    if [ -n "$BOLD" ];
    then
        BOLD=1
    else
        BOLD=2
    fi

    RESET="\e[0m"

    if [[ -t 1 ]]; then
        case $2 in
        red)
            COLOR=31
            ;;
        green)
            COLOR=32
            ;;
        *)
            COLOR=30 #Black
            ;;
        esac
        echo -e "\e[${BOLD};${COLOR}m${MSG}${RESET}"
    else
        echo "$MSG"
    fi
}

function echo_color_bold()
{
    echo_color "$1" "$2" "BOLD"
}

DB=$1
if [ -z "$DB" ];
then
    PROG=`basename $0`
    echo "Usage: $PROG <dbname>"
    exit 1
fi

TIMESTAMP=`date +%Y%m%dT%H%M%S`
TMPPATH="${TMPDIR}/$TIMESTAMP"
FILEPATH="$TMPPATH/files"
LOG="$TMPPATH/logs"

mkdir -p $LOG
echo "Diagnosing Parser tokens\n"
RC=0

NOTRESERVED=`cdb2sql --tabs ${CDB2_OPTIONS} $DB default "GET NOT RESERVED KW"`
RESERVED=`cdb2sql --tabs ${CDB2_OPTIONS} $DB default "GET RESERVED KW"`

for token in $NOTRESERVED;
do

    cdb2sql ${CDB2_OPTIONS} $DB default "SELECT 1 AS ${token}" $2>&1 >> $LOG/$test.log 

    if [ "$?" == "0" ] ;
    then
        echo_color " ${token}: PASS" "green"
        echo "${token}: PASS\n" > $LOG/test.log 
    else
        echo_color_bold " ${token}: FAIL" "red"
        echo "${token} : FAIL\n" > $LOG/test.log
        exit 1
    fi
done

if [ "$RC" == "0" ]; then
    rm -rf $TMPPATH
fi

echo "Success"
