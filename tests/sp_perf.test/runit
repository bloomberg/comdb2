#!/bin/bash

bash -n "$0" | exit 1
# set -x x

DBNAME=$1
TESTNAME="sp_perf"
output="$TESTNAME.out"
expected="$TESTNAME.exp"
tier="default"
if [ -f $output ] ; then
    rm -f $output
fi

if [[ "x${DBNAME}" == "x" ]] ; then
    echo "need a DB name"
    exit 1
fi

longoremptystringTest() {


sp=$(cat << 'EOF'
CREATE PROCEDURE foo VERSION 'test' { 
local function main(x, input)
    db:setmaxinstructions(10000000)
    local t = {}
    local s = nil
    if input ~= nil then
        s = input
    else 
        s = string.format("%s%s", string.rep('a,', 999999), 'a')
    end
    if x == 'cstring' then s = db:cast(s, 'cstring') end
    local start = db:now()
    for str in string.gmatch(s, "([^,]+)") do table.insert(t, str) end
    db:column_name("count", 1) db:column_name("time", 2) db:column_name("type", 3)
    db:emit({count = #t, time = db:now() - start, type = type(s)})
end
}
EOF
)
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "$sp"
time ${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure foo()"
time ${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure foo('cstring')"
time ${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure foo('cstring', 'spookytext')"
time ${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure foo('cstring', '')"
}


bindparamTest() {

$CDB2SQL_EXE ${CDB2_OPTIONS} $DBNAME $tier - <<EOF 
drop table if exists bindt
create table bindt { 
schema {
    cstring i[32] null=yes
    cstring j[32] null=yes
}}\$\$
EOF

sp_bind_pos=$(cat << 'EOF'
CREATE PROCEDURE bind_sp VERSION 'test' {
local function main() 
    local t, r
    t = db:prepare("INSERT INTO bindt(i, j) values(?,?)")
    t:bind(1, "1") -- bind by pos
    t:bind(2, "")
    t:exec()
end
}
EOF
)

sp_bind_name=$(cat << 'EOF'
CREATE PROCEDURE bind_sp_named VERSION 'test' {
local function main() 
    local t, r, a, b
    t = db:prepare("INSERT INTO bindt(i, j) values(@a, @b)")
    t:bind("a", "5") -- bind by name
    t:bind("b", "6")
    t:exec()
end
}
EOF
)

${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "$sp_bind_pos"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure bind_sp()"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "SELECT i, j FROM bindt"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "$sp_bind_name"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "exec procedure bind_sp_named()"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier "SELECT i, j FROM bindt"
${CDB2SQL_EXE} -r 1 ${CDB2_OPTIONS} $DBNAME $tier - <<EOF
INSERT INTO bindt (i, j) VALUES ('5', NULL)
INSERT INTO bindt (i, j) VALUES ('', '6')
EOF

}

checkdiff() {
if [ -f "$1" ]; then
    if ! diff -w $2 $1 > /dev/null 2>&1 ; then
        echo "FAILED: output $1 diff from expected $2"
        echo "diff:"
        diff -w $2 $1
        exit 1
    else
        echo "PASSED!"
    fi
else
    echo "ERR: No expected output file ($2) found for runit"
    exit 1
fi

}

longoremptystringTest

bindparamTest >> "$output" 2>&1
checkdiff "$output" "$expected"

exit 0


