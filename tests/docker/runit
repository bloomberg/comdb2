#!/bin/bash

set -e

while [[ $1 = -* ]]; do
    if [[ "$1" = "--source" ]]; then
        shift
        src=$1
    elif [[ "$1" = "-n" ]] || [[ "$1" = "--numnodes" ]]; then
        shift
        numnodes=$1
    elif [[ "$1" = "-c" ]] || [[ "$1" = "--commands" ]]; then
        shift
        commands=$1
    elif [[ "$1" = "--script" ]]; then
        shift
        script=$1
    fi
    shift
done


if [[ "$src" = "" ]] || [[ "$numnodes" = "" ]]; then
    echo "Usage: $0 --source source_directory -n numnodes [-c commands] [--script file]" >&2
    exit 1
fi

rm -fr common
mkdir common
for node in $(seq 1 $numnodes); do
    cluster="$cluster m${node}"
done

prefix="$(git --git-dir "$src/.git" rev-parse --short HEAD)"
if [[ "$prefix" = "" ]]; then
    echo 'Could not get the revision.' >&2
    exit 1
fi
export COMPOSE_PROJECT_NAME=$prefix

if [[ "$script" != "" ]]; then
    cp $script common/user_script
    chmod +x common/user_script
fi
docker build -t comdb2test:$prefix -f $src/tests/docker/Dockerfile.install $src

cp -r $src/tests/docker/* .
echo $cluster >common/cluster
ssh-keygen -N "" -f common/id_rsa

compose=docker-compose.yml
cat > $compose <<EOF
version: '2'

services:
    client:
        hostname: c1
        build:
            context: .
            dockerfile: Dockerfile.db
            args:
                - REVISION=$prefix
        volumes:
            - ./common:/common
        command: /client "$commands"
        cap_add:
            - SYS_PTRACE
EOF

for node in $cluster; do
cat >> $compose <<EOF
    $node:
        hostname: $node
        build:
            context: .
            dockerfile: Dockerfile.db
            args:
                - REVISION=$prefix
        volumes:
            - ./common:/common
        command: /server
        cap_add:
            - SYS_PTRACE
EOF
done

docker-compose build
docker-compose up --abort-on-container-exit
docker-compose down --rmi all --volumes
docker-compose rm -f
