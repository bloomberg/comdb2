#!/bin/bash
bash -n "$0" | exit 1

# This test case is a collection of queries reported in various 
# tickets. As such each one will have different schemas.
# The driver will just add/alter tables as required.

dbname=$1
if [[ -z $dbname ]] ; then
    echo dbname missing
    exit 1
fi

for testreq in `ls t*.req` ; do
    # Setup all the tables this test case needs :-
    # First drop the table (its ok if this fails,
    # the table probably doesn't exist).
    # Then add the table.
    echo
    testname=`echo $testreq | cut -d "." -f 1`
    echo preparing db for $testname
    for schema in `ls $testname.*.csc2 2> /dev/null ` ; do
        table=`echo $schema | cut -d "." -f2`

        cmd="cdb2sql ${CDB2_OPTIONS} $dbname default \"drop table $table\""
        echo $cmd | tee -a drop.out
        eval $cmd &>> drop.out

        echo -e "create table $table {\n`cat $schema`\n}" > create.in
        cmd="cdb2sql ${CDB2_OPTIONS} -f create.in $dbname default"
        echo "$cmd" | tee -a create.out
        eval "$cmd" &>> create.out
    done

    output=${testname}.output

    cmd="cdb2sql -s -f $testreq ${CDB2_OPTIONS} $dbname default"
    echo $cmd "> ${output}"
    $cmd 2>&1 | perl -pe "s/.n_writeops_done=([0-9]+)/rows inserted='\1'/" > ${output}

    # post-process
    if [[ -f ${testname}.post ]]; then
        # collect post-processing tool
        pproc=$(cat $testname.post)

        # post-process output
        eval $pproc $output >> $output.postprocess

        mv $output $output.backup
        # copy post-processed output to original
        mv $output.postprocess $output
    fi


    cmd="diff ${testname}.expected ${output}"
    $cmd > /dev/null
    if [[  $? -eq 0 ]]; then
        echo "passed $testname"
    else
        echo "failed $testname"
        echo "see diffs here: $HOSTNAME"
        echo "diff $PWD/${testname}.{expected,output}"
        eval $cmd
        echo
        exit 1
    fi
done
echo
exit 0
