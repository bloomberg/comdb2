#!/usr/bin/env bash
bash -n "$0" | exit 1

[ -z "${CLUSTER}" ] && { echo "Test requires a cluster"; exit 0; }


for node in $CLUSTER ; do
    cdb2sql $CDB2_OPTIONS $DBNAME --host $node 'EXEC PROCEDURE sys.cmd.send("abort_ufid_open 1")'
done

set -e

dbnm=$1

master=`cdb2sql --tabs ${CDB2_OPTIONS} $DBNAME default 'select host from comdb2_cluster where is_master="Y"'`
echo master is $master

# The test demonstrates that a dbreg entry may be closed and reopened
# after a master swing.
#
# Consider the following timeline:
# 
#     client                   m1                                         m2
# T0  CREATE-TBL-t1
# T1                           Assign dbreg N to t1
# T2                                                                      Apply dbreg {N->t1}
# T3  CREATE-TBL-t2
# T4                           Assign dbreg N+1 to t2
# T5                                                                      Apply dbreg {N+1->t2}
# T6                           Downgrade
# T7                                                                      Upgrade and resume mastership
# T8  INSERT-INTO-t1
# T9                                                                      Assign dbreg N+1 to t1
# T10                          clear t2 and apply dbreg {N+1->t1}
# T11 INSERT-INTO-t2
# T12                                                                     Assign dbreg N to t2
# T13                          clear t1 and apply dbreg {N->t2}
# T14 INSERT-INTO-t1
# T15                          has to reopen t1 as it's cleared by T14

cdb2sql ${CDB2_OPTIONS} $dbnm default - <<'EOF'
CREATE TABLE t1 (i INT)$$
CREATE TABLE t2 (i INT)$$
CREATE TABLE t3 (i INT)$$
EOF

cdb2sql $dbnm --host $master 'EXEC PROCEDURE sys.cmd.send("downgrade")'

# allow master swing to complete
sleep 5

cdb2sql ${CDB2_OPTIONS} $dbnm default - <<'EOF'
INSERT INTO t1 VALUES(1)
INSERT INTO t2 VALUES(1)
INSERT INTO t1 VALUES(1)
EOF


# make sure that all nodes are accessible. we use --admin mode because on a busy box
# it could take quite a while for a cluster to fully sync.
for node in $CLUSTER ; do
    ssh -o StrictHostKeyChecking=no $node "/opt/bb/bin/cdb2sql --admin $dbnm --host $node 'SELECT 1'"
done
