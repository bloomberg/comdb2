#!/usr/bin/env bash
bash -n "$0" | exit 1

# Grab my database name.
dbnm=$1

# Remember if we've started the coprocess
stco=0

TMPDIR=${TMPDIR:-/tmp}

# Error/quit function.
function errquit
{
    typeset msg=$1
    typeset cnt=0

    # Enable debugging.
    [[ "$debug" == "1" ]] && set -x

    # Print error messages.
    echo "ERROR: $msg" >&2
    echo "Testcase failed." >&2

    # Check for the coprocess.
    if [[ "$stco" == "1" ]]; then

        # Ask it to quit.
        echo "quit" >&${COPROC[1]}

    fi

    # Exit test.
    exit 1
}

# Fast init the table
cdb2sql ${CDB2_OPTIONS} $dbnm default "truncate t1"

# Insert some large records - this will insert 3 records
cdb2sql -s -f ./largerecs.sql ${CDB2_OPTIONS} $dbnm default &> /dev/null
maxrc=3

# Start a coprocess: input/output in ${COPROC[]} offset 0/1
coproc stdbuf -oL cdb2sql -s ${CDB2_OPTIONS} $dbnm default -
stco=1

# Set transaction level
echo "set transaction snapshot isolation" >&${COPROC[1]}
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=$maxrc)" ]] && errquit \
    "Unexpected results from sql-coprocess (count should be $maxrc), out=$out"

origfl=${TMPDIR}/cdb2tst_t1_orig.$$.tmp.$RANDOM
> $origfl

ckfl=${TMPDIR}/cdb2tst_t1_ck.$$.tmp.$RANDOM
> $ckfl

# Select everything to temp file
echo "begin" >&${COPROC[1]}
echo "@redirect $origfl" >&${COPROC[1]}
echo "select * from t1 order by a" >&${COPROC[1]}
echo "@redirect" >&${COPROC[1]}

# Delete first record
cdb2sql ${CDB2_OPTIONS} $dbnm default "delete from t1 where a=1"
cdb2sql ${CDB2_OPTIONS} $dbnm default "exec procedure sys.cmd.send('flush')"
sleep 1

# Select everything to ck file
echo "@redirect $ckfl" >&${COPROC[1]}
echo "select * from t1 order by a" >&${COPROC[1]}
echo "@redirect" >&${COPROC[1]}

# Block on a count so we know it's finished
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=3)" ]] && errquit \
    "Unexpected results from sql-coprocess (count should be 3)"

# Diff
diff $origfl $ckfl

if [[ $? != 0 ]]; then

    echo "Bad restore from large blob with a=1" >&2
    echo "Run 'diff $origfl $ckfl' to see the error" >&2
    errquit "Failed test"

fi

# Delete second record
cdb2sql ${CDB2_OPTIONS} $dbnm default "delete from t1 where a=2"
cdb2sql ${CDB2_OPTIONS} $dbnm default "exec procedure sys.cmd.send('flush')"
sleep 1

# Zero ckfile
> $ckfl

# Select everything to ck file
echo "@redirect $ckfl" >&${COPROC[1]}
echo "select * from t1 order by a" >&${COPROC[1]}
echo "@redirect" >&${COPROC[1]}

# Block on a count so we know it's finished
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=3)" ]] && errquit \
    "Unexpected results from sql-coprocess (count should be 3)"

diff $origfl $ckfl

if [[ $? != 0 ]]; then

    echo "Bad restore from large blob with a=2" >&2
    echo "Run 'diff $origfl $ckfl' to see the error" >&2
    errquit "Failed test"

fi

# Delete third record
cdb2sql ${CDB2_OPTIONS} $dbnm default "delete from t1 where a=3"
cdb2sql ${CDB2_OPTIONS} $dbnm default "exec procedure sys.cmd.send('flush')"
sleep 1

# Zero ckfile
> $ckfl

# Select everything to ck file
echo "@redirect $ckfl" >&${COPROC[1]}
echo "select * from t1 order by a" >&${COPROC[1]}
echo "@redirect" >&${COPROC[1]}

# Block on a count so we know it's finished
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
[[ "$out" != "(count(*)=3)" ]] && errquit \
    "Unexpected results from sql-coprocess (count should be 3)"

diff $origfl $ckfl

if [[ $? != 0 ]]; then

    echo "Bad restore from large blob with a=3" >&2
    echo "Run 'diff $origfl $ckfl' to see the error" >&2
    errquit "Failed test"

fi

# Commit this
echo "commit" >&${COPROC[1]}

# Now verify that there are no records left
echo "select count(*) from t1" >&${COPROC[1]}
read -ru ${COPROC[0]} out

[[ "$out" != "(count(*)=0)" ]] && errquit \
    "Unexpected results from sql-coprocess (count should be 0)"

echo "quit" >&${COPROC[1]}

echo "Success!"
