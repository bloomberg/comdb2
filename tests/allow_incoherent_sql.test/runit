#!/usr/bin/env bash
bash -n "$0" | exit 1

set -e

# Force a replicant to go incoherent
master=`cdb2sql --tabs ${CDB2_OPTIONS} ${DBNAME} default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | awk '{print $1}' | cut -d':' -f1`
host=`cdb2sql --tabs ${CDB2_OPTIONS} ${DBNAME} default 'select comdb2_host()'`
cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $host 'exec procedure sys.cmd.send("on rep_delay")'
cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $master 'exec procedure sys.cmd.send("pushnext")'

set +e
for i in `seq 1 60`; do
    cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $master 'exec procedure sys.cmd.send("bdb cluster")' | grep $host | grep -i incoherent
    if [ $? = 0 ]; then
        break
    fi
    sleep 1
done

cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $master 'exec procedure sys.cmd.send("bdb cluster")' | grep $host | grep -i incoherent
if [ $? != 0 ]; then
    echo 'Took too long to go incoherent!' >&2
    exit 1
fi

set -e
# Because we specifically allow running a query on an incoherent node,
# the command below should succeed.
cdb2sql ${CDB2_OPTIONS} ${DBNAME} --host $host 'SELECT 1'
