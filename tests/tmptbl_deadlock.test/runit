#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

echo dropping test tables
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "DROP TABLE t1" &> /dev/null
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "DROP TABLE t2" &> /dev/null

echo adding test tables
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "CREATE TABLE t1(x INT, y TEXT)" > /dev/null
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "CREATE TABLE t2(x INT, y TEXT)" > /dev/null

echo inserting test data
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "INSERT INTO t1(x,y) VALUES (1, 'one')" > /dev/null
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "INSERT INTO t1(x,y) VALUES (2, 'two')" > /dev/null
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "INSERT INTO t2(x,y) VALUES (3, 'three')" > /dev/null
cdb2sql -s ${CDB2_OPTIONS} $dbnm default "INSERT INTO t2(x,y) VALUES (4, 'four')" > /dev/null

N=200
echo running $N SELECTs asynchronously...
for i in `seq 1 $N` ; do
  cdb2sql -s ${CDB2_OPTIONS} $dbnm default "SELECT t1.x, t1.y FROM t1 UNION SELECT t2.x, t2.y FROM t2 LEFT OUTER JOIN t1 t1a ON t2.x = t1a.x ORDER BY t1.x, t1.y" &
done

wait

# give the database time to exit background threads that may be using temp tables...
sleep 60

cdb2sql -s ${CDB2_OPTIONS} $dbnm default "EXEC PROCEDURE sys.cmd.send('bdb temptable')" &> temptable3.out

tempdata3=$(cat temptable3.out)
regex2="Temptable pool not enabled"
regex3="# returns            : ([0-9]+)"
regex4="# borrows            : ([0-9]+)"

if [[ $tempdata3 =~ $regex2 ]]; then
  echo "temptable pool is disabled, check skipped"
else
  if [[ $tempdata3 =~ $regex3 ]]; then
    num1="${BASH_REMATCH[1]}"

    if [[ -n $num1 ]]; then
      if [[ $tempdata3 =~ $regex4 ]]; then
        num2="${BASH_REMATCH[1]}"

        if [[ -n $num2 ]]; then
          if [[ $num1 -ne $num2 ]]; then
            echo "temptable pool return count $num1 does not match temptable pool borrow count $num2"
            echo "Failed."
            exit 1
          fi
        else
          echo "missing temptable pool borrow count"
          echo "Failed."
          exit 1
        fi
      fi
    else
      echo "missing temptable pool return count"
      echo "Failed."
      exit 1
    fi
  fi
fi

echo "Passed."
