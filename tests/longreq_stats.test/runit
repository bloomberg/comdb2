#!/usr/bin/env bash
bash -n "$0" | exit 1

. ${TESTSROOTDIR}/tools/cluster_utils.sh
. ${TESTSROOTDIR}/tools/runit_common.sh

#export debug=1
[[ $debug == "1" ]] && set -x

function setup_longreq
{
    for node in $CLUSTER ; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $node "exec procedure sys.cmd.send('bdb setattr rep_longreq -1')"
    done
}

function create_tables
{
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "create table t1 (a int)"
}

function write_records
{
    typeset SZ=$1
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "insert into t1 select * from generate_series(1, $SZ)"
    [[ $? != 0 ]] && failexit "failed to insert records"
}


function test_logic
{
    write_records 100
    write_records 200
    write_records 300
    write_records 400
    write_records 500
    write_records 600
    write_records 700
    write_records 800
    write_records 900
    write_records 1000
}

function check_log_node
{
    typeset node=$1
    log=$TESTDIR/logs/longreqstats${TESTID}.${node}.db
    lb=$(egrep "log-records applied" $log)

    # Verify 5 increasingly large transactions
    lines=$(echo "$lb" | wc -l)
    [[ "$lines" -ne "10" ]] && failexit "Incorrect number of applied records"

    max=0
    echo "$lb" | while read ln ; do
        ll="${ln%% log-records applied*}"
        x="${ll## }"
        [ "$x" -le "$max" ] && failexit "log-records got smaller??"
        max="$x"
        echo "$node applied $max log records"
    done
}

function check_logs
{
    master=$(get_master)
    for node in $CLUSTER ; do
        if [[ "$node" != "$master" ]]; then
            check_log_node $node
        fi
    done
}

function run_test
{
    create_tables
    setup_longreq
    test_logic
    check_logs
}

if [[ -z "$CLUSTER" ]]; then 
    echo "This test requires a cluster"
    exit -1
fi

rm ${DBNAME}.failexit
run_test

if [[ -f ${DBNAME}.failexit ]]; then
    echo "Testcase failed"
    exit -1
fi

echo "Success"
