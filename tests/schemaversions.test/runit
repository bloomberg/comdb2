#!/usr/bin/env bash
bash -n "$0" | exit 1
a_dbn=$1

### Verify comdb2_schemaversions state after table create

cdb2sql ${CDB2_OPTIONS} $a_dbn default "create table t(i int)"

count=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select count(*) from comdb2_schemaversions where tablename='t'")

if (( count != 1 ));
then
	echo "Wrong version count after table create"
	exit 1
fi

version=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(version) from comdb2_schemaversions where tablename='t'")

if (( version != 1 ));
then
	echo "Wrong max schema version found after alter"
	exit 1
fi

csc2=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select csc2 from comdb2_schemaversions where tablename='t'")

### Verify copy of a table created from comdb2_schemaversions csc2

cdb2sql ${CDB2_OPTIONS} $a_dbn default "create table t_cpy {${csc2}}"
cdb2sql ${CDB2_OPTIONS} $a_dbn default "insert into t values(1)"
cdb2sql ${CDB2_OPTIONS} $a_dbn default "insert into t_cpy select * from t"
res=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(i) from t_cpy")

if (( res != 1 ));
then
	echo "Unexpected result after schema change + insert"
	exit 1
fi

### Verify comdb2_schemaversions state after 1st table alter

cdb2sql ${CDB2_OPTIONS} $a_dbn default "alter table t add j int"
count=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select count(*) from comdb2_schemaversions where tablename='t'")

if (( count != 2 ));
then
	echo "Count of versions did not increase after table alter"
	exit 1
fi

version=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(version) from comdb2_schemaversions where tablename='t'")

if (( version != 2 ));
then
	echo "Wrong max schema version found after alter"
	exit 1
fi

### Verify copy of a table altered from new comdb2_schemaversions csc2

csc2=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select csc2 from comdb2_schemaversions where tablename='t' and version=2")
cdb2sql ${CDB2_OPTIONS} $a_dbn default "alter table t_cpy {${csc2}}"
cdb2sql ${CDB2_OPTIONS} $a_dbn default "delete from t"
cdb2sql ${CDB2_OPTIONS} $a_dbn default "insert into t values(1, 2)"
cdb2sql ${CDB2_OPTIONS} $a_dbn default "insert into t_cpy select * from t"
res=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(j) from t_cpy")

if (( res != 2 ));
then
	echo "Unexpected result after schema change + insert"
	exit 1
fi

### Verify comdb2_schemaversions state after 2nd table alter

cdb2sql ${CDB2_OPTIONS} $a_dbn default "alter table t add l int"
count=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select count(*) from comdb2_schemaversions where tablename='t'")

if (( count != 3 ));
then
	echo "Count of versions did not increase after table alter"
	exit 1
fi

version=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(version) from comdb2_schemaversions where tablename='t'")

if (( version != 3 ));
then
	echo "Wrong max schema version found after alter"
	exit 1
fi

### Verify comdb2_schemaversions state after rebuild.

cdb2sql ${CDB2_OPTIONS} $a_dbn default "rebuild t"
count=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select count(*) from comdb2_schemaversions where tablename='t'")

if (( count != 1 ));
then
	echo "Count of versions did not decrease after table truncate"
	exit 1
fi

version=$(cdb2sql ${CDB2_OPTIONS} --tabs $a_dbn default "select max(version) from comdb2_schemaversions where tablename='t'")

if (( version != 1 ));
then
	echo "Highest verison not 1 after rebuild"
	exit 1
fi
