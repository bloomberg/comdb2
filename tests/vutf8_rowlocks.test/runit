#!/usr/bin/env bash
bash -n "$0" | exit 1


# Retrieve the 64-bit archcode.
function myarch64
{
    typeset u=$(uname)
    typeset a="<unknown>"

    # Enable debugging if desired.
    [[ "$debug" == "1" ]] && set -x

    # Select the correct 64-bit architecture.
    [[ "$u" == "SunOS" ]]   && a="sundev1_64"
    [[ "$u" == "AIX" ]]     && a="ibm_64"
    [[ "$u" == "HP-UX" ]]   && a="hp_64"
    [[ "$u" == "Linux" ]]   && a="linux_64"

    echo $a
    return 0
}

function errquit
{
    typeset msg=$1

    echo -u2 "ERROR: $msg"
    exit 1
}

# Grab my database name.
dbnm=$1


# fastinit
cdb2sql ${CDB2_OPTIONS} $dbnm default "truncate t1"

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b) values (1, 'aaaaaaa')"
[[ $? != 0 ]] && errquit "Failed first insert"

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b) values (1, 'aaaaaaaaaaaa')"
[[ $? != 0 ]] && errquit "Failed second insert"

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b) values (1, 'a')"
[[ $? != 0 ]] && errquit "Failed second insert"

cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b) values (1, 'aaa')"
[[ $? != 0 ]] && errquit "Failed second insert"

cdb2sql ${CDB2_OPTIONS} $dbnm default "update t1 set b='aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' where a=1"
[[ $? != 0 ]] && errquit "Failed update"

cdb2sql ${CDB2_OPTIONS} $dbnm default "select * from t1"
[[ $? != 0 ]] && errquit "Failed select"

echo "Success"
