#!/bin/bash
bash -n "$0" | exit 1

export COMDB2_PMUX_FILE=$(pwd)/pmux.sqlite

set -x

if [[ -z "$TESTSROOTDIR" ]]; then
    export TESTSROOTDIR=$(pwd)/..
fi

port=19500
while :; do
    export COMDB2_PMUX_PORT=${port}
    ${TESTSROOTDIR}/../pmux -l -f -p ${COMDB2_PMUX_PORT} -b /tmp/pmux.${COMDB2_PMUX_PORT} &
    pid=$!
    sleep 2
    kill -0 $pid
    [[ $? -eq 0 ]] && break
    port=$(($port +1))
    if [[ $port -eq 19600 ]]; then
        echo "Failed in $(($port-19500)) tries" >&2
        exit 1
    fi
done

atstart=$(ls -l /proc/$pid/fd | wc -l)
echo "have $atstart fds at start"

typeset -A createpids
for i in $(seq 1 10); do 
    mkdir $(pwd)/testdb${i}
    ${TESTSROOTDIR}/../comdb2 testdb${i} --create --dir $(pwd)/testdb${i} &
    createpids[$i]=$!
done

for i in $(seq 1 10); do 
    wait ${createpids[$i]}
done

typeset -A dbpids
for i in $(seq 1 10); do 
    echo "portmux_port ${COMDB2_PMUX_PORT=}" >> $(pwd)/testdb${i}/testdb${i}.lrl
    echo "portmux_bind_path /tmp/pmux.${COMDB2_PMUX_PORT} " >> $(pwd)/testdb${i}/testdb${i}.lrl
	${TESTSROOTDIR}/../comdb2 testdb${i} --lrl $(pwd)/testdb${i}/testdb${i}.lrl & 
    dbpids[$i]=$!
done

function waitfordb() {
	sel=$(${TESTSROOTDIR}/../cdb2sql --tabs --cdb2cfg cdb2sql.cfg $1 "select 1" 2>&1)
	while [[ "$sel" != "1" ]]; do
		sleep 1
	    sel=$(${TESTSROOTDIR}/../cdb2sql --tabs --cdb2cfg cdb2sql.cfg $1 "select 1" 2>&1)
	done
}

echo "comdb2_config:portmuxport=$port" > cdb2sql.cfg

for i in $(seq 1 10); do 
	waitfordb testdb${i}
done

atrun=$(ls -l /proc/$pid/fd | wc -l)

for i in $(seq 1 10); do 
    kill -9 ${dbpids[$i]}
done

atend=$(ls -l /proc/$pid/fd | wc -l)

kill -9 ${pid}

if [[ $atend -eq $atstart ]]; then
	echo "At start had $atstart fds, at end have $atend."
	exit 0
fi

echo "At start had $atstart fds, during run had $atrun fds, gone at end"

exit 0
