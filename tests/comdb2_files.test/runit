#!/usr/bin/env bash
bash -n "$0" | exit 1

source ${TESTSROOTDIR}/tools/runit_common.sh

function test_comdb2_files_restricted_file() {
	(
		# Given
		local dbname=$1 dbdir=$2
		echo "restricted blahblah" > $dbdir/restrictedFile
		chmod 000 $dbdir/restrictedFile
		trap "chmod 777 $dbdir/restrictedFile; rm $dbdir/restrictedFile" EXIT

		# When
		cdb2sql $dbname local 'select count(*) from comdb2_files' > /dev/null

		# Then
		return $?
	)
}

function test_comdb2_files_restricted_directory() {
	(
		# Given
		local dbname=$1 dbdir=$2
		mkdir $dbdir/restrictedDir
		touch $dbdir/restrictedDir/f
		chmod 000 $dbdir/restrictedDir
		trap "chmod 777 $dbdir/restrictedDir; rm -rf $dbdir/restrictedDir" EXIT

		# When
		cdb2sql $dbname local 'select count(*) from comdb2_files' > /dev/null

		# Then
		return $?
	)
}

function test_comdb2_files_large_file() {
	(
		# Given
		local dbname=$1 dbdir=$2
		exp_size=$(( 24 * 1024*1024))
		truncate -s $exp_size $dbdir/largefile
		trap "rm $dbdir/largefile" EXIT

		# When
		res_size=$(cdb2sql -tabs $dbname local "select sum(size) from comdb2_files where filename like '%largefile%'")

		# Then
		query_rc=$?
		if (( query_rc == 0 && res_size == exp_size )); then 
			return 0
		else 
			return 1
		fi
	)
}

function test_comdb2_files_broken_symlink() {
	(
		# Given
		local dbname=$1 dbdir=$2
		ln -s idonutexist $dbdir/link
		trap "rm $dbdir/link" EXIT

		# When
		cdb2sql $dbname local 'select count(*) from comdb2_files' > /dev/null

		# Then
		query_rc=$?
		if (( query_rc != 0 )); then
			return 0
		else
			return 1
		fi
	)
}

function runtest {
	local dbname=$1 dbdir=$2
	local tests=$(compgen -A function | grep -oh "test_\w*")

	for testcase in $tests;
	do
		if ! $testcase $dbname $dbdir;
		then
			failexit "$testcase"
		fi
		echo "Passed $testcase"
	done
}

function main() {
	local dbname=$1
	if [ -z "$CLUSTER" ];
	then
		runtest $dbname $DBDIR
	else
		node=`echo $CLUSTER | awk '{ print $1}'`
		ssh $node "export PATH=$PATH; $(typeset -f); runtest $dbname $DBDIR"
	fi
	
	rc=$?
	return $rc
}

main $1
