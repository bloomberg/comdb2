#!/usr/bin/env bash
bash -n "$0" | exit 1

source ${TESTSROOTDIR}/tools/runit_common.sh

function test_comdb2_files_restricted_file() {
	(
		# Given
		local dbname=$1 dbdir=$2
		echo "restricted blahblah" | tee \
			$dbdir/no_access >> \
			$dbdir/no_access_world >> \
			$dbdir/no_access_group >> \
			$dbdir/no_access_group_world

		chmod u-r,g-r,o-r $dbdir/no_access
		chmod g-r $dbdir/no_access_world $dbdir/no_access_group_world
		chmod o-r $dbdir/no_access_group $dbdir/no_access_group_world

		trap "chmod 777 $dbdir/no_access*; rm $dbdir/no_access*" EXIT

		# When
		fname=$(cdb2sql -tabs $dbname local \
			"select filename from comdb2_files where filename like 'no_access%'")

		# Then
		query_rc=$?
		if [[ ( $query_rc -eq 0 ) && ("$fname" -eq "no_access_world") ]]; then
			return 0
		else
			return 1
		fi
	)
}

function test_comdb2_files_restricted_directory() {
	(
		# Given
		local dbname=$1 dbdir=$2
		mkdir $dbdir/no_access $dbdir/no_access_world $dbdir/no_access_group \
			$dbdir/no_access_group_world

		touch $dbdir/{no_access,no_access_world,no_access_group,no_access_group_world}/restricted

		chmod u-r,g-r,o-r $dbdir/no_access
		chmod g-r $dbdir/no_access_world $dbdir/no_access_group_world
		chmod o-r $dbdir/no_access_group $dbdir/no_access_group_world

		trap "chmod 777 $dbdir/no_access*; rm -rf $dbdir/no_access*" EXIT

		# When
		fname=$(cdb2sql -tabs $dbname local \
			"select filename from comdb2_files where dir like 'no_access%'")

		# Then
		query_rc=$?
		if [[ ( $query_rc -eq 0 ) && ("$fname" -eq "no_access_world") ]]; then
			return 0
		else
			return 1
		fi
	)
}

function test_comdb2_files_large_file() {
	(
		# Given
		local dbname=$1 dbdir=$2
		exp_size=$(( 24 * 1024*1024))
		truncate -s $exp_size $dbdir/largefile
		trap "rm $dbdir/largefile" EXIT

		# When
		res_size=$(cdb2sql -tabs $dbname local "select sum(size) from comdb2_files where filename like '%largefile%'")

		# Then
		query_rc=$?
		if (( query_rc == 0 && res_size == exp_size )); then 
			return 0
		else 
			return 1
		fi
	)
}

function test_comdb2_files_broken_symlink() {
	(
		# Given
		local dbname=$1 dbdir=$2
		ln -s idonutexist $dbdir/link
		trap "rm $dbdir/link" EXIT

		# When
		cdb2sql $dbname local 'select count(*) from comdb2_files' > /dev/null

		# Then
		query_rc=$?
		if (( query_rc != 0 )); then
			return 0
		else
			return 1
		fi
	)
}

function test_comdb2_files_skips_file_on_excluded_list() {
	(
		# Given
		local dbname=$1 dbdir=$2 excluded_file="watchdog"
		echo "borkbork" > $dbdir/$excluded_file
		trap "rm $dbdir/$excluded_file" EXIT

		# When
		num_files=$(cdb2sql -tabs $dbname local "select count(*) from comdb2_files where filename like '%$excluded_file%'")

		# Then
		query_rc=$?
		if (( query_rc == 0 && num_files == 0 ));
		then
			return 0
		else
			return 1
		fi
	)
}

function test_comdb2_files_skips_dir_on_excluded_list() {
	(
		# Given
		local dbname=$1 dbdir=$2 file="foo"
		for dir in tmp savs;
		do
			echo "restrictedBlahBlah" > $dbdir/$dir/$file
		done

		# When
		num_files=$(cdb2sql -tabs $dbname local "select count(*) from comdb2_files where filename like '%$file%'")

		# Then
		query_rc=$?
		if (( query_rc == 0 && num_files == 0 ));
		then
			return 0
		else
			return 1
		fi
	)
}

function runtest {
	local dbname=$1 dbdir=$2
	local tests=$(compgen -A function | grep -oh "test_\w*")

	for testcase in $tests;
	do
		if ! $testcase $dbname $dbdir;
		then
			failexit "$testcase"
		fi
		echo "Passed $testcase"
	done
}

function main() {
	local dbname=$1
	if [ -z "$CLUSTER" ];
	then
		runtest $dbname $DBDIR
	else
		node=`echo $CLUSTER | awk '{ print $1}'`
		ssh $node "export PATH=$PATH; $(typeset -f); runtest $dbname $DBDIR"
	fi
	
	rc=$?
	return $rc
}

main $1
