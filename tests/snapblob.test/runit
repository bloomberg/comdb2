#!/usr/bin/env bash
bash -n "$0" | exit 1

# Grab my database name.
dbnm=$1

# fastinit
cdb2sql ${CDB2_OPTIONS} $dbnm default "truncate t1"

# Load
j=0 ; 
while [[ $j -lt 10 ]]; do 
    cdb2sql ${CDB2_OPTIONS} $dbnm default "insert into t1(a,b,c) values ($j,x'1234567890','abcdef')" &>> insert.log
    let j=j+1  
done

# Verify
x=$(cdb2sql -s ${CDB2_OPTIONS} $dbnm default 'select count(*) from t1')
if [[ $x != "(count(*)=10)" ]]; then
    echo "failed to load db (x=$x)"
    exit 1
fi

# Coprocess
coproc stdbuf -oL cdb2sql -s ${CDB2_OPTIONS} $dbnm default -
cpid=$!
echo me: $$ COPROC $cppid fd in ${COPROC[0]} out ${COPROC[1]}


trap "kill -9 $cpid" INT EXIT

echo "set transaction snapshot isolation" >&${COPROC[1]}
echo "begin">&${COPROC[1]}
echo "select * from t1 where a = 1">&${COPROC[1]}
read -ru ${COPROC[0]} out
echo "First read: $out" >> out.log

if [[ "$out" != "(a=1, b=x'1234567890', c='abcdef')" ]]; then
    echo "Error selecting initial row"
    kill -9 $cpid
    exit 1
fi

# Delete a row out of band
cdb2sql ${CDB2_OPTIONS} $dbnm default "delete from t1 where a = 1" &>> delete.log

# Try the same select again
echo "select * from t1 where a = 1" >&${COPROC[1]}
read -ru ${COPROC[0]} out
echo "Second read: $out" >> out.log

if [[ "$out" != "(a=1, b=x'1234567890', c='abcdef')" ]]; then
    echo "Error selecting shadow row"
    kill -9 $cpid
    exit 1
fi

echo "commit" >&${COPROC[1]}
echo "begin" >&${COPROC[1]}
echo "update t1 set c='xx' where a = 2" >&${COPROC[1]}
#update does not print anything: read -ru ${COPROC[0]} out

# Update this same row from a different session
cdb2sql ${CDB2_OPTIONS} $dbnm default "update t1 set c='yy' where a = 2" &>> update.log
echo "select * from t1 where a = 2" >&${COPROC[1]}
read -ru ${COPROC[0]} out
echo "Third read: $out" >> out.log

if [[ "$out" != "(a=2, b=x'1234567890', c='xx')" ]]; then
    echo "Error on first-committer-wins test"
    kill -9 $cpid
    exit 1
fi

echo "rollback" >&${COPROC[1]}
echo "quit" >&${COPROC[1]}

trap - INT EXIT

echo "Success"
