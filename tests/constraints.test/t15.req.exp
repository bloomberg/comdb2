[drop table if exists c] rc 0
[drop table if exists p] rc 0
[create table p {schema{ cstring i[3] int j} keys{ "pki" = i dup "pkj" = j }}] rc 0
[create table c {schema{ cstring a[3] int b} keys{ "ckb" = b dup "cka" = a} constraints{"cka" -> <"p" : "pki"> on update cascade on delete cascade }}] rc 0
(comment='only one value in the stripes')
[select "only one value in the stripes" as comment] rc 0
(rows inserted=1)
[insert into p values ("aa", 1)] rc 0
(rows inserted=1)
[insert into c values ("aa", 1)] rc 0
(comment='this should succeed')
[select "this should succeed" as comment] rc 0
[begin] rc 0
[update p set i = "hh" where i = "aa"] rc 0
[update c set b = 10 where b = 1] rc 0
[commit] rc 0
(a='hh', b=10)
[select * from c order by a] rc 0
(i='hh', j=1)
[select * from p order by i] rc 0
(comment='putting back to orig')
[select "putting back to orig" as comment] rc 0
[begin] rc 0
[update p set i = "aa" where i = "hh"] rc 0
[update c set b = 1 where b = 10] rc 0
[commit] rc 0
(a='aa', b=1)
[select * from c order by a] rc 0
(i='aa', j=1)
[select * from p order by i] rc 0
(comment='reversing the order of updates')
[select "reversing the order of updates" as comment] rc 0
[begin] rc 0
[update c set b = 10 where b = 1] rc 0
[update p set i = "hh" where i = "aa"] rc 0
[commit] rc 0
(a='hh', b=10)
[select * from c order by a] rc 0
(i='hh', j=1)
[select * from p order by i] rc 0
(comment='putting back to orig')
[select "putting back to orig" as comment] rc 0
[begin] rc 0
[update p set i = "aa" where i = "hh"] rc 0
[update c set b = 1 where b = 10] rc 0
[commit] rc 0
(a='aa', b=1)
[select * from c order by a] rc 0
(i='aa', j=1)
[select * from p order by i] rc 0
(rows inserted=1)
[insert into p values ("bb", 2)] rc 0
(rows inserted=1)
[insert into c values ("bb", 2)] rc 0
(rows inserted=1)
[insert into p values ("cc", 3)] rc 0
(rows inserted=1)
[insert into c values ("cc", 3)] rc 0
(rows inserted=1)
[insert into p values ("dd", 4)] rc 0
(rows inserted=1)
[insert into c values ("dd", 4)] rc 0
(comment='should succeed as well')
[select "should succeed as well" as comment] rc 0
[begin] rc 0
[update p set i = "hh" where i = "aa"] rc 0
[update c set b = 10 where b = 1] rc 0
[commit] rc 0
(a='bb', b=2)
(a='cc', b=3)
(a='dd', b=4)
(a='hh', b=10)
[select * from c order by a] rc 0
(i='bb', j=2)
(i='cc', j=3)
(i='dd', j=4)
(i='hh', j=1)
[select * from p order by i] rc 0
(comment='putting back to orig')
[select "putting back to orig" as comment] rc 0
[begin] rc 0
[update p set i = "aa" where i = "hh"] rc 0
[update c set b = 1 where b = 10] rc 0
[commit] rc 0
(a='aa', b=1)
(a='bb', b=2)
(a='cc', b=3)
(a='dd', b=4)
[select * from c order by a] rc 0
(i='aa', j=1)
(i='bb', j=2)
(i='cc', j=3)
(i='dd', j=4)
[select * from p order by i] rc 0
(comment='reversing the order again')
[select "reversing the order again" as comment] rc 0
[begin] rc 0
[update c set b = 10 where b = 1] rc 0
[update p set i = "hh" where i = "aa"] rc 0
[commit] rc 0
(a='bb', b=2)
(a='cc', b=3)
(a='dd', b=4)
(a='hh', b=10)
[select * from c order by a] rc 0
(i='bb', j=2)
(i='cc', j=3)
(i='dd', j=4)
(i='hh', j=1)
[select * from p order by i] rc 0
(comment='putting back to orig')
[select "putting back to orig" as comment] rc 0
[begin] rc 0
[update p set i = "aa" where i = "hh"] rc 0
[update c set b = 1 where b = 10] rc 0
[commit] rc 0
(a='aa', b=1)
(a='bb', b=2)
(a='cc', b=3)
(a='dd', b=4)
[select * from c order by a] rc 0
(i='aa', j=1)
(i='bb', j=2)
(i='cc', j=3)
(i='dd', j=4)
[select * from p order by i] rc 0
(out='Verify succeeded.')
[exec procedure sys.cmd.verify("p")] rc 0
(out='Verify succeeded.')
[exec procedure sys.cmd.verify("c")] rc 0
