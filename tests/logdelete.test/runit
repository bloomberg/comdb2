#!/usr/bin/env bash
bash -n "$0" | exit 1

set -e

# Grab my database name.
dbnm=$1

# Try this many times to see an archive 
seen_iter=${2:-200}

# Try this many times to see an archive 
clean_iter=${3:-5}

# Let the testcase timeout fail us
target=5

seen_count=0
seen_archives=0
seen_clear=0

count=0
cdb2sql ${CDB2_OPTIONS} $dbnm default 'select comdb2_dbname()'

master=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | xargs echo`


# Count the number of logs that are ready to archive
function count_archive
{
    typeset dbnm=$1
    cdb2sql --tabs ${CDB2_OPTIONS} --host $master $dbnm 'exec procedure sys.cmd.send("bdb log_archive")' | egrep 'log.00000' | wc -l
}


# Let the test
while [[ "$seen_archives" -eq "0" && "$count" -lt "$seen_iter" ]]
do
    #comdb2sc -m $dbnm send pushlogs $target
    cdb2sql --tabs ${CDB2_OPTIONS} --host $master $dbnm "exec procedure sys.cmd.send('pushlogs $target')"
    sleep 3

    seen_count="$(count_archive $dbnm)"

    # Didn't see anything that needed to be archived: try again
    if [[ "$seen_count" == "0" ]]; then

        let target=target+1
        let count=count+1

    # Saw something that needed to be archived: break out of loop
    else

        # Break out of this loop
        seen_archives=1

    fi

done


if [[ "$seen_archives" == "0" ]]; then

    echo "Never saw any archives, failing testcase"
    exit 1

fi

echo "$dbnm has accrued $seen_count logfiles."

cluster=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("bdb cluster")' | grep lsn | cut -f1 -d':' `
for node in $cluster ; do 
    cdb2sql ${CDB2_OPTIONS} --host $node $dbnm 'exec procedure sys.cmd.send("bdb setattr MIN_KEEP_LOGS 1")'
    cdb2sql ${CDB2_OPTIONS} --host $node $dbnm 'exec procedure sys.cmd.send("flush")'
done


# Sleep a bit
sleep 10

count=0

while [[ "$seen_clear" == "0" && "$count" -lt "$clean_iter" ]]; do

    seen_count="$(count_archive $dbnm)"

    if [ "$seen_count" -eq "0" ]; then

        seen_clear=1

    else

        echo "Waiting for $seen_count logfiles to be deleted."

        for node in $cluster ; do 
            cdb2sql --tabs ${CDB2_OPTIONS} --host $node $dbnm "exec procedure sys.cmd.send('flush')"
        done

        sleep 30
        let count=count+1

    fi

done

if [[ "$seen_clear" == "0" ]]; then

    echo "Archives were never cleared, failing testcase"
    exit 1

fi

echo "Logfiles deleted!  Success!"
