#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'create table t (i int)'
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'create index t_i on t(i)'
for i in `seq 1 10`; do
  yes "insert into t values ($i)" | head -2000 | cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default - >/dev/null
done

cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("flush")'
sleep 2
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'analyze t 100'

# Don't need the order by - samples are already sorted
cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'select sample from sqlite_stat4' >stat4.actual

diff stat4.actual stat4.expected

# test analyze abort
host=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'select comdb2_host()'`
# force random recover deadlock to slow down the analyze
cdb2sql ${CDB2_OPTIONS} $dbnm --host $host 'exec procedure sys.cmd.send("random_lock_release_interval 100")'
# analyze in the background
cdb2sql ${CDB2_OPTIONS} $dbnm --host $host 'analyze t 100' &
# wait for it to be dispatched
sleep 2
# abort
cdb2sql ${CDB2_OPTIONS} $dbnm --host $host 'exec procedure sys.cmd.send("analyze abort")'

wait
