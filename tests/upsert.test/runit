#!/usr/bin/env bash
bash -n "$0" | exit 1

dbname=$1
if [[ -z $dbname ]] ; then
    echo dbname missing
    exit 1
fi

# runstepper
function runstepper
{
    # print debug trace
    [[ "$debug" == "1" ]] && set -x

    # args
    typeset db=$1
    typeset tcs=$2
    typeset log=$3

    # teststepper
    typeset stp=${TESTSBUILDDIR}/stepper

    #echo "> $stp $db $tcs > $log 3>&1"

    # execute
    $stp $db $tcs > $log 2>&1
}

# verify the result
function verify
{
    # args
    typeset testname=$1

    cmd="diff ${testname}.expected ${testname}.output"
    $cmd > /dev/null

    if [[  $? -eq 0 ]]; then
        echo "passed $testname"
    else
        echo "failed $testname"
        echo "see diffs here: $HOSTNAME"
        echo "> diff -u ${PWD}/{$testname.expected,$testname.output}"
        echo
        exit 1
    fi

}

# 1) run simple tests
${TESTSROOTDIR}/tools/compare_results.sh -s -d $dbname -r sql
[ $? -eq 0 ] || exit 1

# 2) run trans tests
for transtest in `ls t*.trans` ; do
    testname=`echo $transtest | cut -d "." -f 1`
    output=$testname.output

    runstepper $dbname $transtest $output
    cat ${testname}.output | perl -pe "s/.n_writeops_done=([0-9]+)/rows inserted='\1'/; s/BLOCK2_SEQV2\(824\)/BLOCK_SEQ(800)/; s/OP #2 BLOCK_SEQ/OP #3 BLOCK_SEQ/; s/genid=\w+/genid=xxxx/;" > tmp
    mv tmp  ${testname}.output

    verify $testname
done

# 3) run stress test
./upsert_stress.sh ${CDB2_OPTIONS} $dbname > upsert_stress.output
if [[  $? -eq 0 ]]; then
    echo "passed upsert_stress.sh"
else
    echo "failed upsert_stress.sh"
    cat upsert_stress.output
    exit 1
fi

echo "Testcase passed."
exit 0
