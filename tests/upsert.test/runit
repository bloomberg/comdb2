#!/usr/bin/env bash
bash -n "$0" | exit 1

source $TESTSROOTDIR/tools/runstepper.sh

dbname=$1
if [[ -z $dbname ]] ; then
    echo dbname missing
    exit 1
fi


# verify the result
function verify
{
    # args
    typeset testname=$1

    cmd="diff ${testname}.expected ${testname}.output"
    $cmd > /dev/null

    if [[  $? -eq 0 ]]; then
        echo "passed $testname"
    else
        echo "failed $testname"
        echo "see diffs here: $HOSTNAME"
        echo "> diff -u ${PWD}/{$testname.expected,$testname.output}"
        echo
        exit 1
    fi

}

# 1) run simple tests
for testreq in `ls t*.sql` ; do
    testname=`echo $testreq | cut -d "." -f 1`
    cmd="cdb2sql -s -f $testreq ${CDB2_OPTIONS} $dbname default "
    echo $cmd "> $testname.output"
    $cmd 2>&1 | perl -pe "s/.n_writeops_done=([0-9]+)/rows inserted='\1'/; s/BLOCK2_SEQV2\(824\)/BLOCK_SEQ(800)/; s/OP #2 BLOCK_SEQ/OP #3 BLOCK_SEQ/;" > $testname.output

    verify $testname
done

# 2) run trans tests
for transtest in `ls t*.trans` ; do
    testname=`echo $transtest | cut -d "." -f 1`
    output=$testname.output

    runstepper $dbname $transtest $output
    cat ${testname}.output | perl -pe "s/.n_writeops_done=([0-9]+)/rows inserted='\1'/; s/BLOCK2_SEQV2\(824\)/BLOCK_SEQ(800)/; s/OP #2 BLOCK_SEQ/OP #3 BLOCK_SEQ/; s/genid=\w+/genid=xxxx/;" > tmp
    mv tmp  ${testname}.output

    verify $testname
done

# 3) run stress test
./upsert_stress.sh ${CDB2_OPTIONS} $dbname > upsert_stress.output
if [[  $? -eq 0 ]]; then
    echo "passed upsert_stress.sh"
else
    echo "failed upsert_stress.sh"
    cat upsert_stress.output
    exit 1
fi

# 4) run tests with --showeffects
showeffectsfiles=`ls *.showeffects`
[ $? -eq 0 ] || exit 1
for showeffectsfile in $showeffectsfiles; do
    echo "$showeffectsfile"
    testname=`echo $showeffectsfile | cut -d "." -f 1`

    cmd="cdb2sql ${CDB2_OPTIONS} $script_mode --showeffects -f $showeffectsfile $dbname default "
    echo $cmd "> $testname.output"
    $cmd 2>&1 | perl -pe "s/.n_writeops_done=([0-9]+)/rows inserted='\1'/;
                          s/BLOCK2_SEQV2\(824\)/BLOCK_SEQ(800)/;
                          s/OP #2 BLOCK_SEQ/OP #3 BLOCK_SEQ/;
                          s/rrn ([0-9]+) genid 0x([a-zA-Z0-9]+)/rrn xx genid xx/;"\
                          > $testname.output
    verify $testname
done

# 5) Bug: Query effects when multiple transactions are executing in parallel
./upsert_effects.sh ${CDB2_OPTIONS} $dbname > upsert_effects.output
if [[  $? -eq 0 ]]; then
    echo "passed upsert_effects.sh"
else
    echo "failed upsert_effects.sh"
    cat upsert_effects.output
    exit 1
fi

echo "Testcase passed."
exit 0
