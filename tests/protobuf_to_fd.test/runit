#### Verify that serializing protobuf directly to fd reduces memory footprint

#!/usr/bin/env bash
bash -n "$0" | exit 1

dbnm=$1

set -e

# Make sure we talk to the same host
host=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'SELECT comdb2_host()'`

cdb2sql $dbnm --host $host 'CREATE TABLE t (b BLOB)'

sleep 1

# Peak memory before, excluding sqlite, bdb, and berkdb which hold row data (aka Mem structs)
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat group_by_name')"
before=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat')" | grep total | tail -1 | awk '{print $NF}'`
sqlite=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $NF}'`
bdb=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat bdb')" | grep total | tail -1 | awk '{print $NF}'`
berkdb=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')" | grep total | tail -1 | awk '{print $NF}'`
before=`echo "$before - $sqlite - $bdb - $berkdb" | bc`

# 32MB * 8 = 256MB row data
cdb2sql $dbnm --host $host 'WITH t(b) AS (SELECT RANDOMBLOB(33554432)) SELECT b, b, b, b, b, b, b, b FROM t' >/dev/null

# Peak memory after, excluding sqlite, bdb, and berkdb which hold row data (aka Mem structs)
cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat group_by_name')"
after=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat')" | grep total | tail -1 | awk '{print $NF}'`
sqlite=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat sqlite')" | grep total | tail -1 | awk '{print $NF}'`
bdb=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat bdb')" | grep total | tail -1 | awk '{print $NF}'`
berkdb=`cdb2sql --tabs $dbnm --host $host "EXEC PROCEDURE sys.cmd.send('memstat berkdb')" | grep total | tail -1 | awk '{print $NF}'`
after=`echo "$after - $sqlite - $bdb - $berkdb" | bc`

# Should be almost identical
ratio=`echo "$after/$before" | bc`
echo "$after/$before=$ratio"
if [ $ratio -gt 1 ]; then
  echo "Ratio is too high: $ratio" >&2
  exit 1
fi

#Should read successfully
cdb2sql --tabs $dbnm --host $host "select randomblob(1000000000)" > /dev/null
