#!/usr/bin/env bash
bash -n "$0" | exit 1

CNT=100
i=0
dbnm=$1
set -e
set -x

cdb2sql ${CDB2_OPTIONS} $dbnm default "create table t1 options rec none { `cat t1.csc2 ` }"

while [ $i -lt $CNT ] ; do
 let i=i+1
 echo "insert into t1(a, b) values (1, '0123456789')"
done | cdb2sql ${CDB2_OPTIONS} $dbnm default -

function getmaster {
    cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("bdb cluster")' | grep MASTER | cut -f1 -d":" | tr -d '[:space:]'
}

function failexit
{
    echo "Failed $1"
    exit -1
}



master=`getmaster`
cluster=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm default 'exec procedure sys.cmd.send("bdb cluster")' | grep lsn | cut -f1 -d':' `
for node in $cluster ; do
    cdb2sql ${CDB2_OPTIONS} --host $node $dbnm "exec procedure sys.cmd.send('flush')"
done

out=$TMPDIR/t1_dump.txt

myhostname=`hostname`
if [ "$master" != "$myhostname" ] ; then
    ssh -o StrictHostKeyChecking=no $master "ln -f ${COMDB2_EXE} ${CDB2DUMP_EXE}"
    ssh -o StrictHostKeyChecking=no $master "find $DBDIR | grep '/t1_.*.datas0' | xargs ${CDB2DUMP_EXE} " > $out
else
    find $DBDIR | grep '/t1_.*.datas0' | xargs ${CDB2DUMP_EXE} -f $out
fi

lc=$(wc $out | awk '{print $1,$2,$3}')
if [ "$lc" != "207 207 209284" ] ; then
    failexit "wc is not correct for $out: $lc"
fi


PATTERN="00010000000405088000000108303132333435363738390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

pcnt=`grep -c $PATTERN $out`
if [ $pcnt -ne $CNT ] ; then
   failexit "$cnt -ne $CNT"
fi

echo Success
