#!/usr/bin/env bash
bash -n "$0" | exit 1

[ -z "$CLUSTER" ] && { echo "skipping newsi_temptables test, it's a cluster test"; exit 0; }

db=$1

cdb2sql --tabs ${CDB2_OPTIONS} $db default "CREATE TABLE t (b blob)"
replicant=`cdb2sql --tabs ${CDB2_OPTIONS} $db default 'select comdb2_host()'`
master=`cdb2sql --tabs ${CDB2_OPTIONS} $db default 'select host from comdb2_cluster where is_master="Y"'`

cdb2sql --tabs $db --host $master 'exec procedure sys.cmd.send("flush")'

# Kill replicant
echo killing db on $replicant
ssh -o StrictHostKeyChecking=no $replicant "pgrep -a comdb2 | grep $db | awk '{print \$1}' | xargs kill -9"

# Push 200 log files with big bloby inserts
cur=$(cdb2sql --tabs $db --host $master "exec procedure sys.cmd.send('bdb logstat')" | grep st_cur_file | awk '{print $NF}')
target=$(( 200 + cur ))
while [[ $cur -lt $target ]]; do
    cdb2sql $db -tabs --host $master "INSERT INTO t VALUES (randomblob(1048576))" >/dev/null
    cur=$(cdb2sql --tabs $db --host $master "exec procedure sys.cmd.send('bdb logstat')" | grep st_cur_file | awk '{print $NF}')
done

# do a checkpoint here
cdb2sql --tabs $db --host $master 'exec procedure sys.cmd.send("flush")'

# Give db enough time to clean up newsi temptables
sleep 20

cdb2sql $db -tabs --host $master "exec procedure sys.cmd.send('bdb log_archive')"
cdb2sql $db -tabs --host $master "exec procedure sys.cmd.send('bdb temptable')"

# Make sure we don't keep too many temptables
nactive=$(cdb2sql $db -tabs --host $master "exec procedure sys.cmd.send('bdb temptable')" | grep '# active' | awk '{ print $NF }')
if [ $nactive -gt 40 ]; then
    echo 'too many temptables'
    exit 1
fi
