#!/usr/bin/env bash
bash -n "$0" | exit 1

set -x
source ${TESTSROOTDIR}/tools/runit_common.sh

dbnm=$1

if [ "x$dbnm" == "x" ] ; then
    failexit "need a DB name"
fi

wait_for_db ${DBNAME}
if [[ $? != 0 ]] ; then
    failexit "DB $DBNAME not ready"
fi

$CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default "create table t(a int);"
host=$($CDB2SQL_EXE --tabs ${CDB2_OPTIONS} ${DBNAME} default "select host from comdb2_cluster where is_master='N' and coherent_state='coherent' limit 1")
master=$($CDB2SQL_EXE --tabs ${CDB2_OPTIONS} ${DBNAME} default "select host from comdb2_cluster where is_master='Y'")
$CDB2SQL_EXE --host $host ${CDB2_OPTIONS} ${DBNAME} default "exec procedure sys.cmd.send('exit')"
sleep 30
$CDB2SQL_EXE ${CDB2_OPTIONS} ${DBNAME} default -<<'EOF'
set maxtransize 1000000
insert into t select value from generate_series(1,1000000);
EOF

cluster=$($CDB2SQL_EXE --tabs ${CDB2_OPTIONS} ${DBNAME} default "select host from comdb2_cluster where host!='$host'")

ssh -n -o StrictHostKeyChecking=no $host /opt/bb/bin/comdb2 ${DBNAME} --lrl ${DBDIR}/${DBNAME}.lrl >dbout 2>&1 &

failed=0

while :; do
    start=$(date +%s)
    ${CDB2SQL_EXE} --tabs ${CDB2_OPTIONS} ${DBNAME} default "insert into t values(1)"
    end=$(date +%s)
    if [[ $(($end - $start)) -gt 2 ]]; then
        echo "Slow write: $(($end - $start)) seconds"
        failed=1
        break
    fi
    sleep 0.1
    # keep running until the node is coherent or we had a long event
    ${CDB2SQL_EXE} --tabs --host ${master} ${CDB2_OPTIONS} ${DBNAME} "select * from comdb2_cluster"
    state=$(${CDB2SQL_EXE} --tabs --host ${master} ${CDB2_OPTIONS} ${DBNAME} "select coherent_state from comdb2_cluster where host='$host'")
    if [[ "$state" == "coherent" ]]; then
        echo "Node is coherent, stopping test"
        ${CDB2SQL_EXE} --tabs --host ${master} ${CDB2_OPTIONS} ${DBNAME} "select * from comdb2_cluster"
        break
    fi
done

if [[ $failed -ne 0 ]]; then
    echo "Failed"
    exit 1
fi

wait_for_db ${DBNAME}

echo "Success"
