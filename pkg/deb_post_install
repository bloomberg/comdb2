#!/bin/sh
# postinst script for Comdb2
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        adduser --quiet --system --group --shell /bin/bash comdb2
        for d in etc lib log var var/lib var/log; do
            mkdir -p @CMAKE_INSTALL_PREFIX@/$d/cdb2
            chown comdb2:comdb2 @CMAKE_INSTALL_PREFIX@/$d/cdb2
        done
        mkdir -p @CMAKE_INSTALL_PREFIX@/etc/cdb2/config/comdb2.d
        chown comdb2:comdb2 @CMAKE_INSTALL_PREFIX@/etc/cdb2/config/comdb2.d
        echo 'PATH=$PATH:@CMAKE_INSTALL_PREFIX@/bin' >> /home/comdb2/.bashrc
        chown comdb2:comdb2 /home/comdb2/.bashrc
        if [ ! -e /.dockerenv ]; then
            cp @CMAKE_INSTALL_PREFIX@/lib/pkgconfig/cdb2api.pc /usr/share/pkgconfig/cdb2api.pc
            cp @CMAKE_INSTALL_PREFIX@/lib/systemd/system/pmux.service /lib/systemd/system/
            cp @CMAKE_INSTALL_PREFIX@/lib/systemd/system/cdb2sockpool.service /lib/systemd/system/
            systemctl daemon-reload
            systemctl stop pmux
            systemctl start pmux
            systemctl stop cdb2sockpool
            systemctl start cdb2sockpool
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
