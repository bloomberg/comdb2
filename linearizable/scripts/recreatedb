#!/bin/bash

if [[ -n "$1" ]]; then
    db=$1
    shift
fi

lrlpath=""
if [[ -n "$1" ]]; then
    lrlpath=$1
    shift
fi

add_tables=1
if [[ "$1" == "noadd" ]]; then
    add_tables=0
    shift
fi

if [[ -z "$db" ]]; then
    echo "Error: db variable is not set"
    exit 1
fi

debug=0
[[ $debug == 1 ]] && set -x
pathbase=${COMDB2_PATHBASE:-/home/ubuntu/comdb2}
scripts=$pathbase/linearizable/scripts
. $scripts/setvars

if [[ -z "$lrlpath" ]]; then
    lrlpath=$pathbase/linearizable/linearizable.lrl
fi

$scripts/addmach_comdb2db $db

echo 'Heal network on cluster'
$scripts/heal $db

function wait_for_db_up {
    [[ $debug == 1 ]] && set -x
    db=$1
    stage=$2
    n=$(cdb2sql -tabs $db $stage 'select 1' 2>/dev/null)
    printf "waiting for db to come up "
    while [[ "$n" != "1" ]]; do
        printf "."
        n=$(cdb2sql -tabs $db $stage 'select 1' 2>/dev/null)
        sleep 0.1
    done
    echo
}

function wait_for_db_down {
    [[ $debug == 1 ]] && set -x
    db=$1
    pid=$(cat /tmp/$db.pid)
    printf "waiting for db to go down "
    kill -0 $pid 2>/dev/null
    while [[ $? -eq 0 ]]; do
        printf "."
        sleep 0.1
        kill -0 $pid 2>/dev/null
    done
    echo
}

printf "killing cluster "
for m in $machines; do
    printf "%s " $m
    ssh $m "kill -9 $(cat /tmp/$db.pid); rm /tmp/$db.pid" 2>/dev/null
done
echo

echo "creating db"
rm -f /tmp/$db.pid
rm -fr $dir
rm -Rf $cpdir/
mkdir $cpdir

echo "comdb2 --create --dir $cpdir $db"
comdb2 --create --dir $cpdir $db

cat $lrlpath >> $cpdir/$db.lrl

outfile=$db.out.$(date +%Y%m%d%H%M%S)

echo "comdb2 $db -lrl $cpdir/$db.lrl -pidfile /tmp/$db.pid >$cpdir/$outfile 2>&1 &"
comdb2 $db -lrl $cpdir/$db.lrl -pidfile /tmp/$db.pid >$cpdir/$outfile 2>&1 &
wait_for_db_up $db @localhost
cat >> $cpdir/$db.lrl <<EOF
cluster nodes $machines
EOF
if [[ "$add_tables" == 1 ]]; then
    echo "adding tables"
    for csc2 in $resources/*.csc2; do 
        table=${csc2##*/}
        table=${table%*.csc2}
        cdb2sql $db @localhost "create table ${table} { $(<$csc2) }"
    done
fi
cdb2sql $db @localhost "exec procedure sys.cmd.send('exit')" > /dev/null 2>&1
wait_for_db_down $db
cat >> $cpdir/$db.lrl <<EOF
cluster nodes $machines
EOF
printf "copying to cluster "
for m in $machines; do
    printf "%s " $m
    ssh $m rm -Rf $cpdir
    ssh $m mkdir -p $cpdir
    copycomdb2 $cpdir/$db.lrl $m:$cpdir $m:$cpdir
done
echo
echo "waiting for copies"
wait

#vg=/usr/bin/valgrind
vg=""
exe=/opt/bb/bin/comdb2

printf "starting cluster "
for m in $machines; do
    printf "%s " $m
    ssh $m "/opt/bb/bin/pmux -l"
    echo ssh $m "$vg $exe $db -lrl $cpdir/$db.lrl -pidfile /tmp/$db.pid > $cpdir/${outfile}.$m 2>&1 "
    ssh $m "$vg $exe $db -lrl $cpdir/$db.lrl -pidfile /tmp/$db.pid > $cpdir/${outfile}.$m 2>&1 " &
done
echo

wait_for_db_up $db dev
echo done
